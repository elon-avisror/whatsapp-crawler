{"version":3,"sources":["webpack:///./src sync ^\\.\\/.*$","webpack:///./src/extensions/sort/adapterSortabletable.js","webpack:///./src/extensions/advancedGrid/adapterEzEditTable.js","webpack:///./src/extensions/sort/sort.js","webpack:///./src/extensions/filtersVisibility/filtersVisibility.js","webpack:///./src/extensions/colsVisibility/colsVisibility.js","webpack:///./src/extensions/colOps/colOps.js","webpack:///./src/extensions/advancedGrid/advancedGrid.js","webpack:///./libs/sortabletable.js","webpack:///./node_modules/script-loader/addScript.js","webpack:///./libs/sortabletable.js?8203","webpack:///./node_modules/format-number/index.js"],"names":["map","./array","./array.js","./const","./const.js","./cookie","./cookie.js","./dom","./dom.js","./emitter","./emitter.js","./event","./event.js","./extensions/advancedGrid/adapterEzEditTable","./extensions/advancedGrid/adapterEzEditTable.js","./extensions/advancedGrid/advancedGrid","./extensions/advancedGrid/advancedGrid.js","./extensions/colOps/colOps","./extensions/colOps/colOps.js","./extensions/colsVisibility/colsVisibility","./extensions/colsVisibility/colsVisibility.js","./extensions/filtersVisibility/filtersVisibility","./extensions/filtersVisibility/filtersVisibility.js","./extensions/sort/adapterSortabletable","./extensions/sort/adapterSortabletable.js","./extensions/sort/sort","./extensions/sort/sort.js","./feature","./feature.js","./modules/alternateRows","./modules/alternateRows.js","./modules/baseDropdown","./modules/baseDropdown.js","./modules/checkList","./modules/checkList.js","./modules/clearButton","./modules/clearButton.js","./modules/dateType","./modules/dateType.js","./modules/dropdown","./modules/dropdown.js","./modules/gridLayout","./modules/gridLayout.js","./modules/hash","./modules/hash.js","./modules/help","./modules/help.js","./modules/highlightKeywords","./modules/highlightKeywords.js","./modules/loader","./modules/loader.js","./modules/markActiveColumns","./modules/markActiveColumns.js","./modules/noResults","./modules/noResults.js","./modules/paging","./modules/paging.js","./modules/popupFilter","./modules/popupFilter.js","./modules/rowsCounter","./modules/rowsCounter.js","./modules/state","./modules/state.js","./modules/statusBar","./modules/statusBar.js","./modules/storage","./modules/storage.js","./modules/toolbar","./modules/toolbar.js","./number","./number.js","./root","./root.js","./settings","./settings.js","./sort","./sort.js","./string","./string.js","./tablefilter","./tablefilter.js","./types","./types.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","AdapterSortableTable","tf","opts","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","name","desc","_settings__WEBPACK_IMPORTED_MODULE_6__","description","sorted","sortTypes","types","colTypes","sortColAtStart","sort_col_at_start","asyncSort","Boolean","async_sort","triggerIds","trigger_ids","imgPath","images_path","themesPath","imgBlank","image_blank","imgClassName","image_class_name","imgAscClassName","image_asc_class_name","imgDescClassName","image_desc_class_name","customKey","custom_key","onSortLoaded","on_sort_loaded","_types__WEBPACK_IMPORTED_MODULE_1__","onBeforeSort","on_before_sort","onAfterSort","on_after_sort","stt","enable","_feature__WEBPACK_IMPORTED_MODULE_0__","initialized","adpt","SortableTable","emitter","emit","overrideSortableTable","setSortTypes","onbeforesort","sortColumn","paging","feature","disable","onsort","paginator","getValidRows","setPage","getPage","descending","sort","on","_event__WEBPACK_IMPORTED_MODULE_3__","sortByColumnIndexHandler","colIdx","sortByColumnIndex","prototype","headerOnclick","evt","el","target","srcElement","tagName","_const__WEBPACK_IMPORTED_MODULE_5__","parentNode","msie","getCellIndex","cellIndex","oTd","i","cells","l","length","initHeader","oSortTypes","tHead","gridLayout","headTbl","headersRow","rows","img","c","style","cursor","_dom__WEBPACK_IMPORTED_MODULE_2__","appendChild","setAttribute","_headerOnclick","_sortType","updateHeaderArrows","triggers","j","push","cell","cellAttr","getAttribute","lastChild","nodeName","toLowerCase","className","getRowValue","oRow","sType","nColumn","sortTypeInfo","_sortTypeInfo","s","getInnerText","getValueFromString","getCellValue","_len","arguments","args","Array","_key","caster","sorter","addSortType","_this2","_sortTypes","eachCol","colType","type","_addDateType","decimal","decimalSeparator","_addNumberType","toUpperCase","ipAddress","sortIP","dom","trigger","elm","indexOf","colIndex","dateType","locale","getOptions","concat","value","parsedDate","parse","isNaN","Date","_number__WEBPACK_IMPORTED_MODULE_4__","off","destroy","ids","getFiltersId","idx","header","getHeaderElement","removeChild","vals","split","x","val","join","a","b","aa","bb","meta","altName","AdapterEzEditTable","cfg","_settings__WEBPACK_IMPORTED_MODULE_3__","filename","vendorPath","vendor_path","loadStylesheet","load_stylesheet","stylesheet","stylesheetName","stylesheet_name","scroll_into_view","_ezEditTable","_root__WEBPACK_IMPORTED_MODULE_4__","EditTable","_setAdvancedGrid","path","import","isImported","_toggleForInputFilter","startRow","_dom__WEBPACK_IMPORTED_MODULE_1__","undefined","refRow","base_path","basePath","editable","selectable","selection","default_selection","active_cell_css","_lastValidRowIndex","_lastRowIndex","onAfterSelection","et","selectedElm","slc","Selection","doSelect","nextRowIndex","defaultSelection","SelectRowByIndex","ClearSelections","row","SelectCell","validRowsIndex","getRowsNb","r","scrollIntoView","getCellsNb","tblCont","scrollLeft","validIndexes","validIdxLen","keyCode","Event","GetKey","isRowValid","rowIndex","d","pageLength","nbRowsPerPage","calcRowIndex","v","onBeforeSelection","nbPages","pagingEndRow","parseInt","startPagingRow","currentPageNb","onAfterChangePage","extension","GetActiveRow","GetActiveCell","fnB","on_before_selected_row","fnA","on_after_selected_row","fnD","on_before_selected_cell","fnC","on_after_selected_cell","fnE","on_added_dom_row","nbFilterableRows","reset","alternateRows","init","actions","fnF","on_after_submit","Init","ezEditTable","Set","Editable","Remove","getActiveFilterId","getColumnIndexFromFilterId","getFilterType","_const__WEBPACK_IMPORTED_MODULE_2__","toggle","_this3","__webpack_exports__","_adapterSortabletable__WEBPACK_IMPORTED_MODULE_0__","FiltersVisibility","f","_settings__WEBPACK_IMPORTED_MODULE_4__","icnExpand","expand_icon_name","icnCollapse","collapse_icon_name","contEl","btnEl","icnExpandHtml","icnCollapseHtml","defaultText","targetId","target_id","enableIcon","enable_icon","btnText","btn_text","collapseBtnHtml","expandBtnHtml","btnHtml","btn_html","btnCssClass","btn_css_class","contCssClass","cont_css_class","filtersRowIndex","filters_row_index","getFiltersRowIndex","visibleAtStart","visible_at_start","toolbarPosition","toolbar_position","_modules_toolbar__WEBPACK_IMPORTED_MODULE_5__","onBeforeShow","on_before_show","_types__WEBPACK_IMPORTED_MODULE_2__","onAfterShow","on_after_show","onBeforeHide","on_before_hide","onAfterHide","on_after_hide","getStylePath","buildUI","visible","show","span","btn","targetEl","container","firstChild","insertBefore","innerHTML","title","isDisplayed","display","fltRow","_this4","ColsVisibility","config","spanEl","tickToHide","tick_to_hide","manager","headersTbl","headers_table","headersIndex","headers_index","contElTgtId","container_target_id","headersText","headers_text","btnTgtId","btn_target_id","btnCloseText","btn_close_text","btnCloseHtml","btn_close_html","btnCloseCssClass","btn_close_css_class","spanCssClass","span_css_class","listCssClass","list_css_class","listItemCssClass","checklist_item_css_class","listSlcItemCssClass","checklist_selected_item_css_class","text","atStart","at_start","enableHover","enable_hover","enableTickAll","enable_tick_all","tickAllText","tick_all_text","_modules_toolbar__WEBPACK_IMPORTED_MODULE_7__","hiddenCols","boundMouseup","onLoaded","on_loaded","onBeforeOpen","on_before_open","onAfterOpen","on_after_open","onBeforeClose","on_before_close","onAfterClose","on_after_close","onBeforeColHidden","on_before_col_hidden","onAfterColHidden","on_after_col_hidden","onBeforeColDisplayed","on_before_col_displayed","onAfterColDisplayed","on_after_col_displayed","targetElm","contDisplay","lbl","li","isChecked","checked","hide","setHidden","hideCol","buildBtn","buildManager","onMouseup","bind","_hideAtStart","colVisEl","extNameLabel","ul","tbl","headerIndex","getHeadersRowIndex","headerRow","check","h","itm","click","cellText","_getHeaderText","liElm","checkItem","p","_hideElements","itemIndex","splice","isColHidden","showCol","_this5","hasChildNodes","childNodes","n","nodeType","nodeValue","_hideCells","_hideCol","colElms","_this6","forEach","EVENTS","ColOps","onBeforeOperation","on_before_operation","onAfterOperation","on_after_operation","labelIds","colIndexes","col","operations","operation","outputTypes","write_method","formatResults","format_result","totRowIndexes","tot_row_index","excludeRows","exclude_row","decimalPrecisions","decimal_precision","_event__WEBPACK_IMPORTED_MODULE_7__","calcAll","isInitialized","colOperations","uIndexes","nbCols","colValues","u","getVisibleColumnData","curValues","result","precisions","labels","writeType","formatResult","k","configureFormat","Number","calc","writeResult","totRow","precision","sortColumnValues","_sort__WEBPACK_IMPORTED_MODULE_3__","calcMean","calcSum","calcMin","calcMax","calcMedian","calcQ1","calcQ3","toFixed","values","reduce","y","Math","max","apply","min","nbValues","aux","floor","posa","posb","label","format","labelElm","isFinite","format_number__WEBPACK_IMPORTED_MODULE_5___default","oldNode","txtNode","replaceChild","hasType","_const__WEBPACK_IMPORTED_MODULE_4__","thousands","integerSeparator","_adapterEzEditTable__WEBPACK_IMPORTED_MODULE_0__","src","log","error","console","execScript","isIE","attachEvent","addEventListener","eval","formatter","options","negativeType","negative","negativeLeftSymbol","negativeRightSymbol","number","overrideOptions","output","charAt","replace","negativeLeftOut","noUnits","prefix","round","places","decim","slice","substr","leadingzeros","substring","truncate","padLeft","padding","buf","padRight","noSeparator","addDecimalSeparators","separator","rgx","test","decimalsSeparator","addIntegerSeparators","negativeRightOut","suffix","unformat","allowedSeparators","newNumber","negativeOut","separate","default"],"mappings":"6EAAA,IAAAA,EAAA,CACAC,UAAA,GACAC,aAAA,GACAC,UAAA,EACAC,aAAA,EACAC,WAAA,GACAC,cAAA,GACAC,QAAA,EACAC,WAAA,EACAC,YAAA,GACAC,eAAA,GACAC,UAAA,EACAC,aAAA,EACAC,+CAAA,IACAC,kDAAA,IACAC,yCAAA,IACAC,4CAAA,IACAC,6BAAA,IACAC,gCAAA,IACAC,6CAAA,IACAC,gDAAA,IACAC,mDAAA,IACAC,sDAAA,IACAC,yCAAA,IACAC,4CAAA,IACAC,yBAAA,IACAC,4BAAA,IACAC,YAAA,GACAC,eAAA,GACAC,0BAAA,GACAC,6BAAA,GACAC,yBAAA,GACAC,4BAAA,GACAC,sBAAA,GACAC,yBAAA,GACAC,wBAAA,GACAC,2BAAA,GACAC,qBAAA,GACAC,wBAAA,GACAC,qBAAA,GACAC,wBAAA,GACAC,uBAAA,GACAC,0BAAA,GACAC,iBAAA,GACAC,oBAAA,GACAC,iBAAA,GACAC,oBAAA,GACAC,8BAAA,GACAC,iCAAA,GACAC,mBAAA,GACAC,sBAAA,GACAC,8BAAA,GACAC,iCAAA,GACAC,sBAAA,GACAC,yBAAA,GACAC,mBAAA,GACAC,sBAAA,GACAC,wBAAA,GACAC,2BAAA,GACAC,wBAAA,GACAC,2BAAA,GACAC,kBAAA,GACAC,qBAAA,GACAC,sBAAA,GACAC,yBAAA,GACAC,oBAAA,GACAC,uBAAA,GACAC,oBAAA,GACAC,uBAAA,GACAC,WAAA,GACAC,cAAA,GACAC,SAAA,EACAC,YAAA,EACAC,aAAA,EACAC,gBAAA,EACAC,SAAA,GACAC,YAAA,GACAC,WAAA,EACAC,cAAA,EACAC,gBAAA,IACAC,mBAAA,IACAC,UAAA,EACAC,aAAA,GAIA,SAAAC,eAAAC,GACA,IAAAC,EAAAC,sBAAAF,GAEA,OADAG,EAAAF,GAGA,SAAAC,sBAAAF,GACA,IAAAC,EAAArF,EAAAoF,GACA,GAAAC,EAAA,EAKA,OAAAA,EAJA,IAAAG,EAAA,IAAAC,MAAA,uBAAAL,EAAA,MAEA,MADAI,EAAAE,KAAA,mBACAF,EAIAL,eAAAQ,KAAA,SAAAC,qBACA,OAAAC,OAAAF,KAAA3F,IAEAmF,eAAAW,QAAAR,uBACAS,EAAAC,QAAAb,gBACAE,GAAA,+mCC3FqBY,cAOjB,SAAAA,qBAAYC,EAAIC,GAAM,IAAAC,EAAA,mHAAAC,CAAAC,KAAAL,uBAClBG,EAAAG,2BAAAD,KAAAE,gBAAAP,sBAAAQ,KAAAH,KAAMJ,EAAID,wBAMLS,KAAOP,EAAKO,KAMjBN,EAAKO,KAAOd,OAAAe,EAAA,YAAAf,CAAYM,EAAKU,YAAa,kBAO1CT,EAAKU,QAAS,EAMdV,EAAKW,UAAYlB,OAAAe,EAAA,YAAAf,CAAYM,EAAKa,MAAOd,EAAGe,UAO5Cb,EAAKc,eAAiBrB,OAAAe,EAAA,YAAAf,CAAYM,EAAKgB,kBAAmB,MAM1Df,EAAKgB,UAAYC,QAAQlB,EAAKmB,YAM9BlB,EAAKmB,WAAa1B,OAAAe,EAAA,YAAAf,CAAYM,EAAKqB,YAAa,IAQhDpB,EAAKqB,QAAU5B,OAAAe,EAAA,YAAAf,CAAYM,EAAKuB,YAAaxB,EAAGyB,YAMhDvB,EAAKwB,SAAW/B,OAAAe,EAAA,YAAAf,CAAYM,EAAK0B,YAAa,aAM9CzB,EAAK0B,aAAejC,OAAAe,EAAA,YAAAf,CAAYM,EAAK4B,iBAAkB,cAMvD3B,EAAK4B,gBAAkBnC,OAAAe,EAAA,YAAAf,CAAYM,EAAK8B,qBACpC,aAMJ7B,EAAK8B,iBAAmBrC,OAAAe,EAAA,YAAAf,CAAYM,EAAKgC,sBACrC,cAMJ/B,EAAKgC,UAAYvC,OAAAe,EAAA,YAAAf,CAAYM,EAAKkC,WAAY,mBAM9CjC,EAAKkC,aAAezC,OAAAe,EAAA,WAAAf,CAAWM,EAAKoC,eAAgBC,EAAA,UAMpDpC,EAAKqC,aAAe5C,OAAAe,EAAA,WAAAf,CAAWM,EAAKuC,eAAgBF,EAAA,UAMpDpC,EAAKuC,YAAc9C,OAAAe,EAAA,WAAAf,CAAWM,EAAKyC,cAAeJ,EAAA,UAMlDpC,EAAKyC,IAAM,KAEXzC,EAAK0C,SA/Ga1C,yRAPwB2C,EAAA,yKA6H1C,IAAIzC,KAAK0C,YAAT,CAGA,IAAI9C,EAAKI,KAAKJ,GACV+C,EAAO3C,KAGX,GAAIT,OAAA2C,EAAA,QAAA3C,CAAQqD,eACR,MAAM,IAAIzD,MAAM,kCAIpBa,KAAK6C,QAAQC,KAAK,wBAAyB9C,KAAKJ,GAAII,KAAKS,WAEzDT,KAAK+C,wBACL/C,KAAKgD,eAELhD,KAAKgC,aAAapC,EAAII,MAGtBA,KAAKuC,IAAIU,aAAe,WACpBN,EAAKR,aAAavC,EAAI+C,EAAKJ,IAAIW,YAG3BtD,EAAGuD,QACHvD,EAAGwD,QAAQ,UAAUC,WAI7BrD,KAAKuC,IAAIe,OAAS,WAId,GAHAX,EAAKnC,QAAS,EAGVZ,EAAGuD,OAAQ,CACX,IAAII,EAAY3D,EAAGwD,QAAQ,UAE3BxD,EAAG4D,cAAa,GAChBD,EAAUf,SACVe,EAAUE,QAAQF,EAAUG,WAGhCf,EAAKN,YAAYzC,EAAI+C,EAAKJ,IAAIW,WAAYP,EAAKJ,IAAIoB,YACnDhB,EAAKE,QAAQC,KAAK,gBAAiBlD,EAAI+C,EAAKJ,IAAIW,WAC5CP,EAAKJ,IAAIoB,aAIjB,IAAI/C,EAAiB+B,EAAK/B,eACtBA,GACAZ,KAAKuC,IAAIqB,KAAKhD,EAAe,GAAIA,EAAe,IAGpDZ,KAAK6C,QAAQgB,GAAG,CAAC,QAAStE,OAAAuE,EAAA,MAAAvE,CAAMS,KAAK+D,yBAA0B/D,OAG/DA,KAAK0C,aAAc,EAEnB1C,KAAK6C,QAAQC,KAAK,mBAAoBlD,EAAII,mEAQ5BgE,EAAQ3D,GACtBL,KAAKuC,IAAIqB,KAAKI,EAAQ3D,6EAIDT,EAAIoE,EAAQ3D,GACjCL,KAAKiE,kBAAkBD,EAAQ3D,yEAO/B,IAAIsC,EAAO3C,KACPJ,EAAKI,KAAKJ,GAMdgD,cAAcsB,UAAUC,cAAgB,SAAUC,GAC9C,GAAKzB,EAAKD,YAAV,CAOA,IAFA,IAAI2B,EAAKD,EAAIE,QAAUF,EAAIG,WAEpBF,EAAGG,UAAYC,EAAA,UAAYJ,EAAGG,UAAYC,EAAA,YAC7CJ,EAAKA,EAAGK,WAGZ1E,KAAK4D,KACDhB,cAAc+B,KACV/B,cAAcgC,aAAaP,GAAMA,EAAGQ,aAUhDjC,cAAcgC,aAAe,SAAUE,GACnC,IACsBC,EADlBC,EAAQF,EAAIJ,WAAWM,MACvBC,EAAID,EAAME,OACd,IAAKH,EAAI,EAAGC,EAAMD,KAAOD,GAAOC,EAAIE,EAAGF,KACvC,OAAOA,GAOXnC,cAAcsB,UAAUiB,WAAa,SAAUC,GAC3C,IAAI7C,EAAMvC,KACV,IAAKuC,EAAI8C,MAAO,CACZ,IAAIzF,EAAG0F,WAGH,OAFA/C,EAAI8C,MAAQzF,EAAGwD,QAAQ,cAAcmC,QAAQF,MAMrD9C,EAAIiD,WAAa5F,EAAG4F,WACpB,IAAIR,EAAQzC,EAAI8C,MAAMI,KAAKlD,EAAIiD,YAAYR,MAC3CzC,EAAI9B,UAAY2E,GAAc,GAI9B,IAHA,IACIM,EAAKC,EADLV,EAAID,EAAME,OAGLH,EAAI,EAAGA,EAAIE,EAAGF,IACnBY,EAAIX,EAAMD,GACe,OAArBxC,EAAI9B,UAAUsE,IAAoC,SAArBxC,EAAI9B,UAAUsE,IAC3CY,EAAEC,MAAMC,OAAS,UACjBH,EAAMnG,OAAAuG,EAAA,UAAAvG,CAAU,MACZ,CAAC,MAAOoD,EAAKxB,QAAUwB,EAAKrB,WAChCqE,EAAEI,YAAYL,GACW,OAArBnD,EAAI9B,UAAUsE,IACdY,EAAEK,aAAa,YAAazD,EAAI9B,UAAUsE,IAE9CxF,OAAAuE,EAAA,OAAAvE,CAAOoG,EAAG,QAASpD,EAAI0D,kBAEvBN,EAAEK,aAAa,YAAaZ,EAAWL,IACvCY,EAAEO,UAAY,QAGtB3D,EAAI4D,sBAMRvD,cAAcsB,UAAUiC,mBAAqB,WACzC,IACInB,EAAOC,EAAGS,EAGd,GAAI/C,EAAK7B,WAAsC,EAAzB6B,EAAK1B,WAAWiE,OAAY,CAC9C,IAAIkB,EAAWzD,EAAK1B,WACpB+D,EAAQ,GACRC,EAAImB,EAASlB,OACb,IAAK,IAAImB,EAAI,EAAGA,EAAIpB,EAAGoB,IACnBrB,EAAMsB,KAAK/G,OAAAuG,EAAA,IAAAvG,CAAI6G,EAASC,SAEzB,CACH,IAAKrG,KAAKqF,MACN,OAGJJ,GADAD,EAfMhF,KAeMqF,MAAMI,KAfZzF,KAeqBwF,YAAYR,OAC7BE,OAEd,IAAK,IAAIH,EAAI,EAAGA,EAAIE,EAAGF,IAAK,CACxB,IAAIwB,EAAOvB,EAAMD,GACjB,GAAKwB,EAAL,CAGA,IAAIC,EAAWD,EAAKE,aAAa,aAChB,OAAbD,GAAkC,SAAbA,IAEc,SADnCd,EAAMa,EAAKG,WAAaH,GAChBI,SAASC,gBACblB,EAAMnG,OAAAuG,EAAA,UAAAvG,CAAU,MACZ,CAAC,MAAOoD,EAAKxB,QAAUwB,EAAKrB,WAChCiF,EAAKR,YAAYL,IAEjBX,IA/BF/E,KA+BYkD,WACVwC,EAAImB,UAAYlE,EAAKnB,aAAe,KAC/BxB,KAAK2D,WACFhB,EAAKf,iBACLe,EAAKjB,iBAEbgE,EAAImB,UAAYlE,EAAKnB,iBAarCoB,cAAcsB,UAAU4C,YAAc,SAAUC,EAAMC,EAAOC,GACzD,IAEIC,EAFMlH,KAEamH,cAAcH,GACrC,GAAIE,GAAgBA,EAAaJ,YAC7B,OAAOI,EAAaJ,YAAYC,EAAME,GAE1C,IAAItB,EAAIoB,EAAK/B,MAAMiC,GACfG,EAAIxE,cAAcyE,aAAa1B,GACnC,OARU3F,KAQCsH,mBAAmBF,EAAGJ,IASrCpE,cAAcyE,aAAe,SAAUd,GACnC,GAAKA,EAGL,OAAIA,EAAKE,aAAa9D,EAAKb,WAChByE,EAAKE,aAAa9D,EAAKb,WAEvBlC,EAAG2H,aAAahB,sDAQd,QAAAiB,EAAAC,UAAAvC,OAANwC,EAAM,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAANF,EAAME,GAAAH,UAAAG,GAAA,IAEZ7I,EAAmC2I,EAFvB,GAERG,EAA+BH,EAFvB,GAEAI,EAAuBJ,EAFvB,GAEQZ,EAAeY,EAFvB,GAGjB9E,cAAcsB,UAAU6D,YAAYhJ,EAAI8I,EAAQC,EAAQhB,uDAO7C,IAAAkB,EAAAhI,KACPJ,EAAKI,KAAKJ,GACVa,EAAYT,KAAKS,UACjBwH,EAAa,GAEjBrI,EAAGsI,QAAQ,SAACnD,GACR,IAAIoD,EACJ,GAAI1H,EAAUsE,GAEV,GADAoD,EAAU1H,EAAUsE,GAChBxF,OAAA2C,EAAA,MAAA3C,CAAM4I,IACN,GAAIA,EAAQC,OAAS3D,EAAA,KACjB0D,EAAUH,EAAKK,aAAatD,EAAGtE,QAE9B,GAAI0H,EAAQC,OAAS3D,EAAA,iBAAkB,CACxC,IAAI6D,EAAUH,EAAQG,SAAW1I,EAAG2I,iBACpCJ,EAAUH,EAAKQ,eAAezD,EAAGuD,SAGrCH,EAAUA,EAAQvB,iBACFnC,EAAA,KACZ0D,EAAUH,EAAKK,aAAatD,EAAGtE,GAE1B0H,IAAY1D,EAAA,kBACjB0D,IAAY1D,EAAA,OACZ0D,EAAUH,EAAKQ,eAAezD,EAAGnF,EAAG2I,kBAE/BJ,IAAY1D,EAAA,OAEjB0D,EAAU,aAIlBA,EAAU1D,EAAA,OAEdwD,EAAW3B,KAAK6B,KAMpBnI,KAAK+H,YAAY,wBAAyBnF,cAAc6F,aACxDzI,KAAK+H,YAAYtD,EAAA,QACjBzE,KAAK+H,YAAYtD,EAAA,WAAYiE,UAAWC,QAExC3I,KAAKuC,IAAM,IAAIK,cAAchD,EAAGgJ,MAAOX,GAGnCjI,KAAKc,WAAsC,EAAzBd,KAAKiB,WAAWiE,QAAY,WAE9C,IADA,IAAIkB,EAAW4B,EAAK/G,WACXoF,EAAI,EAAGA,EAAID,EAASlB,OAAQmB,IACjC,GAAoB,OAAhBD,EAASC,GAAb,CAGA,IAAIwC,EAAUtJ,OAAAuG,EAAA,IAAAvG,CAAI6G,EAASC,IACvBwC,IACAA,EAAQjD,MAAMC,OAAS,UAEvBtG,OAAAuE,EAAA,OAAAvE,CAAOsJ,EAAS,QAAS,SAACzE,GACtB,IAAI0E,EAAM1E,EAAIE,OACT0D,EAAKpI,GAAGgE,MAGboE,EAAKzF,IAAIzB,UAAUsF,EAAS2C,QAAQD,EAAI/J,OAE5C8J,EAAQ7C,aAAa,YAAaiC,EAAW5B,MAjBP,qDAuBzC2C,EAAUtI,GACnB,IAAId,EAAKI,KAAKJ,GACVqJ,EAAWrJ,EAAGwD,QAAQ,YACtB8F,EAASD,EAASE,WAAWH,EAAUtI,GAAOwI,QAAUtJ,EAAGsJ,OAC3Df,EAAO,GAAAiB,OAAM3E,EAAA,KAAN,KAAA2E,OAAcF,GAOzB,OALAlJ,KAAK+H,YAAYI,EAAS,SAACkB,GACvB,IAAIC,EAAaL,EAASM,MAAMF,EAAOH,GAEvC,OAAOM,OAAOF,GAAc,IAAIG,MAAM,QAAkBH,IAErDnB,wDAGIa,EAAUV,GACrB,IAAIH,EAAO,GAAAiB,OAAM3E,EAAA,kBAAN2E,OAAqC,MAAZd,EAAkB,GAAK,WAK3D,OAHAtI,KAAK+H,YAAYI,EAAS,SAACkB,GACvB,OAAO9J,OAAAmK,EAAA,MAAAnK,CAAQ8J,EAAOf,KAEnBH,4CAOP,GAAKnI,KAAK0C,YAAV,CAGA,IAAI9C,EAAKI,KAAKJ,GACdI,KAAK6C,QAAQ8G,IAAI,CAAC,QAASpK,OAAAuE,EAAA,MAAAvE,CAAMS,KAAK+D,yBAA0B/D,OAChEA,KAAKQ,QAAS,EACdR,KAAKuC,IAAIqH,UAGT,IADA,IAAIC,EAAMjK,EAAGkK,eACJC,EAAM,EAAGA,EAAMF,EAAI3E,OAAQ6E,IAAO,CACvC,IAAIC,EAASpK,EAAGqK,iBAAiBF,GAC7BrE,EAAMnG,OAAAuG,EAAA,IAAAvG,CAAIyK,EAAQ,OAEH,IAAftE,EAAIR,QACJ8E,EAAOE,YAAYxE,EAAI,IAG/B1F,KAAK0C,aAAc,+BAQ3B,SAASgG,UAAUW,GACf,IAAIc,EAAOd,EAAMe,MAAM,KACvB,IAAK,IAAIC,KAAKF,EAAM,CAEhB,IADA,IAAIG,EAAMH,EAAKE,GACJC,EAAIpF,OAAR,GACHoF,EAAM,IAAMA,EAEhBH,EAAKE,GAAKC,EAEd,OAAOH,EAAKI,KAAK,KAGrB,SAAS5B,OAAO6B,EAAGC,GACf,IAAIC,EAAKhC,UAAU8B,EAAEnB,MAAMzC,eACvB+D,EAAKjC,UAAU+B,EAAEpB,MAAMzC,eAC3B,OAAI8D,IAAOC,EACA,EACAD,EAAKC,GACJ,EAED,EAvBfhL,EAAqBiL,KAAO,CAACC,QAAS,gmCCxftC,IAQqBC,cAQjB,SAAAA,mBAAYlL,EAAImL,GAAK,IAAAjL,EAAA,mHAAAC,CAAAC,KAAA8K,qBACjBhL,EAAAG,2BAAAD,KAAAE,gBAAA4K,oBAAA3K,KAAAH,KAAMJ,EAAIkL,sBAMLzK,KAAOd,OAAAyL,EAAA,YAAAzL,CAAYwL,EAAIxK,YAAa,uBAMzCT,EAAKmL,SAAW1L,OAAAyL,EAAA,YAAAzL,CAAYwL,EAAIE,SAAU,kBAM1CnL,EAAKoL,WAAaH,EAAII,YAMtBrL,EAAKsL,eAAiBrK,QAAQgK,EAAIM,iBAMlCvL,EAAKwL,WAAa/L,OAAAyL,EAAA,YAAAzL,CAAYwL,EAAIO,WAC9BxL,EAAKoL,WAAa,mBAMtBpL,EAAKyL,eAAiBhM,OAAAyL,EAAA,YAAAzL,CAAYwL,EAAIS,gBAClC,kBAGJT,EAAIU,kBAA4C,IAAzBV,EAAIU,kBACf7L,EAAG0F,WAOfxF,EAAK4L,aAAe,KAMpB5L,EAAKiL,IAAMA,EAEXjL,EAAK0C,SA1DY1C,uRARuB2C,EAAA,uKAwErC,IAAAuF,EAAAhI,KACH,IAAIA,KAAK0C,YAAT,CAGA,IAAI9C,EAAKI,KAAKJ,GACd,GAAI+L,EAAA,KAAKC,UACL5L,KAAK6L,uBACF,CACH,IAAIC,EAAO9L,KAAKkL,WAAalL,KAAKiL,SAClCrL,EAAGmM,OAAO/L,KAAKiL,SAAUa,EAAM,kBAAM9D,EAAK6D,qBAE1C7L,KAAKoL,iBAAmBxL,EAAGoM,WAAWhM,KAAKsL,WAAY,SACvD1L,EAAGmM,OAAO/L,KAAKuL,eAAgBvL,KAAKsL,WAAY,KAAM,QAK1DtL,KAAK6C,QAAQgB,GAAG,CAAC,eAAgB,eAC7B,kBAAMmE,EAAKiE,0BAKfjM,KAAK0C,aAAc,+DAQnB,IAGIwJ,EAHAtM,EAAKI,KAAKJ,GAIVmL,EAAM/K,KAAK+K,IAMXmB,EADe,EAJP3M,OAAA4M,EAAA,IAAA5M,CAAIK,EAAGgJ,MAAO,SAIhB1D,SAAe6F,EAAImB,cACdE,EAIArB,EAAImB,UAAYtM,EAAGyM,OAGlCtB,EAAIuB,UAAYvB,EAAIuB,WAAa1M,EAAG2M,SAAW,eAC/C,IAAIC,EAAWzB,EAAIyB,SACfC,EAAa1B,EAAI2B,UAEjBD,IACA1B,EAAI4B,kBAAoB5B,EAAI4B,mBAAqB,OAGrD5B,EAAI6B,gBAAkB7B,EAAI6B,iBAAmB,mBAE7C,IAAIC,EAAqB,EACrBC,EAAgB,EAEpB,GAAIL,EAAY,CAGZ,IAAIM,EAAmB,SAAnBA,iBAA6BC,EAAIC,EAAa/N,GAC9C,IAAIgO,EAAMF,EAAGG,UAETC,EAAW,SAAXA,SAAqBC,GACrB,GAA4B,QAAxBL,EAAGM,iBAEHJ,EAAIK,iBAAiBF,OAElB,CAEHL,EAAGQ,kBAEH,IAAI3I,EAAYoI,EAAYpI,UACxB4I,EAAM7N,EAAGgJ,MAAMnD,KAAK4H,GACI,SAAxBL,EAAGM,kBAEHJ,EAAIK,iBAAiBF,GAGrBI,GAEAP,EAAIQ,WAAWD,EAAIzI,MAAMH,IAKjC,GAAIjF,EAAG+N,eAAezI,SAAWtF,EAAGgO,YAAa,CAC7C,IAAIC,EAAIjO,EAAGgJ,MAAMnD,KAAK4H,GAClBQ,GACAA,EAAEC,gBAAe,GAEjBvH,IACIA,EAAK1B,YAAejF,EAAGmO,aAAe,GACtCnO,EAAG0F,WACH1F,EAAGoO,QAAQC,WAAa,IAEA,IAAnB1H,EAAK1B,WAAmBjF,EAAG0F,WAChC1F,EAAGoO,QAAQC,WAAa,EAExB1H,EAAKuH,gBAAe,MAOpC,GAAKlO,EAAG+N,eAAR,CAGA,IAUIN,EAVAa,EAAetO,EAAG+N,eAClBQ,EAAcD,EAAahJ,OAC3BuI,EAA8B,QAAxBT,EAAGM,iBACLL,EAAYvI,WAAauI,EAE7B1G,EAAgC,OAAzB0G,EAAYtG,SAAoBsG,EAAc,KAErDmB,OAAgBhC,IAANlN,EAAkB8N,EAAGqB,MAAMC,OAAOpP,GAAK,EAEjDqP,GAAqD,IAAxCL,EAAanF,QAAQ0E,EAAIe,UAEtCrL,EAASvD,EAAGwD,QAAQ,UAEpBqL,EAAgB,KAAZL,GAA8B,KAAZA,EACjBjL,GAAUA,EAAOuL,YAAc1B,EAAG2B,cACnC,EAIR,GAAKJ,EA4Be,KAAZH,GAA8B,KAAZA,GAClBvB,EAAqBqB,EAAanF,QAAQ0E,EAAIe,UAC9C1B,EAAgBW,EAAIe,WAKZnB,EAHQ,KAAZe,EAEKvB,EAAqB4B,GAAON,EAAc,EAC5BD,EACXrB,EAAqB4B,GAEV,CAACN,EAAc,GAI7BtB,EAAqB4B,GAAMP,EAAa,GAC1BA,EAAa,GAEbA,EACXrB,EAAqB4B,GAGjC3B,EAAgBO,EAChBR,EAAqBqB,EAAanF,QAAQsE,GAC1CD,EAASC,QAnDA,CAEb,GAAII,EAAIe,SAAW1B,EAEf,GAAIW,EAAIe,UAAYN,EAAaC,EAAc,GAC3Cd,EAAea,EAAaC,EAAc,OACvC,CACH,IAAIS,EAAgB/B,EAAqB4B,EAErCpB,EADgBc,EAAc,EAA9BS,EACeV,EAAaC,EAAc,GAE3BD,EAAaU,QAKpC,GAAInB,EAAIe,UAAYN,EAAa,GAC7Bb,EAAea,EAAa,OACzB,CACH,IAAIW,EAAIX,EAAarB,EAAqB4B,GAC1CpB,EAAewB,GAAQX,EAAa,GAG5CpB,EAAgBW,EAAIe,SACpBpB,EAASC,MAkCbyB,EAAoB,SAApBA,kBAA8B9B,EAAIC,GAClC,IAAIQ,EAA8B,QAAxBT,EAAGM,iBACTL,EAAYvI,WAAauI,EAC7B,GAAIrN,EAAGuD,QACgC,EAA/BvD,EAAGwD,QAAQ,UAAU2L,QAAa,CAClC,IAAI5L,EAASvD,EAAGwD,QAAQ,UAExB4J,EAAG2B,cAAgBxL,EAAOuL,WAC1B,IAAIR,EAAetO,EAAG+N,eAClBQ,EAAcD,EAAahJ,OAC3B8J,EAAeC,SAAS9L,EAAO+L,eAAgB,IAC3CD,SAAS9L,EAAOuL,WAAY,IAChCF,EAAWf,EAAIe,SAEdA,IAAaN,EAAaC,EAAc,IACzChL,EAAOgM,gBAAkBhM,EAAO4L,QAChC5L,EAAOM,QAAQ,QAET+K,IAAaN,EAAa,IACP,IAAzB/K,EAAOgM,cACPhM,EAAOM,QAAQ,SAEV+K,EAAWN,EAAac,EAAe,IAC5CR,EAAWN,EAAaC,EAAc,GACtChL,EAAOM,QAAQ,QAGf+K,EAAWN,EAAa/K,EAAO+L,iBAC/BV,EAAWN,EAAa,IACxB/K,EAAOM,QAAQ,cA6B/B,GAtBI7D,EAAGuD,SACHvD,EAAGwD,QAAQ,UAAUgM,kBAAoB,SAAUjM,GAC/C,IAEI+J,EAFU/J,EAAOvD,GAAGyP,UAAU,gBACjB3D,aACJyB,UAETM,EAAMP,EAAIoC,eAEV7B,GACAA,EAAIK,gBAAe,GAGvB,IAAIvH,EAAO2G,EAAIqC,gBAEXhJ,GACAA,EAAKuH,gBAAe,KAOF,QAA1B/C,EAAI4B,kBAA6B,CACjC,IAAI6C,EAAMzE,EAAI0E,uBACd1E,EAAI0E,uBAAyB,WACzB,IAAI/H,EAAOD,UACXqH,EAAkBpH,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACrC8H,GACAA,EAAIrP,KAAK,KAAMuH,EAAK,GAAIA,EAAK,GAAIA,EAAK,KAG9C,IAAIgI,EAAM3E,EAAI4E,sBACd5E,EAAI4E,sBAAwB,WACxB,IAAIjI,EAAOD,UACXsF,EAAiBrF,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACpCgI,GACAA,EAAIvP,KAAK,KAAMuH,EAAK,GAAIA,EAAK,GAAIA,EAAK,SAG3C,CACH,IAAIkI,EAAM7E,EAAI8E,wBACd9E,EAAI8E,wBAA0B,WAC1B,IAAInI,EAAOD,UACXqH,EAAkBpH,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACrCkI,GACAA,EAAIzP,KAAK,KAAMuH,EAAK,GAAIA,EAAK,GAAIA,EAAK,KAG9C,IAAIoI,EAAM/E,EAAIgF,uBACdhF,EAAIgF,uBAAyB,WACzB,IAAIrI,EAAOD,UACXsF,EAAiBrF,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACpCoI,GACAA,EAAI3P,KAAK,KAAMuH,EAAK,GAAIA,EAAK,GAAIA,EAAK,MAKtD,GAAI8E,EAAU,CAEV,IAAIwD,EAAMjF,EAAIkF,iBAmBd,GAlBAlF,EAAIkF,iBAAmB,WACnB,IAAIvI,EAAOD,UACX7H,EAAGsQ,mBACEtQ,EAAGuD,QAGJvD,EAAGsQ,mBACHtQ,EAAGuD,QAAS,EACZvD,EAAGwD,QAAQ,UAAUwG,UACrBhK,EAAGwD,QAAQ,UAAU+M,SALrBvQ,EAAGiD,QAAQC,KAAK,eAAgBlD,EAAII,MAOpCJ,EAAGwQ,eACHxQ,EAAGwD,QAAQ,iBAAiBiN,OAE5BL,GACAA,EAAI7P,KAAK,KAAMuH,EAAK,GAAIA,EAAK,GAAIA,EAAK,KAG1CqD,EAAIuF,SAAWvF,EAAIuF,QAAJ,OAAuB,CACtC,IAAIC,EAAMxF,EAAIuF,QAAJ,OAAsBE,gBAChCzF,EAAIuF,QAAJ,OAAsBE,gBAAkB,WACpC,IAAI9I,EAAOD,UACX7H,EAAGsQ,mBACEtQ,EAAGuD,QAGJvD,EAAGsQ,mBACHtQ,EAAGuD,QAAS,EACZvD,EAAGwD,QAAQ,UAAUwG,UACrBhK,EAAGwD,QAAQ,UAAU+M,OAAM,IAL3BvQ,EAAGiD,QAAQC,KAAK,eAAgBlD,EAAII,MAOpCJ,EAAGwQ,eACHxQ,EAAGwD,QAAQ,iBAAiBiN,OAE5BE,GACAA,EAAIpQ,KAAK,KAAMuH,EAAK,GAAIA,EAAK,MAM7C,IAEI1H,KAAK0L,aAAe,IAAIE,UAAUhM,EAAGb,GAAIgM,EAAKmB,GAC9ClM,KAAK0L,aAAa+E,OAEpB,MAAOvR,GAAK,MAAM,IAAIC,MA7ZP,sFA+ZjBa,KAAK0C,aAAc,wCAOnB,IAAIgO,EAAc1Q,KAAK0L,aACnBgF,IACI1Q,KAAK+K,IAAI2B,WAETgE,EAAYvD,UAAUwD,MAGtB3Q,KAAK+K,IAAIyB,UAETkE,EAAYE,SAASD,+CAU7B,IAAID,EAAc1Q,KAAK0L,aACnBgF,EAAYlE,SAEZkE,EAAYE,SAASC,SAIrBH,EAAYE,SAASD,MAGrBD,EAAYhE,UAEZgE,EAAYvD,UAAU0D,SAItBH,EAAYvD,UAAUwD,4EAM1B,IAAI/Q,EAAKI,KAAKJ,GACd,GAAKA,EAAGkR,oBAAR,CAGA,IAAI9H,EAAWpJ,EAAGmR,2BAA2BnR,EAAGkR,qBAC/BlR,EAAGoR,cAAchI,KACfiI,EAAA,OACfjR,KAAKkR,oDAOH,IAAAC,EAAAnR,KACN,GAAKA,KAAK0C,YAAV,CAGA,IAAIgO,EAAc1Q,KAAK0L,aACnBgF,IACI1Q,KAAK+K,IAAI2B,YAETgE,EAAYvD,UAAUK,kBACtBkD,EAAYvD,UAAU0D,UAGtB7Q,KAAK+K,IAAIyB,UAETkE,EAAYE,SAASC,UAK7B7Q,KAAK6C,QAAQ8G,IAAI,CAAC,eAAgB,eAC9B,kBAAMwH,EAAKlF,0BACfjM,KAAK0C,aAAc,6BAI3BoI,EAAmBF,KAAO,CAACC,QAAS,2ECzf/B,KAAKjI,eACN3D,EAAQ,KAGZmS,EAAA,QAAeC,EAAf,4mCCKqBC,cAOjB,SAAAA,kBAAY1R,EAAI2R,GAAG,IAAAzR,EAAA,mHAAAC,CAAAC,KAAAsR,oBACfxR,EAAAG,2BAAAD,KAAAE,gBAAAoR,mBAAAnR,KAAAH,KAAMJ,EAAI0R,qBAMLlR,KAAOmR,EAAEnR,KAMdN,EAAKO,KAAOd,OAAAiS,EAAA,YAAAjS,CAAYgS,EAAEhR,YACtB,kCAMJT,EAAKwL,WAAa/L,OAAAiS,EAAA,YAAAjS,CAAYgS,EAAEjG,WAAa,yBAM7CxL,EAAK2R,UAAYlS,OAAAiS,EAAA,YAAAjS,CAAYgS,EAAEG,iBAAkB,eAMjD5R,EAAK6R,YAAcpS,OAAAiS,EAAA,YAAAjS,CAAYgS,EAAEK,mBAAoB,eAMrD9R,EAAK+R,OAAS,KAMd/R,EAAKgS,MAAQ,KAMbhS,EAAKiS,cAAgB,aAAenS,EAAGyB,WAAavB,EAAK2R,UACrD,2BAMJ3R,EAAKkS,gBAAkB,aAAepS,EAAGyB,WAAavB,EAAK6R,YACvD,6BAMJ7R,EAAKmS,YAAc,iBAMnBnS,EAAKoS,SAAWX,EAAEY,WAAa,KAM/BrS,EAAKsS,WAAa7S,OAAAiS,EAAA,aAAAjS,CAAagS,EAAEc,aAAa,GAM9CvS,EAAKwS,QAAU/S,OAAAiS,EAAA,YAAAjS,CAAYgS,EAAEgB,SAAU,IAMvCzS,EAAK0S,gBAAkB1S,EAAKsS,WACxBtS,EAAKkS,gBAAkBlS,EAAKwS,QAC5BxS,EAAKwS,SAAWxS,EAAKmS,YAMzBnS,EAAK2S,cAAgB3S,EAAKsS,WACtBtS,EAAKiS,cAAgBjS,EAAKwS,QAC1BxS,EAAKwS,SAAWxS,EAAKmS,YAMzBnS,EAAK4S,QAAUnT,OAAAiS,EAAA,YAAAjS,CAAYgS,EAAEoB,SAAU,MAMvC7S,EAAK8S,YAAcrT,OAAAiS,EAAA,YAAAjS,CAAYgS,EAAEsB,cAAe,gBAMhD/S,EAAKgT,aAAevT,OAAAiS,EAAA,YAAAjS,CAAYgS,EAAEwB,eAAgB,aAMlDjT,EAAKkT,gBAAkBzT,OAAAiS,EAAA,WAAAjS,CAAWgS,EAAE0B,kBAChCrT,EAAGsT,sBAMPpT,EAAKqT,eAAiB5T,OAAAiS,EAAA,WAAAjS,CAAWgS,EAAE6B,kBAAkB,GAMrDtT,EAAKuT,gBAAkB9T,OAAAiS,EAAA,YAAAjS,CAAYgS,EAAE+B,iBAAkBC,EAAA,OAMvDzT,EAAK0T,aAAejU,OAAAiS,EAAA,WAAAjS,CAAWgS,EAAEkC,eAAgBC,EAAA,UAMjD5T,EAAK6T,YAAcpU,OAAAiS,EAAA,WAAAjS,CAAWgS,EAAEqC,cAAeF,EAAA,UAM/C5T,EAAK+T,aAAetU,OAAAiS,EAAA,WAAAjS,CAAWgS,EAAEuC,eAAgBJ,EAAA,UAMjD5T,EAAKiU,YAAcxU,OAAAiS,EAAA,WAAAjS,CAAWgS,EAAEyC,cAAeN,EAAA,UAG/C9T,EAAGmM,OAAOwF,EAAEnR,KAAO,QAASR,EAAGqU,eAAiBnU,EAAKwL,WAAY,KAC7D,QAEJxL,EAAK0C,SArKU1C,sRAPwB2C,EAAA,sKAkLpC,IAAAuF,EAAAhI,KACCA,KAAK0C,cAIT1C,KAAK6C,QAAQC,KAAK,yBAA0B9C,MACvCT,OAAAmU,EAAA,OAAAnU,CAAOS,KAAKkS,WAEjBlS,KAAKkU,UAGLlU,KAAK0C,aAAc,EAEnB1C,KAAK6C,QAAQgB,GAAG,CAAC,gBAAiB,SAACjE,EAAIuU,GAAL,OAAiBnM,EAAKoM,KAAKD,KAC7DnU,KAAK6C,QAAQC,KAAK,iCAAkC9C,KAAKJ,GAAII,MAC7DA,KAAK6C,QAAQC,KAAK,wBAAyB9C,iDAMrC,IAAAmR,EAAAnR,KACFJ,EAAKI,KAAKJ,GACVyU,EAAO9U,OAAA4M,EAAA,UAAA5M,CAAU,QACrB8U,EAAKxN,UAAY7G,KAAK8S,aAGtB,IAWIwB,EAXAC,EAAYvU,KAAKkS,SAEjB3S,OAAA4M,EAAA,IAAA5M,CAAIS,KAAKkS,UADTtS,EAAGwD,QAAQ,WAAWoR,UAAUxU,KAAKqT,iBAGzC,GAAKrT,KAAKkS,SAINqC,EAASxO,YAAYsO,OAJL,CAChB,IAAII,EAAaF,EAASE,WAC1BA,EAAW/P,WAAWgQ,aAAaL,EAAMI,GAMxCzU,KAAK0S,SAON2B,EAAKM,UAAY3U,KAAK0S,QACtB4B,EAAMD,EAAKI,cAPXH,EAAM/U,OAAA4M,EAAA,UAAA5M,CAAU,IAAK,CAAC,OAAQ,yBAC1BsH,UAAY7G,KAAK4S,YACrB0B,EAAIM,MAAQ5U,KAAKsS,SAAWtS,KAAKiS,YACjCqC,EAAIK,UAAY3U,KAAKwS,gBACrB6B,EAAKtO,YAAYuO,IAMrB/U,OAAAuE,EAAA,OAAAvE,CAAO+U,EAAK,QAAS,kBAAMnD,EAAKD,WAEhClR,KAAK6R,OAASwC,EACdrU,KAAK8R,MAAQwC,EAERtU,KAAKmT,gBACNnT,KAAKkR,iDAQT,IAAItR,EAAKI,KAAKJ,GAGViV,EAAuC,MAFjCjV,EAAG0F,WAAa1F,EAAGwD,QAAQ,cAAcmC,QAAU3F,EAAGgJ,OAC/CnD,KAAKzF,KAAKgT,iBACFpN,MAAMkP,QAE/B9U,KAAKoU,MAAMS,uCAQM,IAAhBV,IAAgB,EAAA1M,UAAAvC,aAAAkH,IAAA3E,UAAA,KAAAA,UAAA,GACb7H,EAAKI,KAAKJ,GAEVmV,GADMnV,EAAG0F,WAAa1F,EAAGwD,QAAQ,cAAcmC,QAAU3F,EAAGgJ,OAC/CnD,KAAKzF,KAAKgT,iBAEvBmB,GACAnU,KAAKwT,aAAaxT,MAEjBmU,GACDnU,KAAK6T,aAAa7T,MAGtB+U,EAAOnP,MAAMkP,QAAUX,EAAU,GAAK,OAClCnU,KAAKoS,aAAepS,KAAK0S,UACzB1S,KAAK8R,MAAM6C,UAAYR,EACnBnU,KAAKwS,gBAAkBxS,KAAKyS,eAGhC0B,GACAnU,KAAK2T,YAAY3T,MAEhBmU,GACDnU,KAAK+T,YAAY/T,MAGrBA,KAAK6C,QAAQC,KAAK,kBAAmBlD,EAAII,KAAMmU,6CAMzC,IAAAa,EAAAhV,KACDA,KAAK0C,cAIV1C,KAAK6C,QAAQ8G,IAAI,CAAC,gBAAiB,SAAC/J,EAAIuU,GAAL,OAAiBa,EAAKZ,KAAKD,KAE9DnU,KAAK8R,MAAM6C,UAAY,GACvBpV,OAAA4M,EAAA,UAAA5M,CAAUS,KAAK8R,OACf9R,KAAK8R,MAAQ,KAEb9R,KAAK6R,OAAO8C,UAAY,GACxBpV,OAAA4M,EAAA,UAAA5M,CAAUS,KAAK6R,QACf7R,KAAK6R,OAAS,KACd7R,KAAK0C,aAAc,8oCCvSNuS,cAOjB,SAAAA,eAAYrV,EAAI2R,GAAG,IAAAzR,+GAAAC,CAAAC,KAAAiV,gBAIf,IAAIlK,GAHJjL,EAAAG,2BAAAD,KAAAE,gBAAA+U,gBAAA9U,KAAAH,KAAMJ,EAAIqV,kBAGKC,OAJA,OAUfpV,EAAKM,KAAOmR,EAAEnR,KAMdN,EAAKO,KAAOd,OAAAe,EAAA,YAAAf,CAAYgS,EAAEhR,YAAa,8BAMvCT,EAAKqV,OAAS,KAMdrV,EAAKgS,MAAQ,KAMbhS,EAAK+R,OAAS,KAMd/R,EAAKsV,WAAa7V,OAAAe,EAAA,aAAAf,CAAagS,EAAE8D,cAAc,GAM/CvV,EAAKwV,QAAU/V,OAAAe,EAAA,aAAAf,CAAagS,EAAE+D,SAAS,GAMvCxV,EAAKyV,WAAahE,EAAEiE,eAAiB,KAMrC1V,EAAK2V,aAAelW,OAAAe,EAAA,WAAAf,CAAWgS,EAAEmE,cAAe,GAMhD5V,EAAK6V,YAAcpW,OAAAe,EAAA,YAAAf,CAAYgS,EAAEqE,oBAAqB,MAMtD9V,EAAK+V,YAActW,OAAAe,EAAA,YAAAf,CAAYgS,EAAEuE,aAAc,IAM/ChW,EAAKiW,SAAWxW,OAAAe,EAAA,YAAAf,CAAYgS,EAAEyE,cAAe,MAM7ClW,EAAKwS,QAAU/S,OAAAe,EAAA,YAAAf,CAAYgS,EAAEgB,SAAU,kBAMvCzS,EAAK4S,QAAUnT,OAAAe,EAAA,YAAAf,CAAYgS,EAAEoB,SAAU,MAMvC7S,EAAK8S,YAAcrT,OAAAe,EAAA,YAAAf,CAAYgS,EAAEsB,cAAe,UAMhD/S,EAAKmW,aAAe1W,OAAAe,EAAA,YAAAf,CAAYgS,EAAE2E,eAAgB,SAMlDpW,EAAKqW,aAAe5W,OAAAe,EAAA,YAAAf,CAAYgS,EAAE6E,eAAgB,MAMlDtW,EAAKuW,iBAAmB9W,OAAAe,EAAA,YAAAf,CAAYgS,EAAE+E,oBAClCxW,EAAK8S,aAMT9S,EAAKwL,WAAa/L,OAAAe,EAAA,YAAAf,CAAYgS,EAAEjG,WAAY,sBAM5CxL,EAAKyW,aAAehX,OAAAe,EAAA,YAAAf,CAAYgS,EAAEiF,eAAgB,cAMlD1W,EAAKgT,aAAevT,OAAAe,EAAA,YAAAf,CAAYgS,EAAEwB,eAAgB,cAMlDjT,EAAK2W,aAAelX,OAAAe,EAAA,YAAAf,CAAYwL,EAAI2L,eAAgB,kBAMpD5W,EAAK6W,iBAAmBpX,OAAAe,EAAA,YAAAf,CAAYwL,EAAI6L,yBACpC,uBAMJ9W,EAAK+W,oBAAsBtX,OAAAe,EAAA,YAAAf,CACvBwL,EAAI+L,kCACJ,2BAQJhX,EAAKiX,KAAOxX,OAAAe,EAAA,YAAAf,CAAYgS,EAAEwF,KAAMjX,EAAKsV,WAAa,SAAW,UAM7DtV,EAAKkX,QAAUzX,OAAAe,EAAA,YAAAf,CAAYgS,EAAE0F,SAAU,IAMvCnX,EAAKoX,YAAcnW,QAAQwQ,EAAE4F,cAM7BrX,EAAKsX,cAAgBrW,QAAQwQ,EAAE8F,iBAM/BvX,EAAKwX,YAAc/X,OAAAe,EAAA,YAAAf,CAAYgS,EAAEgG,cAAe,eAMhDzX,EAAKuT,gBAAkB9T,OAAAe,EAAA,YAAAf,CAAYgS,EAAE+B,iBAAkBkE,EAAA,OAMvD1X,EAAK2X,WAAa,GAMlB3X,EAAK4X,aAAe,KAMpB5X,EAAK6X,SAAWpY,OAAAe,EAAA,WAAAf,CAAWgS,EAAEqG,UAAWlE,EAAA,UAMxC5T,EAAK+X,aAAetY,OAAAe,EAAA,WAAAf,CAAWgS,EAAEuG,eAAgBpE,EAAA,UAMjD5T,EAAKiY,YAAcxY,OAAAe,EAAA,WAAAf,CAAWgS,EAAEyG,cAAetE,EAAA,UAM/C5T,EAAKmY,cAAgB1Y,OAAAe,EAAA,WAAAf,CAAWgS,EAAE2G,gBAAiBxE,EAAA,UAMnD5T,EAAKqY,aAAe5Y,OAAAe,EAAA,WAAAf,CAAWgS,EAAE6G,eAAgB1E,EAAA,UAMjD5T,EAAKuY,kBAAoB9Y,OAAAe,EAAA,WAAAf,CAAWgS,EAAE+G,qBAAsB5E,EAAA,UAM5D5T,EAAKyY,iBAAmBhZ,OAAAe,EAAA,WAAAf,CAAWgS,EAAEiH,oBAAqB9E,EAAA,UAM1D5T,EAAK2Y,qBAAuBlZ,OAAAe,EAAA,WAAAf,CAAWgS,EAAEmH,wBACrChF,EAAA,UAMJ5T,EAAK6Y,oBAAsBpZ,OAAAe,EAAA,WAAAf,CAAWgS,EAAEqH,uBACpClF,EAAA,UAGA9T,EAAG0F,aACHxF,EAAKyV,WAAa3V,EAAGwD,QAAQ,cAAcmC,QAC3CzF,EAAK2V,aAAe,GAIxB7V,EAAGmM,OAAOwF,EAAEnR,KAAO,QAASR,EAAGqU,eAAiBnU,EAAKwL,WAAY,KAC7D,QAEJxL,EAAK0C,SA9QU1C,mRAPqB2C,EAAA,2KA4R9B2B,GAGN,IAFA,IAAIyU,EAAYtZ,OAAAuE,EAAA,UAAAvE,CAAU6E,GAEnByU,GAAaA,IAAc7Y,KAAK6R,QAChCgH,IAAc7Y,KAAK8R,OACtB+G,EAAYA,EAAUnU,WAGtBmU,IAAc7Y,KAAK6R,QAAUgH,IAAc7Y,KAAK8R,OAChD9R,KAAKkR,iDAWT3R,OAAAuE,EAAA,UAAAvE,CAAUoM,EAAA,KAAM,UAAW3L,KAAK0X,cAEhC,IAAIoB,EAAc9Y,KAAK6R,OAAOjM,MAAMkP,QAEhB,WAAhBgE,GACA9Y,KAAK6X,aAAa7X,MAEF,WAAhB8Y,GACA9Y,KAAKiY,cAAcjY,MAGvBA,KAAK6R,OAAOjM,MAAMkP,QAA0B,WAAhBgE,EACxBrU,EAAA,KAAO,SAES,WAAhBqU,IACA9Y,KAAK+X,YAAY/X,MACjBT,OAAAuE,EAAA,OAAAvE,CAAOoM,EAAA,KAAM,UAAW3L,KAAK0X,eAEb,WAAhBoB,GACA9Y,KAAKmY,aAAanY,kDAQhB+Y,GACN,IAAIC,EAAKD,EAAIrU,WACb,GAAKsU,GAAOD,EAAZ,CAGA,IAAIE,EAAYF,EAAItE,WAAWyE,QAC3BlQ,EAAW+P,EAAItE,WAAWhO,aAAa,MAAM2D,MAAM,KAAK,GAC5DpB,EAAWiG,SAASjG,EAAU,IAC1BiQ,EACA1Z,OAAA4M,EAAA,SAAA5M,CAASyZ,EAAIhZ,KAAK6W,qBAElBtX,OAAA4M,EAAA,YAAA5M,CAAYyZ,EAAIhZ,KAAK6W,qBAGzB,IAAIsC,GAAO,GACNnZ,KAAKoV,YAAc6D,IAClBjZ,KAAKoV,aAAe6D,KACtBE,GAAO,GAEXnZ,KAAKoZ,UAAUpQ,EAAUmQ,wCAMtB,IAAAnR,EAAAhI,MACCA,KAAK0C,aAAgB1C,KAAKsV,UAI9BtV,KAAK6C,QAAQC,KAAK,yBAA0B9C,MACvCT,OAAAmU,EAAA,OAAAnU,CAAOS,KAAK+V,WAEjB/V,KAAK6C,QAAQgB,GAAG,CAAC,eACb,SAACjE,EAAIoJ,GAAL,OAAkBhB,EAAKqR,QAAQrQ,KAEnChJ,KAAKsZ,WACLtZ,KAAKuZ,eAGLvZ,KAAK0C,aAAc,EAEnB1C,KAAK0X,aAAe1X,KAAKwZ,UAAUC,KAAKzZ,MAExCA,KAAK6C,QAAQC,KAAK,iCAAkC9C,KAAKJ,GAAII,MAC7DA,KAAK6C,QAAQC,KAAK,wBAAyB9C,MAI3CA,KAAK0Z,4DAME,IAAAvI,EAAAnR,KACP,IAAIA,KAAK8R,MAAT,CAGA,IAAIlS,EAAKI,KAAKJ,GACVyU,EAAO9U,OAAA4M,EAAA,UAAA5M,CAAU,QACrB8U,EAAKxN,UAAY7G,KAAKuW,aAGtB,IAAIhC,EAAYvU,KAAK+V,SAEjBxW,OAAA4M,EAAA,IAAA5M,CAAIS,KAAK+V,UADTnW,EAAGwD,QAAQ,WAAWoR,UAAUxU,KAAKqT,iBAGzC,GAAKrT,KAAK+V,SAINxB,EAASxO,YAAYsO,OAJL,CAChB,IAAII,EAAaF,EAASE,WAC1BA,EAAW/P,WAAWgQ,aAAaL,EAAMI,GAK7C,GAAKzU,KAAK0S,QAYH,CACH2B,EAAKM,UAAY3U,KAAK0S,QACtB,IAAIiH,EAAWtF,EAAKI,WACfzU,KAAKkX,YAGN3X,OAAAuE,EAAA,OAAAvE,CAAOoa,EAAU,YAAa,SAACvV,GAAD,OAAS+M,EAAKD,OAAO9M,KAFnD7E,OAAAuE,EAAA,OAAAvE,CAAOoa,EAAU,QAAS,SAACvV,GAAD,OAAS+M,EAAKD,OAAO9M,SAhBpC,CACf,IAAIkQ,EAAM/U,OAAA4M,EAAA,UAAA5M,CAAU,IAAK,CAAC,OAAQ,iBAClC+U,EAAIzN,UAAY7G,KAAK4S,YACrB0B,EAAIM,MAAQ5U,KAAKK,KAEjBiU,EAAIK,UAAY3U,KAAKsS,QACrB+B,EAAKtO,YAAYuO,GACZtU,KAAKkX,YAGN3X,OAAAuE,EAAA,OAAAvE,CAAO+U,EAAK,YAAa,SAAClQ,GAAD,OAAS+M,EAAKD,OAAO9M,KAF9C7E,OAAAuE,EAAA,OAAAvE,CAAO+U,EAAK,QAAS,SAAClQ,GAAD,OAAS+M,EAAKD,OAAO9M,KAclDpE,KAAKmV,OAASd,EACdrU,KAAK8R,MAAQ9R,KAAKmV,OAAOV,WAEzBzU,KAAK2X,SAAS3X,2DAMH,IAAAgV,EAAAhV,KACPJ,EAAKI,KAAKJ,GAEV4U,EAAaxU,KAAK2V,YAElBpW,OAAA4M,EAAA,IAAA5M,CAAIS,KAAK2V,aADTpW,OAAA4M,EAAA,UAAA5M,CAAU,OAEdiV,EAAU3N,UAAY7G,KAAK8S,aAG3B,IAAI8G,EAAera,OAAA4M,EAAA,UAAA5M,CAAU,KAC7Bqa,EAAajF,UAAY3U,KAAK+W,KAC9BvC,EAAUzO,YAAY6T,GAGtB,IAAIC,EAAKta,OAAA4M,EAAA,UAAA5M,CAAU,MACnBsa,EAAGhT,UAAY7G,KAAKyW,aAEpB,IAAIqD,EAAM9Z,KAAKuV,YAAc3V,EAAGgJ,MAC5BmR,EAAc/Z,KAAKuV,WACnBvV,KAAKyV,aAAe7V,EAAGoa,qBACvBC,EAAYH,EAAIrU,KAAKsU,GAGzB,GAAI/Z,KAAKoX,cAAe,CACpB,IAAI4B,EAAKzZ,OAAA4M,EAAA,gBAAA5M,CAAgB,QAAUK,EAAGb,GAAIiB,KAAKsX,YAC3CtX,KAAKsX,aACT/X,OAAA4M,EAAA,SAAA5M,CAASyZ,EAAIhZ,KAAK2W,kBAClBkD,EAAG9T,YAAYiT,GACfA,EAAGkB,MAAMhB,SAAWlZ,KAAKoV,WAEzB7V,OAAAuE,EAAA,OAAAvE,CAAOyZ,EAAGkB,MAAO,QAAS,WACtB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAUjV,MAAME,OAAQiV,IAAK,CAC7C,IAAIC,EAAM7a,OAAA4M,EAAA,IAAA5M,CAAI,OAAS4a,EAAI,IAAMva,EAAGb,IAChCqb,GAAOpB,EAAGkB,MAAMhB,UAAYkB,EAAIlB,UAChCkB,EAAIC,QACJD,EAAIlB,QAAUF,EAAGkB,MAAMhB,YAMvC,IAAK,IAAInU,EAAI,EAAGA,EAAIkV,EAAUjV,MAAME,OAAQH,IAAK,CAC7C,IAAIwB,EAAO0T,EAAUjV,MAAMD,GACvBuV,EAAWta,KAAK6V,YAAY9Q,IAAM/E,KAAKua,eAAehU,GACtDiU,EAAQjb,OAAA4M,EAAA,gBAAA5M,CAAgB,OAASwF,EAAI,IAAMnF,EAAGb,GAAIub,EAClDA,GACJ/a,OAAA4M,EAAA,SAAA5M,CAASib,EAAOxa,KAAK2W,kBAChB3W,KAAKoV,YACN7V,OAAA4M,EAAA,SAAA5M,CAASib,EAAOxa,KAAK6W,qBAEzBgD,EAAG9T,YAAYyU,GACVxa,KAAKoV,aACNoF,EAAMN,MAAMhB,SAAU,GAG1B3Z,OAAAuE,EAAA,OAAAvE,CAAOib,EAAMN,MAAO,QAAS,SAAC9V,GAC1B,IACI2U,EADMxZ,OAAAuE,EAAA,UAAAvE,CAAU6E,GACNM,WACdsQ,EAAKyF,UAAU1B,KAKvB,IACIzE,EADAoG,EAAInb,OAAA4M,EAAA,UAAA5M,CAAU,IAAK,CAAC,QAAS,WAG5BS,KAAKmW,cAONuE,EAAE/F,UAAY3U,KAAKmW,aACnB7B,EAAMoG,EAAEjG,WACRlV,OAAAuE,EAAA,OAAAvE,CAAO+U,EAAK,QAAS,SAAClQ,GAAD,OAAS4Q,EAAK9D,OAAO9M,QAR1CkQ,EAAM/U,OAAA4M,EAAA,UAAA5M,CAAU,IAAK,CAAC,OAAQ,kBAC1BsH,UAAY7G,KAAKqW,iBACrB/B,EAAIK,UAAY3U,KAAKiW,aACrB1W,OAAAuE,EAAA,OAAAvE,CAAO+U,EAAK,QAAS,SAAClQ,GAAD,OAAS4Q,EAAK9D,OAAO9M,KAC1CsW,EAAE3U,YAAYuO,IAOlBE,EAAUzO,YAAY8T,GACtBrF,EAAUzO,YAAY2U,GAEtB1a,KAAK8R,MAAMpN,WAAWgQ,aAAaF,EAAWxU,KAAK8R,OACnD9R,KAAK6R,OAAS2C,8CAQRxL,EAAUmQ,GAChB,IAAIvZ,EAAKI,KAAKJ,GACVka,EAAMla,EAAGgJ,MAETuQ,EACAnZ,KAAKqY,kBAAkBrY,KAAMgJ,GAE7BhJ,KAAKyY,qBAAqBzY,KAAMgJ,GAGpChJ,KAAK2a,cAAcb,EAAK9Q,EAAUmQ,GAC9BnZ,KAAKuV,YACLvV,KAAK2a,cAAc3a,KAAKuV,WAAYvM,EAAUmQ,GAGlD,IACIyB,EADa5a,KAAKyX,WACK1O,QAAQC,GAC/BmQ,GACmB,IAAfyB,GACA5a,KAAKyX,WAAWnR,KAAK0C,IAGN,IAAf4R,GACA5a,KAAKyX,WAAWoD,OAAOD,EAAW,GAItCzB,GACAnZ,KAAKuY,iBAAiBvY,KAAMgJ,GAC5BhJ,KAAK6C,QAAQC,KAAK,gBAAiBlD,EAAII,KAAMgJ,EACzChJ,KAAKyX,cAETzX,KAAK2Y,oBAAoB3Y,KAAMgJ,GAC/BhJ,KAAK6C,QAAQC,KAAK,eAAgBlD,EAAII,KAAMgJ,EACxChJ,KAAKyX,qDAQTzO,GACJ,IAAIzJ,OAAAmU,EAAA,QAAAnU,CAAQyJ,IAAchJ,KAAK8a,YAAY9R,GAG3C,GAAIhJ,KAAKsV,SAAWtV,KAAK6R,OAAQ,CAC7B,IAAIuI,EAAM7a,OAAA4M,EAAA,IAAA5M,CAAI,OAASyJ,EAAW,IAAMhJ,KAAKJ,GAAGb,IAC5Cqb,GACAA,EAAIC,aAGRra,KAAKoZ,UAAUpQ,GAAU,2CAQzBA,GACJ,IAAIzJ,OAAAmU,EAAA,QAAAnU,CAAQyJ,KAAahJ,KAAK8a,YAAY9R,GAG1C,GAAIhJ,KAAKsV,SAAWtV,KAAK6R,OAAQ,CAC7B,IAAIuI,EAAM7a,OAAA4M,EAAA,IAAA5M,CAAI,OAASyJ,EAAW,IAAMhJ,KAAKJ,GAAGb,IAC5Cqb,GACAA,EAAIC,aAGRra,KAAKoZ,UAAUpQ,GAAU,mDAQrBA,GACR,OAA2C,IAAvChJ,KAAKyX,WAAW1O,QAAQC,+CAUtBA,GACFzJ,OAAAmU,EAAA,QAAAnU,CAAQyJ,IAAahJ,KAAK8a,YAAY9R,GACtChJ,KAAK+a,QAAQ/R,GAEbhJ,KAAKqZ,QAAQrQ,yDASjB,OAAOhJ,KAAKyX,qDAMN,IAAAuD,EAAAhb,KACDA,KAAK0C,cAGNnD,OAAA4M,EAAA,IAAA5M,CAAIS,KAAK2V,aACTpW,OAAA4M,EAAA,IAAA5M,CAAIS,KAAK2V,aAAahB,UAAY,IAElC3U,KAAK6R,OAAO8C,UAAY,GACxBpV,OAAA4M,EAAA,UAAA5M,CAAUS,KAAK6R,QACf7R,KAAK6R,OAAS,MAElB7R,KAAK8R,MAAM6C,UAAY,GACvBpV,OAAA4M,EAAA,UAAA5M,CAAUS,KAAK8R,OACf9R,KAAK8R,MAAQ,KAEb9R,KAAK6C,QAAQ8G,IAAI,CAAC,eACd,SAAC/J,EAAIoJ,GAAL,OAAkBgS,EAAK3B,QAAQrQ,KAEnChJ,KAAK0X,aAAe,KAEpB1X,KAAK0C,aAAc,yDAGR6D,GACX,IAAKA,EAAK0U,cACN,MAAO,GAGX,IAAK,IAAIlW,EAAI,EAAGA,EAAIwB,EAAK2U,WAAWhW,OAAQH,IAAK,CAC7C,IAAIoW,EAAI5U,EAAK2U,WAAWnW,GACxB,GAAmB,IAAfoW,EAAEC,SACF,OAAOD,EAAEE,UACN,GAAmB,IAAfF,EAAEC,SAAgB,CACzB,GAAID,EAAEpc,KAAiC,IAA3Boc,EAAEpc,GAAGgK,QAAQ,SACrB,SAEA,OAAOxJ,OAAA4M,EAAA,QAAA5M,CAAQ4b,IAK3B,MAAO,uDAGGrB,EAAK9V,EAAQmV,GACvBnZ,KAAKsb,WAAWxB,EAAK9V,EAAQmV,GAC7BnZ,KAAKub,SAASzB,EAAK9V,EAAQmV,iDAGpBW,EAAK9V,EAAQmV,GACpB,IAAK,IAAIpU,EAAI,EAAGA,EAAI+U,EAAIrU,KAAKP,OAAQH,IAAK,CACtC,IACIwB,EADMuT,EAAIrU,KAAKV,GACJC,MAAMhB,GACjBuC,IACAA,EAAKX,MAAMkP,QAAUqE,EAAO1U,EAAA,KAAO,+CAKtCqV,EAAK9V,EAAQmV,GAClB,IAAIqC,EAAUjc,OAAA4M,EAAA,IAAA5M,CAAIua,EAAK,OACA,IAAnB0B,EAAQtW,SAGZsW,EAAQxX,GAAQ4B,MAAMkP,QAAUqE,EAAO1U,EAAA,KAAO,wDAGnC,IAAAgX,EAAAzb,KACXA,KAAKgX,QAAQ0E,QAAQ,SAAC1X,GAClByX,EAAKpC,QAAQrV,opCCxsBzB,IAAM2X,EAAS,CACX,kBACA,oBACA,4BAciBC,cAQjB,SAAAA,OAAYhc,EAAIC,GAAM,IAAAC,EAAA,mHAAAC,CAAAC,KAAA4b,SAClB9b,EAAAG,2BAAAD,KAAAE,gBAAA0b,QAAAzb,KAAAH,KAAMJ,EAAIgc,UAMLC,kBAAoBtc,OAAAe,EAAA,WAAAf,CAAWM,EAAKic,oBAAqBpI,EAAA,UAM9D5T,EAAKic,iBAAmBxc,OAAAe,EAAA,WAAAf,CAAWM,EAAKmc,mBAAoBtI,EAAA,UAM5D5T,EAAKD,KAAOA,EAMZC,EAAKmc,SAAW1c,OAAAe,EAAA,YAAAf,CAAYM,EAAKd,GAAI,IAMrCe,EAAKoc,WAAa3c,OAAAe,EAAA,YAAAf,CAAYM,EAAKsc,IAAK,IAOxCrc,EAAKsc,WAAa7c,OAAAe,EAAA,YAAAf,CAAYM,EAAKwc,UAAW,IAO9Cvc,EAAKwc,YAAc/c,OAAAe,EAAA,YAAAf,CAAYM,EAAK0c,aAAc,IAQlDzc,EAAK0c,cAAgBjd,OAAAe,EAAA,YAAAf,CAAYM,EAAK4c,cAAe,IAMrD3c,EAAK4c,cAAgBnd,OAAAe,EAAA,YAAAf,CAAYM,EAAK8c,cAAe,IAMrD7c,EAAK8c,YAAcrd,OAAAe,EAAA,YAAAf,CAAYM,EAAKgd,YAAa,IAMjD/c,EAAKgd,kBAAoBvd,OAAAe,EAAA,YAAAf,CAAYM,EAAKkd,kBAAmB,GAE7Djd,EAAK0C,SAzEa1C,2QARU2C,EAAA,2JAwFxBzC,KAAK0C,cAIT1C,KAAK6C,QAAQgB,GAAG8X,EAAQpc,OAAAyd,EAAA,MAAAzd,CAAMS,KAAKid,QAASjd,OAE5CA,KAAKid,UAGLjd,KAAK0C,aAAc,6CAoBnB,IAAI9C,EAAKI,KAAKJ,GACd,GAAKA,EAAGsd,gBAAR,CAIAld,KAAK6b,kBAAkBjc,EAAII,MAC3BA,KAAK6C,QAAQC,KAAK,0BAA2BlD,EAAII,MAP3C,IASAkc,EAEoBlc,KAFpBkc,WAAwBiB,EAEJnd,KAFRoc,WAA2BE,EAEnBtc,KAFmBsc,YACzCI,EACsB1c,KADtB0c,cAAeE,EACO5c,KADP4c,YAAaJ,EACNxc,KADMwc,cAC5BM,EAAsB9c,KAAtB8c,kBAGAM,EAAW,GACflB,EAAWR,QAAQ,SAACpR,IACe,IAA3B8S,EAASrU,QAAQuB,IACjB8S,EAAS9W,KAAKgE,KAQtB,IAJA,IAAI+S,EAASD,EAASlY,OAClBO,EAAO7F,EAAGgJ,MAAMnD,KAChB6X,EAAY,GAEPC,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAI7BD,EAAUhX,KACN1G,EAAG4d,qBAAqBJ,EAASG,IAAI,EAAOX,IAchD,IAXA,IAAIa,EAAYH,EAAUC,GAGtBG,EAAS,EACTtB,EAAa,GACbuB,EAAa,GACbC,EAAS,GACTC,OAAS,EACTC,EAAe,GACf/T,EAAM,EAEDgU,EAAI,EAAGA,EAAI7B,EAAWhX,OAAQ6Y,IAC/B7B,EAAW6B,KAAOX,EAASG,KAG/BnB,EAAWrS,IAAQoT,EAAcY,IAAM,OAAOnX,cAC9C+W,EAAW5T,GAAO+S,EAAkBiB,GACpCH,EAAO7T,GAAO/J,KAAKic,SAAS8B,GAC5BF,EAAYte,OAAAmU,EAAA,QAAAnU,CAAQ+c,GAAeA,EAAYyB,GAAK,KACpDD,EAAa/T,GACT/J,KAAKge,gBAAgBZ,EAASG,GAAIf,EAAcuB,IACpDhU,KAGJ,IAAK,IAAIhF,EAAI,EAAGA,EAAIgF,EAAKhF,IAErB/E,KAAK6C,QAAQC,KACT,qBACAlD,EACAI,KACAod,EAASG,GACTE,EACArB,EAAWrX,GACX4Y,EAAW5Y,IAGf2Y,EAASO,OAAOje,KAAKke,KAAKT,EAAWrB,EAAWrX,GAAI,OAGpD/E,KAAK6C,QAAQC,KACT,cACAlD,EACAI,KACAod,EAASG,GACTG,EACAtB,EAAWrX,GACX4Y,EAAW5Y,IAIf/E,KAAKme,YACDT,EACAE,EAAO7Y,GACP8Y,EACAF,EAAW5Y,GACX+Y,EAAa/Y,IAMrB,IAAIqZ,EAAS1B,GAAiBA,EAAca,GACxC9X,EAAKiX,EAAca,IAAM,KACzBa,IACAA,EAAOxY,MAAMkP,QAAU,IAI/B9U,KAAK+b,iBAAiBnc,EAAII,MAC1BA,KAAK6C,QAAQC,KAAK,yBAA0BlD,EAAII,qDAUzCgJ,GAAsC,IAA5BqT,EAA4B,EAAA5U,UAAAvC,aAAAkH,IAAA3E,UAAA,GAAAA,UAAA,GA/OzC,MA+O8B4W,EAAW,EAAA5W,UAAAvC,OAAAuC,UAAA,QAAA2E,EACzCwQ,EAAc5c,KAAK4c,aAAe,GAClCU,EAAY1d,GAAG4d,qBAAqBxU,GAAU,EAAO4T,GAEzD,OAAOqB,OAAOje,KAAKke,KAAKZ,EAAWjB,EAAWgC,sCAW7Cf,GAAuC,IAA5BjB,EAA4B,EAAA5U,UAAAvC,aAAAkH,IAAA3E,UAAA,GAAAA,UAAA,GA9PpC,MA8PyB4W,EAAW,EAAA5W,UAAAvC,OAAAuC,UAAA,QAAA2E,EACpCsR,EAAS,EAMb,OAhQG,OA4PCrB,GA3PD,OA2PqBA,GA7PjB,WA6PqCA,IACxCiB,EAAYtd,KAAKse,iBAAiBhB,EAAWiB,EAAA,aAGzClC,GACJ,IArQC,OAsQGqB,EAAS1d,KAAKwe,SAASlB,GACvB,MACJ,IAzQA,MA0QII,EAAS1d,KAAKye,QAAQnB,GACtB,MACJ,IA1QA,MA2QII,EAAS1d,KAAK0e,QAAQpB,GACtB,MACJ,IA5QA,MA6QII,EAAS1d,KAAK2e,QAAQrB,GACtB,MACJ,IA9QG,SA+QCI,EAAS1d,KAAK4e,WAAWtB,GACzB,MACJ,IAhRD,KAiRKI,EAAS1d,KAAK6e,OAAOvB,GACrB,MACJ,IAlRD,KAmRKI,EAAS1d,KAAK8e,OAAOxB,GAI7B,OAAO/d,OAAAmU,EAAA,QAAAnU,CAAQ8e,GAAaX,EAASA,EAAOqB,QAAQV,6CAQnC,IAAbW,EAAa,EAAAvX,UAAAvC,aAAAkH,IAAA3E,UAAA,GAAAA,UAAA,GAAJ,GACb,OAAIlI,OAAAmU,EAAA,QAAAnU,CAAQyf,GACD,EAEEA,EAAOC,OAAO,SAAC5U,EAAG6U,GAAJ,OAAUjB,OAAO5T,GAAK4T,OAAOiB,iDAStC,IAAbF,EAAa,EAAAvX,UAAAvC,aAAAkH,IAAA3E,UAAA,GAAAA,UAAA,GAAJ,GACViW,EAAS1d,KAAKye,QAAQO,GAAUA,EAAO9Z,OAC3C,OAAO+Y,OAAOP,6CAQG,IAAbsB,EAAa,EAAAvX,UAAAvC,aAAAkH,IAAA3E,UAAA,GAAAA,UAAA,GAAJ,GACb,OAAO0X,KAAKC,IAAIC,MAAM,KAAML,6CAQX,IAAbA,EAAa,EAAAvX,UAAAvC,aAAAkH,IAAA3E,UAAA,GAAAA,UAAA,GAAJ,GACb,OAAO0X,KAAKG,IAAID,MAAM,KAAML,mDAQR,IAAbA,EAAa,EAAAvX,UAAAvC,aAAAkH,IAAA3E,UAAA,GAAAA,UAAA,GAAJ,GACZ8X,EAAWP,EAAO9Z,OAClBsa,EAAM,EACV,OAAID,EAAW,GAAM,GACjBC,EAAML,KAAKM,MAAMF,EAAW,GACrBtB,OAAOe,EAAOQ,MAEjBvB,OAAOe,EAAOO,EAAW,IAC7BtB,OAAOe,EAASO,EAAW,EAAK,KAAQ,0CAQ5B,IAEZG,EAFDV,EAAa,EAAAvX,UAAAvC,aAAAkH,IAAA3E,UAAA,GAAAA,UAAA,GAAJ,GACR8X,EAAWP,EAAO9Z,OAGtB,OAAI,GADJwa,EAAOP,KAAKM,MAAMF,EAAW,MACZA,GACLtB,OAAOe,EAAOU,EAAO,IACzBzB,OAAOe,EAAOU,KAAU,EAEzBzB,OAAOe,EAAOU,4CAQL,IAEZA,EAFDV,EAAa,EAAAvX,UAAAvC,aAAAkH,IAAA3E,UAAA,GAAAA,UAAA,GAAJ,GACR8X,EAAWP,EAAO9Z,OAElBya,EAAO,EAEX,OAAI,GADJD,EAAOP,KAAKM,MAAMF,EAAW,MACZA,GACbI,EAAO,EAAID,GACHzB,OAAOe,EAAOW,IAClB1B,OAAOe,EAAOW,EAAO,KAAO,GAE7B1B,OAAOe,EAAOO,EAAWG,EAAO,gEASL,IAArBV,EAAqB,EAAAvX,UAAAvC,aAAAkH,IAAA3E,UAAA,GAAAA,UAAA,GAAZ,GAAIK,EAAQ,EAAAL,UAAAvC,OAAAuC,UAAA,QAAA2E,EAClC,OAAO4S,EAAOpb,KAAKkE,qDAaS,IADpB4V,EACoB,EAAAjW,UAAAvC,aAAAkH,IAAA3E,UAAA,GAAAA,UAAA,GADX,EAAGmY,EACQ,EAAAnY,UAAAvC,OAAAuC,UAAA,QAAA2E,EADDyR,EACC,EAAApW,UAAAvC,aAAAkH,IAAA3E,UAAA,GAAAA,UAAA,GADW,YACvC4W,EAA4B,EAAA5W,UAAAvC,aAAAkH,IAAA3E,UAAA,GAAAA,UAAA,GAAhB,EAAGoY,EAAa,EAAApY,UAAAvC,aAAAkH,IAAA3E,UAAA,GAAAA,UAAA,GAAJ,GACpBqY,EAAWvgB,OAAA4M,EAAA,IAAA5M,CAAIqgB,GAEnB,GAAKE,EAWL,OAPApC,EAASA,EAAOqB,QAAQV,GAEpBX,EADAlU,MAAMkU,KAAYqC,SAASrC,GAClB,GAEAsC,IAAaH,EAAbG,CAAqBtC,GAG1BG,EAAUjX,eACd,IAAK,YACDkZ,EAASnL,UAAY+I,EACrB,MACJ,IAAK,WACDoC,EAASzW,MAAQqU,EACjB,MACJ,IAAK,iBACD,IAAIuC,EAAUH,EAASrL,WACnByL,EAAU3gB,OAAA4M,EAAA,WAAA5M,CAAWme,GACzBoC,EAASK,aAAaD,EAASD,4DAa3BjX,GAAuB,IAAb6W,EAAa,EAAApY,UAAAvC,aAAAkH,IAAA3E,UAAA,GAAAA,UAAA,GAAJ,GAC3B7H,EAAKI,KAAKJ,GACd,GAAIA,EAAGwgB,QAAQpX,EAAU,CAACqX,EAAA,mBAAoB,CAC1C,IAAIlY,EAAUvI,EAAGe,SAASqI,GACtBb,EAAQG,UAAYuX,EAAOvX,UAC3BuX,EAAOvX,QAAUH,EAAQG,SAEzBH,EAAQmY,YAAcT,EAAOU,mBAC7BV,EAAOU,iBAAmBpY,EAAQmY,gBAGtCT,EAAOvX,QAAUuX,EAAOvX,SAAW,GACnCuX,EAAOU,iBAAmBV,EAAOU,kBAAoB,GAEzD,OAAOV,4CAKF7f,KAAK0C,cAIV1C,KAAK6C,QAAQ8G,IAAIgS,EAAQpc,OAAAyd,EAAA,MAAAzd,CAAMS,KAAKid,QAASjd,OAE7CA,KAAK0C,aAAc,uEC1d3B0O,EAAA,QAAeoP,EAAf,2BCFA/gB,EAAAC,QAAA,8xeCIAD,EAAAC,QAAA,SAAA+gB,GACA,SAAAC,IAAAC,GACA,oBAAAC,UACAA,QAAAD,OAAAC,QAAAF,KAAA,kBAAAC,GAQA,IACA,oBAAAE,YALA,SAAAC,OACA,0BAAAC,aAAA,oBAAAC,iBAIAF,GACAD,WAAAJ,GACG,oBAAAQ,KACHA,KAAA9gB,KAAA,KAAAsgB,GAEAC,IAAA,yCAEE,MAAAC,GACFD,IAAAC,0BCxBA1hB,EAAA,IAAAA,GAAA,yBCIA,SAAAiiB,UAAAC,GAaA,IAZAA,KAAA,IASAC,aAAAD,EAAAC,eAAA,MAAAD,EAAAE,SAAA,gBAGA,iBAAAF,EAAAG,mBACA,OAAAH,EAAAC,cACA,WACAD,EAAAG,mBAAA,IACA,MACA,eACAH,EAAAG,mBAAA,IACA,MACA,QACAH,EAAAG,mBAAA,GAGA,oBAAAH,EAAAI,oBACA,OAAAJ,EAAAC,cACA,YACAD,EAAAI,oBAAA,IACA,MACA,eACAJ,EAAAI,oBAAA,IACA,MACA,QACAJ,EAAAI,oBAAA,GA4BA,SAAA1B,OAAA2B,EAAAC,GAGA,GAFAA,KAAA,IAEAD,GAAA,IAAAA,EAGA,SAIA,IAAAE,EAAA,GACAL,EAAA,OAPAG,EAAA,GAAAA,GAOAG,OAAA,GAwCA,OAvCAH,IAAAI,QAAA,WAGAT,EAAAU,iBAAAJ,EAAAK,SACAJ,EAAApb,KAAA6a,EAAAY,QAEAV,GACAK,EAAApb,KAAA6a,EAAAG,oBAEAH,EAAAU,kBAAAJ,EAAAK,SACAJ,EAAApb,KAAA6a,EAAAY,QAIAP,IAAApX,MAAA,KACA,MAAA+W,EAAAa,OA0IA,SAAAA,MAAAR,EAAAS,GACA,GAAAT,EAAA,OAAAS,GAAAT,EAAA,GAAAtc,OAAA+c,EAAA,CAEA,IAAAC,EAAAV,EAAA,GAAAW,MAAA,EAAAF,GAEA,OAAAT,EAAA,GAAAY,OAAAH,EAAA,IAGA,IADA,IAAAI,EAAA,GACA,MAAAH,EAAAP,OAAA,IACAU,GAAA,IACAH,IAAAE,OAAA,IAIAF,EAAAG,GADAH,KAAA,OAEAhd,OAAA+c,IAEAT,EAAA,IAAAA,EAAA,KAAAU,EAAAP,OAAA,MACAO,IAAAI,UAAA,IAGAd,EAAA,GAAAU,EAEA,OAAAV,EAjKAQ,CAAAR,EAAAL,EAAAa,OACA,MAAAb,EAAAoB,WAAAf,EAAA,GA6HA,SAAAe,SAAAlY,EAAAnF,GACAmF,IACAA,GAAA,IAEA,OAAAA,KAAAnF,SACAmF,EAAA+X,OAAA,EAAAld,GAEAmF,EApIAkY,CAAAf,EAAA,GAAAL,EAAAoB,WACA,EAAApB,EAAAqB,UAAAhB,EAAA,GAsGA,SAAAgB,QAAAnY,EAAAoY,GACApY,GAAA,GACA,IAAAqY,EAAA,GACA,KAAAA,EAAAxd,OAAAmF,EAAAnF,OAAAud,GACAC,EAAApc,KAAA,KAEA,OAAAoc,EAAAnY,KAAA,IAAAF,EA5GAmY,CAAAhB,EAAA,GAAAL,EAAAqB,UACA,EAAArB,EAAAwB,WAAAnB,EAAA,GA+GA,SAAAmB,SAAAtY,EAAAoY,GACApY,EACAA,GAAA,GAEAA,EAAA,GAEA,IAAAqY,EAAA,GACA,KAAAA,EAAAxd,OAAAmF,EAAAnF,OAAAud,GACAC,EAAApc,KAAA,KAEA,OAAA+D,EAAAqY,EAAAnY,KAAA,IAzHAoY,CAAAnB,EAAA,GAAAL,EAAAwB,YACAlB,EAAAmB,aAAApB,EAAA,KAAAA,EAAA,GAyFA,SAAAqB,qBAAAxY,EAAAyY,GAEA,GADAzY,GAAA,IACAyY,EAAA,OAAAzY,EACA,IAAA0Y,EAAA,eACA,KAAAA,EAAAC,KAAA3Y,IACAA,IAAAuX,QAAAmB,EAAA,KAAAD,EAAA,MAEA,OAAAzY,EAhGAwY,CAAArB,EAAA,GAAAL,EAAA8B,qBACAxB,EAAAmB,aAAApB,EAAA,KAAAA,EAAA,GA6EA,SAAA0B,qBAAA7Y,EAAAyY,GAEA,GADAzY,GAAA,IACAyY,EAAA,OAAAzY,EACA,IAAA0Y,EAAA,eACA,KAAAA,EAAAC,KAAA3Y,IACAA,IAAAuX,QAAAmB,EAAA,KAAAD,EAAA,MAEA,OAAAzY,EApFA6Y,CAAA1B,EAAA,GAAAL,EAAAZ,mBACAmB,EAAApb,KAAAkb,EAAA,IACAA,EAAA,KACAE,EAAApb,KAAA6a,EAAA7Y,SACAoZ,EAAApb,KAAAkb,EAAA,KAIAL,EAAAgC,mBAAA1B,EAAAK,SACAJ,EAAApb,KAAA6a,EAAAiC,QAEA/B,GACAK,EAAApb,KAAA6a,EAAAI,qBAEAJ,EAAAgC,kBAAA1B,EAAAK,SACAJ,EAAApb,KAAA6a,EAAAiC,QAIA1B,EAAAnX,KAAA,IAqBA,SAAA8Y,SAAA7B,EAAA8B,GACAA,KAAA,GACAnC,EAAAmC,mBACAnC,EAAAmC,kBAAA5H,QAAA,SAAAtU,GAAsDkc,EAAAhd,KAAAc,KAEtDkc,EAAAhd,KAAA6a,EAAAZ,kBACA+C,EAAAhd,KAAA6a,EAAA8B,mBAGA,IAAAM,EADA/B,GADAA,IAAAI,QAAAT,EAAAY,OAAA,KACAH,QAAAT,EAAAiC,OAAA,IAEA,GACA5B,EAAA+B,EACA,QAAAxe,EAAA,EAAqBA,EAAAue,EAAApe,OAA8BH,IACnDwe,IAAA3B,QAAA0B,EAAAve,GAAA,UAEKwe,GAAA/B,GACL,OAAAA,EAiBA,MA/HA,kBAAAL,EAAAU,kBACAV,EAAAU,iBAAA,IAAAV,EAAAqC,aAEA,kBAAArC,EAAAgC,mBACAhC,EAAAgC,kBAAA,IAAAhC,EAAAqC,aAIArC,EAAAY,OAAAZ,EAAAY,QAAA,GACAZ,EAAAiC,OAAAjC,EAAAiC,QAAA,GAGA,iBAAAjC,EAAAZ,mBACAY,EAAAZ,iBAAA,iBAAAY,EAAA2B,UAAA3B,EAAA2B,UAAA,KAEA3B,EAAA8B,kBAAA,iBAAA9B,EAAA8B,kBAAA9B,EAAA8B,kBAAA,GACA9B,EAAA7Y,QAAA6Y,EAAA7Y,SAAA,IAGA6Y,EAAAqB,QAAArB,EAAAqB,UAAA,EACArB,EAAAwB,SAAAxB,EAAAwB,WAAA,EAwDA9C,OAAAwB,SAAAF,EAAAE,SACAxB,OAAA2D,YAAArC,EAAAqC,YACA3D,OAAAuB,aAAAD,EAAAC,aACAvB,OAAAgC,gBAAAV,EAAAU,gBACAhC,OAAAyB,mBAAAH,EAAAG,mBACAzB,OAAAsD,iBAAAhC,EAAAgC,iBACAtD,OAAA0B,oBAAAJ,EAAAI,oBACA1B,OAAAkC,OAAAZ,EAAAY,OACAlC,OAAAuD,OAAAjC,EAAAiC,OACAvD,OAAA4D,SAAAtC,EAAAsC,SACA5D,OAAAU,iBAAAY,EAAAZ,iBACAV,OAAAoD,kBAAA9B,EAAA8B,kBACApD,OAAAvX,QAAA6Y,EAAA7Y,QACAuX,OAAA2C,QAAArB,EAAAqB,QACA3C,OAAA8C,SAAAxB,EAAAwB,SACA9C,OAAA0C,SAAApB,EAAAoB,SACA1C,OAAAmC,MAAAb,EAAAa,MAoBAnC,OAAAwD,kBAeAxD,OA1KApgB,EAAAC,QAAAwhB,UACAzhB,EAAAC,QAAAgkB,QAAAxC","file":"tf-0-4c883e123734c140cefb.js","sourcesContent":["var map = {\n\t\"./array\": 20,\n\t\"./array.js\": 20,\n\t\"./const\": 4,\n\t\"./const.js\": 4,\n\t\"./cookie\": 60,\n\t\"./cookie.js\": 60,\n\t\"./dom\": 2,\n\t\"./dom.js\": 2,\n\t\"./emitter\": 93,\n\t\"./emitter.js\": 93,\n\t\"./event\": 5,\n\t\"./event.js\": 5,\n\t\"./extensions/advancedGrid/adapterEzEditTable\": 442,\n\t\"./extensions/advancedGrid/adapterEzEditTable.js\": 442,\n\t\"./extensions/advancedGrid/advancedGrid\": 447,\n\t\"./extensions/advancedGrid/advancedGrid.js\": 447,\n\t\"./extensions/colOps/colOps\": 446,\n\t\"./extensions/colOps/colOps.js\": 446,\n\t\"./extensions/colsVisibility/colsVisibility\": 445,\n\t\"./extensions/colsVisibility/colsVisibility.js\": 445,\n\t\"./extensions/filtersVisibility/filtersVisibility\": 444,\n\t\"./extensions/filtersVisibility/filtersVisibility.js\": 444,\n\t\"./extensions/sort/adapterSortabletable\": 441,\n\t\"./extensions/sort/adapterSortabletable.js\": 441,\n\t\"./extensions/sort/sort\": 443,\n\t\"./extensions/sort/sort.js\": 443,\n\t\"./feature\": 10,\n\t\"./feature.js\": 10,\n\t\"./modules/alternateRows\": 63,\n\t\"./modules/alternateRows.js\": 63,\n\t\"./modules/baseDropdown\": 59,\n\t\"./modules/baseDropdown.js\": 59,\n\t\"./modules/checkList\": 91,\n\t\"./modules/checkList.js\": 91,\n\t\"./modules/clearButton\": 64,\n\t\"./modules/clearButton.js\": 64,\n\t\"./modules/dateType\": 74,\n\t\"./modules/dateType.js\": 74,\n\t\"./modules/dropdown\": 92,\n\t\"./modules/dropdown.js\": 92,\n\t\"./modules/gridLayout\": 71,\n\t\"./modules/gridLayout.js\": 71,\n\t\"./modules/hash\": 90,\n\t\"./modules/hash.js\": 90,\n\t\"./modules/help\": 73,\n\t\"./modules/help.js\": 73,\n\t\"./modules/highlightKeywords\": 69,\n\t\"./modules/highlightKeywords.js\": 69,\n\t\"./modules/loader\": 70,\n\t\"./modules/loader.js\": 70,\n\t\"./modules/markActiveColumns\": 67,\n\t\"./modules/markActiveColumns.js\": 67,\n\t\"./modules/noResults\": 62,\n\t\"./modules/noResults.js\": 62,\n\t\"./modules/paging\": 61,\n\t\"./modules/paging.js\": 61,\n\t\"./modules/popupFilter\": 68,\n\t\"./modules/popupFilter.js\": 68,\n\t\"./modules/rowsCounter\": 66,\n\t\"./modules/rowsCounter.js\": 66,\n\t\"./modules/state\": 72,\n\t\"./modules/state.js\": 72,\n\t\"./modules/statusBar\": 65,\n\t\"./modules/statusBar.js\": 65,\n\t\"./modules/storage\": 89,\n\t\"./modules/storage.js\": 89,\n\t\"./modules/toolbar\": 18,\n\t\"./modules/toolbar.js\": 18,\n\t\"./number\": 22,\n\t\"./number.js\": 22,\n\t\"./root\": 9,\n\t\"./root.js\": 9,\n\t\"./settings\": 1,\n\t\"./settings.js\": 1,\n\t\"./sort\": 36,\n\t\"./sort.js\": 36,\n\t\"./string\": 8,\n\t\"./string.js\": 8,\n\t\"./tablefilter\": 127,\n\t\"./tablefilter.js\": 127,\n\t\"./types\": 3,\n\t\"./types.js\": 3\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 440;","import {Feature} from '../../feature';\r\nimport {isUndef, isObj, EMPTY_FN} from '../../types';\r\nimport {createElm, elm, tag} from '../../dom';\r\nimport {addEvt, bound} from '../../event';\r\nimport {parse as parseNb} from '../../number';\r\nimport {\r\n    NONE, CELL_TAG, HEADER_TAG, STRING, NUMBER, DATE, FORMATTED_NUMBER,\r\n    IP_ADDRESS\r\n} from '../../const';\r\nimport {defaultsStr, defaultsFn, defaultsArr} from '../../settings';\r\n\r\n/**\r\n * SortableTable Adapter module\r\n */\r\nexport default class AdapterSortableTable extends Feature {\r\n\r\n    /**\r\n     * Creates an instance of AdapterSortableTable\r\n     * @param {TableFilter} tf TableFilter instance\r\n     * @param {Object} opts Configuration object\r\n     */\r\n    constructor(tf, opts) {\r\n        super(tf, AdapterSortableTable);\r\n\r\n        /**\r\n         * Module name\r\n         * @type {String}\r\n         */\r\n        this.name = opts.name;\r\n\r\n        /**\r\n         * Module description\r\n         * @type {String}\r\n         */\r\n        this.desc = defaultsStr(opts.description, 'Sortable table');\r\n\r\n        /**\r\n         * Indicate whether table previously sorted\r\n         * @type {Boolean}\r\n         * @private\r\n         */\r\n        this.sorted = false;\r\n\r\n        /**\r\n         * List of sort type per column basis\r\n         * @type {Array}\r\n         */\r\n        this.sortTypes = defaultsArr(opts.types, tf.colTypes);\r\n\r\n        /**\r\n         * Column to be sorted at initialization, ie:\r\n         * sort_col_at_start: [1, true]\r\n         * @type {Array}\r\n         */\r\n        this.sortColAtStart = defaultsArr(opts.sort_col_at_start, null);\r\n\r\n        /**\r\n         * Enable asynchronous sort, if triggers are external\r\n         * @type {Boolean}\r\n         */\r\n        this.asyncSort = Boolean(opts.async_sort);\r\n\r\n        /**\r\n         * List of element IDs triggering sort on a per column basis\r\n         * @type {Array}\r\n         */\r\n        this.triggerIds = defaultsArr(opts.trigger_ids, []);\r\n\r\n        // edit .sort-arrow.descending / .sort-arrow.ascending in\r\n        // tablefilter.css to reflect any path change\r\n        /**\r\n         * Path to images\r\n         * @type {String}\r\n         */\r\n        this.imgPath = defaultsStr(opts.images_path, tf.themesPath);\r\n\r\n        /**\r\n         * Blank image file name\r\n         * @type {String}\r\n         */\r\n        this.imgBlank = defaultsStr(opts.image_blank, 'blank.png');\r\n\r\n        /**\r\n         * Css class for sort indicator image\r\n         * @type {String}\r\n         */\r\n        this.imgClassName = defaultsStr(opts.image_class_name, 'sort-arrow');\r\n\r\n        /**\r\n         * Css class for ascending sort indicator image\r\n         * @type {String}\r\n         */\r\n        this.imgAscClassName = defaultsStr(opts.image_asc_class_name,\r\n            'ascending');\r\n\r\n        /**\r\n         * Css class for descending sort indicator image\r\n         * @type {String}\r\n         */\r\n        this.imgDescClassName = defaultsStr(opts.image_desc_class_name,\r\n            'descending');\r\n\r\n        /**\r\n         * Cell attribute key storing custom value used for sorting\r\n         * @type {String}\r\n         */\r\n        this.customKey = defaultsStr(opts.custom_key, 'data-tf-sortKey');\r\n\r\n        /**\r\n         * Callback fired when sort extension is instanciated\r\n         * @type {Function}\r\n         */\r\n        this.onSortLoaded = defaultsFn(opts.on_sort_loaded, EMPTY_FN);\r\n\r\n        /**\r\n         * Callback fired before a table column is sorted\r\n         * @type {Function}\r\n         */\r\n        this.onBeforeSort = defaultsFn(opts.on_before_sort, EMPTY_FN);\r\n\r\n        /**\r\n         * Callback fired after a table column is sorted\r\n         * @type {Function}\r\n         */\r\n        this.onAfterSort = defaultsFn(opts.on_after_sort, EMPTY_FN);\r\n\r\n        /**\r\n         * SortableTable instance\r\n         * @private\r\n         */\r\n        this.stt = null;\r\n\r\n        this.enable();\r\n    }\r\n\r\n    /**\r\n     * Initializes AdapterSortableTable instance\r\n     */\r\n    init() {\r\n        if (this.initialized) {\r\n            return;\r\n        }\r\n        let tf = this.tf;\r\n        let adpt = this;\r\n\r\n        // SortableTable class sanity check (sortabletable.js)\r\n        if (isUndef(SortableTable)) {\r\n            throw new Error('SortableTable class not found.');\r\n        }\r\n\r\n        // Add any date format if needed\r\n        this.emitter.emit('add-date-type-formats', this.tf, this.sortTypes);\r\n\r\n        this.overrideSortableTable();\r\n        this.setSortTypes();\r\n\r\n        this.onSortLoaded(tf, this);\r\n\r\n        /*** SortableTable callbacks ***/\r\n        this.stt.onbeforesort = function () {\r\n            adpt.onBeforeSort(tf, adpt.stt.sortColumn);\r\n\r\n            /*** sort behaviour for paging ***/\r\n            if (tf.paging) {\r\n                tf.feature('paging').disable();\r\n            }\r\n        };\r\n\r\n        this.stt.onsort = function () {\r\n            adpt.sorted = true;\r\n\r\n            //sort behaviour for paging\r\n            if (tf.paging) {\r\n                let paginator = tf.feature('paging');\r\n                // recalculate valid rows index as sorting may have change it\r\n                tf.getValidRows(true);\r\n                paginator.enable();\r\n                paginator.setPage(paginator.getPage());\r\n            }\r\n\r\n            adpt.onAfterSort(tf, adpt.stt.sortColumn, adpt.stt.descending);\r\n            adpt.emitter.emit('column-sorted', tf, adpt.stt.sortColumn,\r\n                adpt.stt.descending);\r\n        };\r\n\r\n        // Column sort at start\r\n        let sortColAtStart = adpt.sortColAtStart;\r\n        if (sortColAtStart) {\r\n            this.stt.sort(sortColAtStart[0], sortColAtStart[1]);\r\n        }\r\n\r\n        this.emitter.on(['sort'], bound(this.sortByColumnIndexHandler, this));\r\n\r\n        /** @inherited */\r\n        this.initialized = true;\r\n\r\n        this.emitter.emit('sort-initialized', tf, this);\r\n    }\r\n\r\n    /**\r\n     * Sort specified column\r\n     * @param {Number} colIdx Column index\r\n     * @param {Boolean} desc Optional: descending manner\r\n     */\r\n    sortByColumnIndex(colIdx, desc) {\r\n        this.stt.sort(colIdx, desc);\r\n    }\r\n\r\n    /** @private */\r\n    sortByColumnIndexHandler(tf, colIdx, desc) {\r\n        this.sortByColumnIndex(colIdx, desc);\r\n    }\r\n\r\n    /**\r\n     * Set SortableTable overrides for TableFilter integration\r\n     */\r\n    overrideSortableTable() {\r\n        let adpt = this,\r\n            tf = this.tf;\r\n\r\n        /**\r\n         * Overrides headerOnclick method in order to handle th event\r\n         * @param  {Object} e [description]\r\n         */\r\n        SortableTable.prototype.headerOnclick = function (evt) {\r\n            if (!adpt.initialized) {\r\n                return;\r\n            }\r\n\r\n            // find Header element\r\n            let el = evt.target || evt.srcElement;\r\n\r\n            while (el.tagName !== CELL_TAG && el.tagName !== HEADER_TAG) {\r\n                el = el.parentNode;\r\n            }\r\n\r\n            this.sort(\r\n                SortableTable.msie ?\r\n                    SortableTable.getCellIndex(el) : el.cellIndex\r\n            );\r\n        };\r\n\r\n        /**\r\n         * Overrides getCellIndex IE returns wrong cellIndex when columns are\r\n         * hidden\r\n         * @param  {Object} oTd TD element\r\n         * @return {Number}     Cell index\r\n         */\r\n        SortableTable.getCellIndex = function (oTd) {\r\n            let cells = oTd.parentNode.cells,\r\n                l = cells.length, i;\r\n            for (i = 0; cells[i] !== oTd && i < l; i++) { }\r\n            return i;\r\n        };\r\n\r\n        /**\r\n         * Overrides initHeader in order to handle filters row position\r\n         * @param  {Array} oSortTypes\r\n         */\r\n        SortableTable.prototype.initHeader = function (oSortTypes) {\r\n            let stt = this;\r\n            if (!stt.tHead) {\r\n                if (tf.gridLayout) {\r\n                    stt.tHead = tf.feature('gridLayout').headTbl.tHead;\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            stt.headersRow = tf.headersRow;\r\n            let cells = stt.tHead.rows[stt.headersRow].cells;\r\n            stt.sortTypes = oSortTypes || [];\r\n            let l = cells.length;\r\n            let img, c;\r\n\r\n            for (let i = 0; i < l; i++) {\r\n                c = cells[i];\r\n                if (stt.sortTypes[i] !== null && stt.sortTypes[i] !== 'None') {\r\n                    c.style.cursor = 'pointer';\r\n                    img = createElm('img',\r\n                        ['src', adpt.imgPath + adpt.imgBlank]);\r\n                    c.appendChild(img);\r\n                    if (stt.sortTypes[i] !== null) {\r\n                        c.setAttribute('_sortType', stt.sortTypes[i]);\r\n                    }\r\n                    addEvt(c, 'click', stt._headerOnclick);\r\n                } else {\r\n                    c.setAttribute('_sortType', oSortTypes[i]);\r\n                    c._sortType = 'None';\r\n                }\r\n            }\r\n            stt.updateHeaderArrows();\r\n        };\r\n\r\n        /**\r\n         * Overrides updateHeaderArrows in order to handle arrows indicators\r\n         */\r\n        SortableTable.prototype.updateHeaderArrows = function () {\r\n            let stt = this;\r\n            let cells, l, img;\r\n\r\n            // external headers\r\n            if (adpt.asyncSort && adpt.triggerIds.length > 0) {\r\n                let triggers = adpt.triggerIds;\r\n                cells = [];\r\n                l = triggers.length;\r\n                for (let j = 0; j < l; j++) {\r\n                    cells.push(elm(triggers[j]));\r\n                }\r\n            } else {\r\n                if (!this.tHead) {\r\n                    return;\r\n                }\r\n                cells = stt.tHead.rows[stt.headersRow].cells;\r\n                l = cells.length;\r\n            }\r\n            for (let i = 0; i < l; i++) {\r\n                let cell = cells[i];\r\n                if (!cell) {\r\n                    continue;\r\n                }\r\n                let cellAttr = cell.getAttribute('_sortType');\r\n                if (cellAttr !== null && cellAttr !== 'None') {\r\n                    img = cell.lastChild || cell;\r\n                    if (img.nodeName.toLowerCase() !== 'img') {\r\n                        img = createElm('img',\r\n                            ['src', adpt.imgPath + adpt.imgBlank]);\r\n                        cell.appendChild(img);\r\n                    }\r\n                    if (i === stt.sortColumn) {\r\n                        img.className = adpt.imgClassName + ' ' +\r\n                            (this.descending ?\r\n                                adpt.imgDescClassName :\r\n                                adpt.imgAscClassName);\r\n                    } else {\r\n                        img.className = adpt.imgClassName;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Overrides getRowValue for custom key value feature\r\n         * @param  {Object} oRow    Row element\r\n         * @param  {String} sType\r\n         * @param  {Number} nColumn\r\n         * @return {String}\r\n         */\r\n        SortableTable.prototype.getRowValue = function (oRow, sType, nColumn) {\r\n            let stt = this;\r\n            // if we have defined a custom getRowValue use that\r\n            let sortTypeInfo = stt._sortTypeInfo[sType];\r\n            if (sortTypeInfo && sortTypeInfo.getRowValue) {\r\n                return sortTypeInfo.getRowValue(oRow, nColumn);\r\n            }\r\n            let c = oRow.cells[nColumn];\r\n            let s = SortableTable.getInnerText(c);\r\n            return stt.getValueFromString(s, sType);\r\n        };\r\n\r\n        /**\r\n         * Overrides getInnerText in order to avoid Firefox unexpected sorting\r\n         * behaviour with untrimmed text elements\r\n         * @param  {Object} cell DOM element\r\n         * @return {String}       DOM element inner text\r\n         */\r\n        SortableTable.getInnerText = function (cell) {\r\n            if (!cell) {\r\n                return;\r\n            }\r\n            if (cell.getAttribute(adpt.customKey)) {\r\n                return cell.getAttribute(adpt.customKey);\r\n            } else {\r\n                return tf.getCellValue(cell);\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Adds a sort type\r\n     */\r\n    addSortType(...args) {\r\n        // Extract the arguments\r\n        let [id, caster, sorter, getRowValue] = args;\r\n        SortableTable.prototype.addSortType(id, caster, sorter, getRowValue);\r\n    }\r\n\r\n    /**\r\n     * Sets the sort types on a column basis\r\n     * @private\r\n     */\r\n    setSortTypes() {\r\n        let tf = this.tf,\r\n            sortTypes = this.sortTypes,\r\n            _sortTypes = [];\r\n\r\n        tf.eachCol((i) => {\r\n            let colType;\r\n            if (sortTypes[i]) {\r\n                colType = sortTypes[i];\r\n                if (isObj(colType)) {\r\n                    if (colType.type === DATE) {\r\n                        colType = this._addDateType(i, sortTypes);\r\n                    }\r\n                    else if (colType.type === FORMATTED_NUMBER) {\r\n                        let decimal = colType.decimal || tf.decimalSeparator;\r\n                        colType = this._addNumberType(i, decimal);\r\n                    }\r\n                } else {\r\n                    colType = colType.toLowerCase();\r\n                    if (colType === DATE) {\r\n                        colType = this._addDateType(i, sortTypes);\r\n                    }\r\n                    else if (colType === FORMATTED_NUMBER ||\r\n                        colType === NUMBER) {\r\n                        colType = this._addNumberType(i, tf.decimalSeparator);\r\n                    }\r\n                    else if (colType === NONE) {\r\n                        // TODO: normalise 'none' vs 'None'\r\n                        colType = 'None';\r\n                    }\r\n                }\r\n            } else {\r\n                colType = STRING;\r\n            }\r\n            _sortTypes.push(colType);\r\n        });\r\n\r\n        //Public TF method to add sort type\r\n\r\n        //Custom sort types\r\n        this.addSortType('caseinsensitivestring', SortableTable.toUpperCase);\r\n        this.addSortType(STRING);\r\n        this.addSortType(IP_ADDRESS, ipAddress, sortIP);\r\n\r\n        this.stt = new SortableTable(tf.dom(), _sortTypes);\r\n\r\n        /*** external table headers adapter ***/\r\n        if (this.asyncSort && this.triggerIds.length > 0) {\r\n            let triggers = this.triggerIds;\r\n            for (let j = 0; j < triggers.length; j++) {\r\n                if (triggers[j] === null) {\r\n                    continue;\r\n                }\r\n                let trigger = elm(triggers[j]);\r\n                if (trigger) {\r\n                    trigger.style.cursor = 'pointer';\r\n\r\n                    addEvt(trigger, 'click', (evt) => {\r\n                        let elm = evt.target;\r\n                        if (!this.tf.sort) {\r\n                            return;\r\n                        }\r\n                        this.stt.asyncSort(triggers.indexOf(elm.id));\r\n                    });\r\n                    trigger.setAttribute('_sortType', _sortTypes[j]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _addDateType(colIndex, types) {\r\n        let tf = this.tf;\r\n        let dateType = tf.feature('dateType');\r\n        let locale = dateType.getOptions(colIndex, types).locale || tf.locale;\r\n        let colType = `${DATE}-${locale}`;\r\n\r\n        this.addSortType(colType, (value) => {\r\n            let parsedDate = dateType.parse(value, locale);\r\n            // Invalid date defaults to Wed Feb 04 -768 11:00:00\r\n            return isNaN(+parsedDate) ? new Date(-86400000000000) : parsedDate;\r\n        });\r\n        return colType;\r\n    }\r\n\r\n    _addNumberType(colIndex, decimal) {\r\n        let colType = `${FORMATTED_NUMBER}${decimal === '.' ? '' : '-custom'}`;\r\n\r\n        this.addSortType(colType, (value) => {\r\n            return parseNb(value, decimal);\r\n        });\r\n        return colType;\r\n    }\r\n\r\n    /**\r\n     * Remove extension\r\n     */\r\n    destroy() {\r\n        if (!this.initialized) {\r\n            return;\r\n        }\r\n        let tf = this.tf;\r\n        this.emitter.off(['sort'], bound(this.sortByColumnIndexHandler, this));\r\n        this.sorted = false;\r\n        this.stt.destroy();\r\n\r\n        let ids = tf.getFiltersId();\r\n        for (let idx = 0; idx < ids.length; idx++) {\r\n            let header = tf.getHeaderElement(idx);\r\n            let img = tag(header, 'img');\r\n\r\n            if (img.length === 1) {\r\n                header.removeChild(img[0]);\r\n            }\r\n        }\r\n        this.initialized = false;\r\n    }\r\n\r\n}\r\n\r\nAdapterSortableTable.meta = {altName: 'sort'};\r\n\r\n//Converters\r\nfunction ipAddress(value) {\r\n    let vals = value.split('.');\r\n    for (let x in vals) {\r\n        let val = vals[x];\r\n        while (3 > val.length) {\r\n            val = '0' + val;\r\n        }\r\n        vals[x] = val;\r\n    }\r\n    return vals.join('.');\r\n}\r\n\r\nfunction sortIP(a, b) {\r\n    let aa = ipAddress(a.value.toLowerCase());\r\n    let bb = ipAddress(b.value.toLowerCase());\r\n    if (aa === bb) {\r\n        return 0;\r\n    } else if (aa < bb) {\r\n        return -1;\r\n    } else {\r\n        return 1;\r\n    }\r\n}\r\n","import {Feature} from '../../feature';\r\nimport {tag} from '../../dom';\r\nimport {INPUT} from '../../const';\r\nimport {defaultsStr} from '../../settings';\r\nimport {root} from '../../root';\r\n\r\nconst INSTANTIATION_ERROR = `Failed to instantiate EditTable object.\r\n    \\n\"ezEditTable\" dependency not found.`;\r\n\r\n/**\r\n * Adapter module for ezEditTable, an external library providing advanced\r\n * grid features (selection and edition):\r\n * http://codecanyon.net/item/ezedittable-enhance-html-tables/2425123?ref=koalyptus\r\n */\r\nexport default class AdapterEzEditTable extends Feature {\r\n\r\n    /**\r\n     * Creates an instance of AdapterEzEditTable\r\n     *\r\n     * @param {TableFilter} tf TableFilter instance\r\n     * @param {Object} cfg Configuration options for ezEditTable library\r\n     */\r\n    constructor(tf, cfg) {\r\n        super(tf, AdapterEzEditTable);\r\n\r\n        /**\r\n         * Module description\r\n         * @type {String}\r\n         */\r\n        this.desc = defaultsStr(cfg.description, 'ezEditTable adapter');\r\n\r\n        /**\r\n         * Filename of ezEditTable library\r\n         * @type {String}\r\n         */\r\n        this.filename = defaultsStr(cfg.filename, 'ezEditTable.js');\r\n\r\n        /**\r\n         * Path to ezEditTable library\r\n         * @type {String}\r\n         */\r\n        this.vendorPath = cfg.vendor_path;\r\n\r\n        /**\r\n         * Load ezEditTable stylesheet\r\n         * @type {Boolean}\r\n         */\r\n        this.loadStylesheet = Boolean(cfg.load_stylesheet);\r\n\r\n        /**\r\n         * Path to ezEditTable stylesheet\r\n         * @type {String}\r\n         */\r\n        this.stylesheet = defaultsStr(cfg.stylesheet,\r\n            this.vendorPath + 'ezEditTable.css');\r\n\r\n        /**\r\n         * Name of ezEditTable stylesheet\r\n         * @type {String}\r\n         */\r\n        this.stylesheetName = defaultsStr(cfg.stylesheet_name,\r\n            'ezEditTableCss');\r\n\r\n        // Enable the ezEditTable's scroll into view behaviour if grid layout on\r\n        cfg.scroll_into_view = cfg.scroll_into_view === false ?\r\n            false : tf.gridLayout;\r\n\r\n        /**\r\n         * ezEditTable instance\r\n         * @type {EditTable}\r\n         * @private\r\n         */\r\n        this._ezEditTable = null;\r\n\r\n        /**\r\n         * ezEditTable configuration\r\n         * @private\r\n         */\r\n        this.cfg = cfg;\r\n\r\n        this.enable();\r\n    }\r\n\r\n    /**\r\n     * Conditionally load ezEditTable library and set advanced grid\r\n     */\r\n    init() {\r\n        if (this.initialized) {\r\n            return;\r\n        }\r\n        let tf = this.tf;\r\n        if (root.EditTable) {\r\n            this._setAdvancedGrid();\r\n        } else {\r\n            let path = this.vendorPath + this.filename;\r\n            tf.import(this.filename, path, () => this._setAdvancedGrid());\r\n        }\r\n        if (this.loadStylesheet && !tf.isImported(this.stylesheet, 'link')) {\r\n            tf.import(this.stylesheetName, this.stylesheet, null, 'link');\r\n        }\r\n\r\n        // TODO: hack to prevent ezEditTable enter key event hijaking.\r\n        // Needs to be fixed in the vendor's library\r\n        this.emitter.on(['filter-focus', 'filter-blur'],\r\n            () => this._toggleForInputFilter());\r\n\r\n        /**\r\n         * @inherited\r\n         */\r\n        this.initialized = true;\r\n    }\r\n\r\n    /**\r\n     * Instantiate ezEditTable component for advanced grid features\r\n     * @private\r\n     */\r\n    _setAdvancedGrid() {\r\n        let tf = this.tf;\r\n\r\n        //start row for EditTable constructor needs to be calculated\r\n        let startRow,\r\n            cfg = this.cfg,\r\n            thead = tag(tf.dom(), 'thead');\r\n\r\n        //if thead exists and startRow not specified, startRow is calculated\r\n        //automatically by EditTable\r\n        if (thead.length > 0 && !cfg.startRow) {\r\n            startRow = undefined;\r\n        }\r\n        //otherwise startRow config property if any or TableFilter refRow\r\n        else {\r\n            startRow = cfg.startRow || tf.refRow;\r\n        }\r\n\r\n        cfg.base_path = cfg.base_path || tf.basePath + 'ezEditTable/';\r\n        let editable = cfg.editable;\r\n        let selectable = cfg.selection;\r\n\r\n        if (selectable) {\r\n            cfg.default_selection = cfg.default_selection || 'row';\r\n        }\r\n        //CSS Styles\r\n        cfg.active_cell_css = cfg.active_cell_css || 'ezETSelectedCell';\r\n\r\n        let _lastValidRowIndex = 0;\r\n        let _lastRowIndex = 0;\r\n\r\n        if (selectable) {\r\n            //Row navigation needs to be calculated according to TableFilter's\r\n            //validRowsIndex array\r\n            let onAfterSelection = function (et, selectedElm, e) {\r\n                let slc = et.Selection;\r\n                //Next valid filtered row needs to be selected\r\n                let doSelect = function (nextRowIndex) {\r\n                    if (et.defaultSelection === 'row') {\r\n                        /* eslint-disable */\r\n                        slc.SelectRowByIndex(nextRowIndex);\r\n                        /* eslint-enable */\r\n                    } else {\r\n                        /* eslint-disable */\r\n                        et.ClearSelections();\r\n                        /* eslint-enable */\r\n                        let cellIndex = selectedElm.cellIndex,\r\n                            row = tf.dom().rows[nextRowIndex];\r\n                        if (et.defaultSelection === 'both') {\r\n                            /* eslint-disable */\r\n                            slc.SelectRowByIndex(nextRowIndex);\r\n                            /* eslint-enable */\r\n                        }\r\n                        if (row) {\r\n                            /* eslint-disable */\r\n                            slc.SelectCell(row.cells[cellIndex]);\r\n                            /* eslint-enable */\r\n                        }\r\n                    }\r\n                    //Table is filtered\r\n                    if (tf.validRowsIndex.length !== tf.getRowsNb()) {\r\n                        let r = tf.dom().rows[nextRowIndex];\r\n                        if (r) {\r\n                            r.scrollIntoView(false);\r\n                        }\r\n                        if (cell) {\r\n                            if (cell.cellIndex === (tf.getCellsNb() - 1) &&\r\n                                tf.gridLayout) {\r\n                                tf.tblCont.scrollLeft = 100000000;\r\n                            }\r\n                            else if (cell.cellIndex === 0 && tf.gridLayout) {\r\n                                tf.tblCont.scrollLeft = 0;\r\n                            } else {\r\n                                cell.scrollIntoView(false);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                //table is not filtered\r\n                if (!tf.validRowsIndex) {\r\n                    return;\r\n                }\r\n                let validIndexes = tf.validRowsIndex,\r\n                    validIdxLen = validIndexes.length,\r\n                    row = et.defaultSelection !== 'row' ?\r\n                        selectedElm.parentNode : selectedElm,\r\n                    //cell for default_selection = 'both' or 'cell'\r\n                    cell = selectedElm.nodeName === 'TD' ? selectedElm : null,\r\n                    /* eslint-disable */\r\n                    keyCode = e !== undefined ? et.Event.GetKey(e) : 0,\r\n                    /* eslint-enable */\r\n                    isRowValid = validIndexes.indexOf(row.rowIndex) !== -1,\r\n                    nextRowIndex,\r\n                    paging = tf.feature('paging'),\r\n                    //pgup/pgdown keys\r\n                    d = keyCode === 34 || keyCode === 33 ?\r\n                        (paging && paging.pageLength || et.nbRowsPerPage) :\r\n                        1;\r\n\r\n                //If next row is not valid, next valid filtered row needs to be\r\n                //calculated\r\n                if (!isRowValid) {\r\n                    //Selection direction up/down\r\n                    if (row.rowIndex > _lastRowIndex) {\r\n                        //last row\r\n                        if (row.rowIndex >= validIndexes[validIdxLen - 1]) {\r\n                            nextRowIndex = validIndexes[validIdxLen - 1];\r\n                        } else {\r\n                            let calcRowIndex = (_lastValidRowIndex + d);\r\n                            if (calcRowIndex > (validIdxLen - 1)) {\r\n                                nextRowIndex = validIndexes[validIdxLen - 1];\r\n                            } else {\r\n                                nextRowIndex = validIndexes[calcRowIndex];\r\n                            }\r\n                        }\r\n                    } else {\r\n                        //first row\r\n                        if (row.rowIndex <= validIndexes[0]) {\r\n                            nextRowIndex = validIndexes[0];\r\n                        } else {\r\n                            let v = validIndexes[_lastValidRowIndex - d];\r\n                            nextRowIndex = v ? v : validIndexes[0];\r\n                        }\r\n                    }\r\n                    _lastRowIndex = row.rowIndex;\r\n                    doSelect(nextRowIndex);\r\n                } else {\r\n                    //If filtered row is valid, special calculation for\r\n                    //pgup/pgdown keys\r\n                    if (keyCode !== 34 && keyCode !== 33) {\r\n                        _lastValidRowIndex = validIndexes.indexOf(row.rowIndex);\r\n                        _lastRowIndex = row.rowIndex;\r\n                    } else {\r\n                        if (keyCode === 34) { //pgdown\r\n                            //last row\r\n                            if ((_lastValidRowIndex + d) <= (validIdxLen - 1)) {\r\n                                nextRowIndex = validIndexes[\r\n                                    _lastValidRowIndex + d];\r\n                            } else {\r\n                                nextRowIndex = [validIdxLen - 1];\r\n                            }\r\n                        } else { //pgup\r\n                            //first row\r\n                            if ((_lastValidRowIndex - d) <= validIndexes[0]) {\r\n                                nextRowIndex = validIndexes[0];\r\n                            } else {\r\n                                nextRowIndex = validIndexes[\r\n                                    _lastValidRowIndex - d];\r\n                            }\r\n                        }\r\n                        _lastRowIndex = nextRowIndex;\r\n                        _lastValidRowIndex = validIndexes.indexOf(nextRowIndex);\r\n                        doSelect(nextRowIndex);\r\n                    }\r\n                }\r\n            };\r\n\r\n            //Page navigation has to be enforced whenever selected row is out of\r\n            //the current page range\r\n            let onBeforeSelection = function (et, selectedElm) {\r\n                let row = et.defaultSelection !== 'row' ?\r\n                    selectedElm.parentNode : selectedElm;\r\n                if (tf.paging) {\r\n                    if (tf.feature('paging').nbPages > 1) {\r\n                        let paging = tf.feature('paging');\r\n                        //page length is re-assigned in case it has changed\r\n                        et.nbRowsPerPage = paging.pageLength;\r\n                        let validIndexes = tf.validRowsIndex,\r\n                            validIdxLen = validIndexes.length,\r\n                            pagingEndRow = parseInt(paging.startPagingRow, 10) +\r\n                                parseInt(paging.pageLength, 10);\r\n                        let rowIndex = row.rowIndex;\r\n\r\n                        if ((rowIndex === validIndexes[validIdxLen - 1]) &&\r\n                            paging.currentPageNb !== paging.nbPages) {\r\n                            paging.setPage('last');\r\n                        }\r\n                        else if ((rowIndex === validIndexes[0]) &&\r\n                            paging.currentPageNb !== 1) {\r\n                            paging.setPage('first');\r\n                        }\r\n                        else if (rowIndex > validIndexes[pagingEndRow - 1] &&\r\n                            rowIndex < validIndexes[validIdxLen - 1]) {\r\n                            paging.setPage('next');\r\n                        }\r\n                        else if (\r\n                            rowIndex < validIndexes[paging.startPagingRow] &&\r\n                            rowIndex > validIndexes[0]) {\r\n                            paging.setPage('previous');\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            //Selected row needs to be visible when paging is activated\r\n            if (tf.paging) {\r\n                tf.feature('paging').onAfterChangePage = function (paging) {\r\n                    let advGrid = paging.tf.extension('advancedGrid');\r\n                    let et = advGrid._ezEditTable;\r\n                    let slc = et.Selection;\r\n                    /* eslint-disable */\r\n                    let row = slc.GetActiveRow();\r\n                    /* eslint-enable */\r\n                    if (row) {\r\n                        row.scrollIntoView(false);\r\n                    }\r\n                    /* eslint-disable */\r\n                    let cell = slc.GetActiveCell();\r\n                    /* eslint-enable */\r\n                    if (cell) {\r\n                        cell.scrollIntoView(false);\r\n                    }\r\n                };\r\n            }\r\n\r\n            //Rows navigation when rows are filtered is performed with the\r\n            //EditTable row selection callback events\r\n            if (cfg.default_selection === 'row') {\r\n                let fnB = cfg.on_before_selected_row;\r\n                cfg.on_before_selected_row = function () {\r\n                    var args = arguments;\r\n                    onBeforeSelection(args[0], args[1], args[2]);\r\n                    if (fnB) {\r\n                        fnB.call(null, args[0], args[1], args[2]);\r\n                    }\r\n                };\r\n                let fnA = cfg.on_after_selected_row;\r\n                cfg.on_after_selected_row = function () {\r\n                    var args = arguments;\r\n                    onAfterSelection(args[0], args[1], args[2]);\r\n                    if (fnA) {\r\n                        fnA.call(null, args[0], args[1], args[2]);\r\n                    }\r\n                };\r\n            } else {\r\n                let fnD = cfg.on_before_selected_cell;\r\n                cfg.on_before_selected_cell = function () {\r\n                    var args = arguments;\r\n                    onBeforeSelection(args[0], args[1], args[2]);\r\n                    if (fnD) {\r\n                        fnD.call(null, args[0], args[1], args[2]);\r\n                    }\r\n                };\r\n                let fnC = cfg.on_after_selected_cell;\r\n                cfg.on_after_selected_cell = function () {\r\n                    var args = arguments;\r\n                    onAfterSelection(args[0], args[1], args[2]);\r\n                    if (fnC) {\r\n                        fnC.call(null, args[0], args[1], args[2]);\r\n                    }\r\n                };\r\n            }\r\n        }\r\n        if (editable) {\r\n            //Added or removed rows, TF rows number needs to be re-calculated\r\n            let fnE = cfg.on_added_dom_row;\r\n            cfg.on_added_dom_row = function () {\r\n                var args = arguments;\r\n                tf.nbFilterableRows++;\r\n                if (!tf.paging) {\r\n                    tf.emitter.emit('rows-changed', tf, this);\r\n                } else {\r\n                    tf.nbFilterableRows++;\r\n                    tf.paging = false;\r\n                    tf.feature('paging').destroy();\r\n                    tf.feature('paging').reset();\r\n                }\r\n                if (tf.alternateRows) {\r\n                    tf.feature('alternateRows').init();\r\n                }\r\n                if (fnE) {\r\n                    fnE.call(null, args[0], args[1], args[2]);\r\n                }\r\n            };\r\n            if (cfg.actions && cfg.actions['delete']) {\r\n                let fnF = cfg.actions['delete'].on_after_submit;\r\n                cfg.actions['delete'].on_after_submit = function () {\r\n                    var args = arguments;\r\n                    tf.nbFilterableRows--;\r\n                    if (!tf.paging) {\r\n                        tf.emitter.emit('rows-changed', tf, this);\r\n                    } else {\r\n                        tf.nbFilterableRows--;\r\n                        tf.paging = false;\r\n                        tf.feature('paging').destroy();\r\n                        tf.feature('paging').reset(false);\r\n                    }\r\n                    if (tf.alternateRows) {\r\n                        tf.feature('alternateRows').init();\r\n                    }\r\n                    if (fnF) {\r\n                        fnF.call(null, args[0], args[1]);\r\n                    }\r\n                };\r\n            }\r\n        }\r\n\r\n        try {\r\n            /* eslint-disable */\r\n            this._ezEditTable = new EditTable(tf.id, cfg, startRow);\r\n            this._ezEditTable.Init();\r\n            /* eslint-enable */\r\n        } catch (e) { throw new Error(INSTANTIATION_ERROR); }\r\n\r\n        this.initialized = true;\r\n    }\r\n\r\n    /**\r\n     * Reset advanced grid when previously removed\r\n     */\r\n    reset() {\r\n        let ezEditTable = this._ezEditTable;\r\n        if (ezEditTable) {\r\n            if (this.cfg.selection) {\r\n                /* eslint-disable */\r\n                ezEditTable.Selection.Set();\r\n                /* eslint-enable */\r\n            }\r\n            if (this.cfg.editable) {\r\n                /* eslint-disable */\r\n                ezEditTable.Editable.Set();\r\n                /* eslint-enable */\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle behaviour\r\n     */\r\n    toggle() {\r\n        let ezEditTable = this._ezEditTable;\r\n        if (ezEditTable.editable) {\r\n            /* eslint-disable */\r\n            ezEditTable.Editable.Remove();\r\n            /* eslint-enable */\r\n        } else {\r\n            /* eslint-disable */\r\n            ezEditTable.Editable.Set();\r\n            /* eslint-enable */\r\n        }\r\n        if (ezEditTable.selection) {\r\n            /* eslint-disable */\r\n            ezEditTable.Selection.Remove();\r\n            /* eslint-enable */\r\n        } else {\r\n            /* eslint-disable */\r\n            ezEditTable.Selection.Set();\r\n            /* eslint-enable */\r\n        }\r\n    }\r\n\r\n    _toggleForInputFilter() {\r\n        let tf = this.tf;\r\n        if (!tf.getActiveFilterId()) {\r\n            return;\r\n        }\r\n        let colIndex = tf.getColumnIndexFromFilterId(tf.getActiveFilterId());\r\n        let filterType = tf.getFilterType(colIndex);\r\n        if (filterType === INPUT) {\r\n            this.toggle();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove advanced grid\r\n     */\r\n    destroy() {\r\n        if (!this.initialized) {\r\n            return;\r\n        }\r\n        let ezEditTable = this._ezEditTable;\r\n        if (ezEditTable) {\r\n            if (this.cfg.selection) {\r\n                /* eslint-disable */\r\n                ezEditTable.Selection.ClearSelections();\r\n                ezEditTable.Selection.Remove();\r\n                /* eslint-enable */\r\n            }\r\n            if (this.cfg.editable) {\r\n                /* eslint-disable */\r\n                ezEditTable.Editable.Remove();\r\n                /* eslint-enable */\r\n            }\r\n        }\r\n\r\n        this.emitter.off(['filter-focus', 'filter-blur'],\r\n            () => this._toggleForInputFilter());\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nAdapterEzEditTable.meta = {altName: 'advancedGrid'};\r\n","import AdapterSortableTable from './adapterSortabletable';\r\nimport {root} from '../../root';\r\n\r\nif (!root.SortableTable) {\r\n    require('script-loader!sortabletable');\r\n}\r\n\r\nexport default AdapterSortableTable;\r\n","import {Feature} from '../../feature';\r\nimport {createElm, removeElm, elm} from '../../dom';\r\nimport {EMPTY_FN, isNull} from '../../types';\r\nimport {addEvt} from '../../event';\r\nimport {\r\n    defaultsBool, defaultsStr, defaultsFn, defaultsNb,\r\n} from '../../settings';\r\nimport {RIGHT} from '../../modules/toolbar';\r\n\r\n/**\r\n * Filters Visibility extension\r\n */\r\nexport default class FiltersVisibility extends Feature {\r\n\r\n    /**\r\n     * Creates an instance of FiltersVisibility\r\n     * @param {TableFilter} tf TableFilter instance\r\n     * @param {Object} Configuration object\r\n     */\r\n    constructor(tf, f) {\r\n        super(tf, FiltersVisibility);\r\n\r\n        /**\r\n         * Module name\r\n         * @type {String}\r\n         */\r\n        this.name = f.name;\r\n\r\n        /**\r\n         * Module description\r\n         * @type {String}\r\n         */\r\n        this.desc = defaultsStr(f.description,\r\n            'Filters row visibility manager');\r\n\r\n        /**\r\n         * Extension's stylesheet filename\r\n         * @type {String}\r\n         */\r\n        this.stylesheet = defaultsStr(f.stylesheet , 'filtersVisibility.css');\r\n\r\n        /**\r\n         * Expand icon filename\r\n         * @type {String}\r\n         */\r\n        this.icnExpand = defaultsStr(f.expand_icon_name, 'icn_exp.png');\r\n\r\n        /**\r\n         * Collapse icon filename\r\n         * @type {String}\r\n         */\r\n        this.icnCollapse = defaultsStr(f.collapse_icon_name, 'icn_clp.png');\r\n\r\n        /**\r\n         * Main container element\r\n         * @private\r\n         */\r\n        this.contEl = null;\r\n\r\n        /**\r\n         * Button element\r\n         * @private\r\n         */\r\n        this.btnEl = null;\r\n\r\n        /**\r\n         * Expand icon HTML\r\n         * @private\r\n         */\r\n        this.icnExpandHtml = '<img src=\"' + tf.themesPath + this.icnExpand +\r\n            '\" alt=\"Expand filters\" >';\r\n\r\n        /**\r\n         * Collapse icon HTML\r\n         * @private\r\n         */\r\n        this.icnCollapseHtml = '<img src=\"' + tf.themesPath + this.icnCollapse +\r\n            '\" alt=\"Collapse filters\" >';\r\n\r\n        /**\r\n         * Default text\r\n         * @private\r\n         */\r\n        this.defaultText = 'Toggle filters';\r\n\r\n        /**\r\n         * ID of main container element\r\n         * @type {String}\r\n         */\r\n        this.targetId = f.target_id || null;\r\n\r\n        /**\r\n         * Enable expand/collapse icon, defaults to true\r\n         * @type {Boolean}\r\n         */\r\n        this.enableIcon = defaultsBool(f.enable_icon, true);\r\n\r\n        /**\r\n         * Custom text for button\r\n         * @type {String}\r\n         */\r\n        this.btnText = defaultsStr(f.btn_text, '');\r\n\r\n        /**\r\n         * Collapse button HTML\r\n         * @private\r\n         */\r\n        this.collapseBtnHtml = this.enableIcon ?\r\n            this.icnCollapseHtml + this.btnText :\r\n            this.btnText || this.defaultText;\r\n\r\n        /**\r\n         * Expand button HTML\r\n         * @private\r\n         */\r\n        this.expandBtnHtml = this.enableIcon ?\r\n            this.icnExpandHtml + this.btnText :\r\n            this.btnText || this.defaultText;\r\n\r\n        /**\r\n         * Button's custom HTML\r\n         * @type {String}\r\n         */\r\n        this.btnHtml = defaultsStr(f.btn_html, null);\r\n\r\n        /**\r\n         * Css class for expand/collapse filters button\r\n         * @type {String}\r\n         */\r\n        this.btnCssClass = defaultsStr(f.btn_css_class, 'btnExpClpFlt');\r\n\r\n        /**\r\n         * Css class for main container\r\n         * @type {String}\r\n         */\r\n        this.contCssClass = defaultsStr(f.cont_css_class, 'expClpFlt');\r\n\r\n        /**\r\n         * Filters row index\r\n         * @type {Number}\r\n         */\r\n        this.filtersRowIndex = defaultsNb(f.filters_row_index,\r\n            tf.getFiltersRowIndex());\r\n\r\n        /**\r\n         * Make filters visible at initialization, defaults to true\r\n         * @type {Boolean}\r\n         */\r\n        this.visibleAtStart = defaultsNb(f.visible_at_start, true);\r\n\r\n        /**\r\n         * Default position in toolbar ('left'|'center'|'right')\r\n         * @type {String}\r\n         */\r\n        this.toolbarPosition = defaultsStr(f.toolbar_position, RIGHT);\r\n\r\n        /**\r\n         * Callback fired before filters row is shown\r\n         * @type {Function}\r\n         */\r\n        this.onBeforeShow = defaultsFn(f.on_before_show, EMPTY_FN);\r\n\r\n        /**\r\n         * Callback fired after filters row is shown\r\n         * @type {Function}\r\n         */\r\n        this.onAfterShow = defaultsFn(f.on_after_show, EMPTY_FN);\r\n\r\n        /**\r\n         * Callback fired before filters row is hidden\r\n         * @type {Function}\r\n         */\r\n        this.onBeforeHide = defaultsFn(f.on_before_hide, EMPTY_FN);\r\n\r\n        /**\r\n         * Callback fired after filters row is hidden\r\n         * @type {Function}\r\n         */\r\n        this.onAfterHide = defaultsFn(f.on_after_hide, EMPTY_FN);\r\n\r\n        //Import extension's stylesheet\r\n        tf.import(f.name + 'Style', tf.getStylePath() + this.stylesheet, null,\r\n            'link');\r\n\r\n        this.enable();\r\n    }\r\n\r\n    /**\r\n     * Initialise extension\r\n     */\r\n    init() {\r\n        if (this.initialized) {\r\n            return;\r\n        }\r\n\r\n        this.emitter.emit('initializing-extension', this,\r\n            !isNull(this.targetId));\r\n\r\n        this.buildUI();\r\n\r\n        /** @inherited */\r\n        this.initialized = true;\r\n\r\n        this.emitter.on(['show-filters'], (tf, visible) => this.show(visible));\r\n        this.emitter.emit('filters-visibility-initialized', this.tf, this);\r\n        this.emitter.emit('extension-initialized', this);\r\n    }\r\n\r\n    /**\r\n     * Build UI elements\r\n     */\r\n    buildUI() {\r\n        let tf = this.tf;\r\n        let span = createElm('span');\r\n        span.className = this.contCssClass;\r\n\r\n        // Container element (rdiv or custom element)\r\n        let targetEl = !this.targetId ?\r\n            tf.feature('toolbar').container(this.toolbarPosition) :\r\n            elm(this.targetId);\r\n\r\n        if (!this.targetId) {\r\n            let firstChild = targetEl.firstChild;\r\n            firstChild.parentNode.insertBefore(span, firstChild);\r\n        } else {\r\n            targetEl.appendChild(span);\r\n        }\r\n\r\n        let btn;\r\n        if (!this.btnHtml) {\r\n            btn = createElm('a', ['href', 'javascript:void(0);']);\r\n            btn.className = this.btnCssClass;\r\n            btn.title = this.btnText || this.defaultText;\r\n            btn.innerHTML = this.collapseBtnHtml;\r\n            span.appendChild(btn);\r\n        } else { // Custom html\r\n            span.innerHTML = this.btnHtml;\r\n            btn = span.firstChild;\r\n        }\r\n\r\n        addEvt(btn, 'click', () => this.toggle());\r\n\r\n        this.contEl = span;\r\n        this.btnEl = btn;\r\n\r\n        if (!this.visibleAtStart) {\r\n            this.toggle();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle filters visibility\r\n     */\r\n    toggle() {\r\n        let tf = this.tf;\r\n        let tbl = tf.gridLayout ? tf.feature('gridLayout').headTbl : tf.dom();\r\n        let fltRow = tbl.rows[this.filtersRowIndex];\r\n        let isDisplayed = fltRow.style.display === '';\r\n\r\n        this.show(!isDisplayed);\r\n    }\r\n\r\n    /**\r\n     * Show or hide filters\r\n     *\r\n     * @param {boolean} [visible=true] Visibility flag\r\n     */\r\n    show(visible = true) {\r\n        let tf = this.tf;\r\n        let tbl = tf.gridLayout ? tf.feature('gridLayout').headTbl : tf.dom();\r\n        let fltRow = tbl.rows[this.filtersRowIndex];\r\n\r\n        if (visible) {\r\n            this.onBeforeShow(this);\r\n        }\r\n        if (!visible) {\r\n            this.onBeforeHide(this);\r\n        }\r\n\r\n        fltRow.style.display = visible ? '' : 'none';\r\n        if (this.enableIcon && !this.btnHtml) {\r\n            this.btnEl.innerHTML = visible ?\r\n                this.collapseBtnHtml : this.expandBtnHtml;\r\n        }\r\n\r\n        if (visible) {\r\n            this.onAfterShow(this);\r\n        }\r\n        if (!visible) {\r\n            this.onAfterHide(this);\r\n        }\r\n\r\n        this.emitter.emit('filters-toggled', tf, this, visible);\r\n    }\r\n\r\n    /**\r\n     * Destroy the UI\r\n     */\r\n    destroy() {\r\n        if (!this.initialized) {\r\n            return;\r\n        }\r\n\r\n        this.emitter.off(['show-filters'], (tf, visible) => this.show(visible));\r\n\r\n        this.btnEl.innerHTML = '';\r\n        removeElm(this.btnEl);\r\n        this.btnEl = null;\r\n\r\n        this.contEl.innerHTML = '';\r\n        removeElm(this.contEl);\r\n        this.contEl = null;\r\n        this.initialized = false;\r\n    }\r\n\r\n}\r\n","import {Feature} from '../../feature';\r\nimport {\r\n    addClass, removeClass, createCheckItem, createElm, elm, removeElm,\r\n    getText, tag\r\n} from '../../dom';\r\nimport {isUndef, EMPTY_FN, isNull} from '../../types';\r\nimport {addEvt, targetEvt, removeEvt} from '../../event';\r\nimport {root} from '../../root';\r\nimport {NONE} from '../../const';\r\nimport {\r\n    defaultsBool, defaultsStr, defaultsFn, defaultsNb, defaultsArr\r\n} from '../../settings';\r\nimport {RIGHT} from '../../modules/toolbar';\r\n\r\n/**\r\n * Columns Visibility extension\r\n */\r\nexport default class ColsVisibility extends Feature {\r\n\r\n    /**\r\n     * Creates an instance of ColsVisibility\r\n     * @param {TableFilter} tf TableFilter instance\r\n     * @param {Object} Configuration object\r\n     */\r\n    constructor(tf, f) {\r\n        super(tf, ColsVisibility);\r\n\r\n        // Configuration object\r\n        let cfg = this.config;\r\n\r\n        /**\r\n         * Module name\r\n         * @type {String}\r\n         */\r\n        this.name = f.name;\r\n\r\n        /**\r\n         * Module description\r\n         * @type {String}\r\n         */\r\n        this.desc = defaultsStr(f.description, 'Columns visibility manager');\r\n\r\n        /**\r\n         * show/hide columns container element\r\n         * @private\r\n         */\r\n        this.spanEl = null;\r\n\r\n        /**\r\n         * show/hide columns button element\r\n         * @private\r\n         */\r\n        this.btnEl = null;\r\n\r\n        /**\r\n         * show/hide columns main container element\r\n         * @private\r\n         */\r\n        this.contEl = null;\r\n\r\n        /**\r\n         * Enable tick to hide a column, defaults to true\r\n         * @type {Boolean}\r\n         */\r\n        this.tickToHide = defaultsBool(f.tick_to_hide, true);\r\n\r\n        /**\r\n         * Enable columns manager UI, defaults to true\r\n         * @type {Boolean}\r\n         */\r\n        this.manager = defaultsBool(f.manager, true);\r\n\r\n        /**\r\n         * Headers HTML table reference only if headers are external\r\n         * @type {DOMElement}\r\n         */\r\n        this.headersTbl = f.headers_table || null;\r\n\r\n        /**\r\n         * Headers row index only if headers are external\r\n         * @type {Number}\r\n         */\r\n        this.headersIndex = defaultsNb(f.headers_index, 1);\r\n\r\n        /**\r\n         * ID of main container element\r\n         * @type {String}\r\n         */\r\n        this.contElTgtId = defaultsStr(f.container_target_id, null);\r\n\r\n        /**\r\n         * Alternative text for column headers in column manager UI\r\n         * @type {Array}\r\n         */\r\n        this.headersText = defaultsArr(f.headers_text, []);\r\n\r\n        /**\r\n         * ID of button's container element\r\n         * @type {String}\r\n         */\r\n        this.btnTgtId = defaultsStr(f.btn_target_id, null);\r\n\r\n        /**\r\n         * Button's text, defaults to Columns&#9660;\r\n         * @type {String}\r\n         */\r\n        this.btnText = defaultsStr(f.btn_text, 'Columns&#9660;');\r\n\r\n        /**\r\n         * Button's inner HTML\r\n         * @type {String}\r\n         */\r\n        this.btnHtml = defaultsStr(f.btn_html, null);\r\n\r\n        /**\r\n         * Css class for button\r\n         * @type {String}\r\n         */\r\n        this.btnCssClass = defaultsStr(f.btn_css_class, 'colVis');\r\n\r\n        /**\r\n         * Columns manager UI close link text, defaults to 'Close'\r\n         * @type {String}\r\n         */\r\n        this.btnCloseText = defaultsStr(f.btn_close_text, 'Close');\r\n\r\n        /**\r\n         * Columns manager UI close link HTML\r\n         * @type {String}\r\n         */\r\n        this.btnCloseHtml = defaultsStr(f.btn_close_html, null);\r\n\r\n        /**\r\n         * Css for columns manager UI close link\r\n         * @type {String}\r\n         */\r\n        this.btnCloseCssClass = defaultsStr(f.btn_close_css_class,\r\n            this.btnCssClass);\r\n\r\n        /**\r\n         * Extension's stylesheet filename\r\n         * @type {String}\r\n         */\r\n        this.stylesheet = defaultsStr(f.stylesheet, 'colsVisibility.css');\r\n\r\n        /**\r\n         * Css for columns manager UI span\r\n         * @type {String}\r\n         */\r\n        this.spanCssClass = defaultsStr(f.span_css_class, 'colVisSpan');\r\n\r\n        /**\r\n         * Css for columns manager UI main container\r\n         * @type {String}\r\n         */\r\n        this.contCssClass = defaultsStr(f.cont_css_class, 'colVisCont');\r\n\r\n        /**\r\n         * Css for columns manager UI checklist (ul)\r\n         * @type {String}\r\n         */\r\n        this.listCssClass = defaultsStr(cfg.list_css_class, 'cols_checklist');\r\n\r\n        /**\r\n         * Css for columns manager UI checklist item (li)\r\n         * @type {String}\r\n         */\r\n        this.listItemCssClass = defaultsStr(cfg.checklist_item_css_class,\r\n            'cols_checklist_item');\r\n\r\n        /**\r\n         * Css for columns manager UI checklist item selected state (li)\r\n         * @type {String}\r\n         */\r\n        this.listSlcItemCssClass = defaultsStr(\r\n            cfg.checklist_selected_item_css_class,\r\n            'cols_checklist_slc_item'\r\n        );\r\n\r\n        /**\r\n         * Text preceding the columns list, defaults to 'Hide' or 'Show'\r\n         * depending on tick mode (tick_to_hide option)\r\n         * @type {String}\r\n         */\r\n        this.text = defaultsStr(f.text, this.tickToHide ? 'Hide: ' : 'Show: ');\r\n\r\n        /**\r\n         * List of columns indexes to be hidden at initialization\r\n         * @type {Array}\r\n         */\r\n        this.atStart = defaultsArr(f.at_start, []);\r\n\r\n        /**\r\n         * Enable hover behaviour on columns manager button/link\r\n         * @type {Boolean}\r\n         */\r\n        this.enableHover = Boolean(f.enable_hover);\r\n\r\n        /**\r\n         * Enable select all option, disabled by default\r\n         * @type {Boolean}\r\n         */\r\n        this.enableTickAll = Boolean(f.enable_tick_all);\r\n\r\n        /**\r\n         * Text for select all option, defaults to 'Select all:'\r\n         * @type {String}\r\n         */\r\n        this.tickAllText = defaultsStr(f.tick_all_text, 'Select all:');\r\n\r\n        /**\r\n         * Default position in toolbar ('left'|'center'|'right')\r\n         * @type {String}\r\n         */\r\n        this.toolbarPosition = defaultsStr(f.toolbar_position, RIGHT);\r\n\r\n        /**\r\n         * List of indexes of hidden columns\r\n         * @private\r\n         */\r\n        this.hiddenCols = [];\r\n\r\n        /**\r\n         * Bound mouseup wrapper\r\n         * @private\r\n         */\r\n        this.boundMouseup = null;\r\n\r\n        /**\r\n         * Callback fired when the extension is initialized\r\n         * @type {Function}\r\n         */\r\n        this.onLoaded = defaultsFn(f.on_loaded, EMPTY_FN);\r\n\r\n        /**\r\n         * Callback fired before the columns manager is opened\r\n         * @type {Function}\r\n         */\r\n        this.onBeforeOpen = defaultsFn(f.on_before_open, EMPTY_FN);\r\n\r\n        /**\r\n         * Callback fired after the columns manager is opened\r\n         * @type {Function}\r\n         */\r\n        this.onAfterOpen = defaultsFn(f.on_after_open, EMPTY_FN);\r\n\r\n        /**\r\n         * Callback fired before the columns manager is closed\r\n         * @type {Function}\r\n         */\r\n        this.onBeforeClose = defaultsFn(f.on_before_close, EMPTY_FN);\r\n\r\n        /**\r\n         * Callback fired after the columns manager is closed\r\n         * @type {Function}\r\n         */\r\n        this.onAfterClose = defaultsFn(f.on_after_close, EMPTY_FN);\r\n\r\n        /**\r\n         * Callback fired before a column is hidden\r\n         * @type {Function}\r\n         */\r\n        this.onBeforeColHidden = defaultsFn(f.on_before_col_hidden, EMPTY_FN);\r\n\r\n        /**\r\n         * Callback fired after a column is hidden\r\n         * @type {Function}\r\n         */\r\n        this.onAfterColHidden = defaultsFn(f.on_after_col_hidden, EMPTY_FN);\r\n\r\n        /**\r\n         * Callback fired before a column is displayed\r\n         * @type {Function}\r\n         */\r\n        this.onBeforeColDisplayed = defaultsFn(f.on_before_col_displayed,\r\n            EMPTY_FN);\r\n\r\n        /**\r\n         * Callback fired after a column is displayed\r\n         * @type {Function}\r\n         */\r\n        this.onAfterColDisplayed = defaultsFn(f.on_after_col_displayed,\r\n            EMPTY_FN);\r\n\r\n        //Grid layout support\r\n        if (tf.gridLayout) {\r\n            this.headersTbl = tf.feature('gridLayout').headTbl; //headers table\r\n            this.headersIndex = 0; //headers index\r\n        }\r\n\r\n        //Loads extension stylesheet\r\n        tf.import(f.name + 'Style', tf.getStylePath() + this.stylesheet, null,\r\n            'link');\r\n\r\n        this.enable();\r\n    }\r\n\r\n    /**\r\n     * Mouse-up event handler handling popup auto-close behaviour\r\n     * @private\r\n     */\r\n    onMouseup(evt) {\r\n        let targetElm = targetEvt(evt);\r\n\r\n        while (targetElm && targetElm !== this.contEl\r\n            && targetElm !== this.btnEl) {\r\n            targetElm = targetElm.parentNode;\r\n        }\r\n\r\n        if (targetElm !== this.contEl && targetElm !== this.btnEl) {\r\n            this.toggle();\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Toggle columns manager UI\r\n     */\r\n    toggle() {\r\n        // ensure mouseup event handler is removed\r\n        removeEvt(root, 'mouseup', this.boundMouseup);\r\n\r\n        let contDisplay = this.contEl.style.display;\r\n\r\n        if (contDisplay !== 'inline') {\r\n            this.onBeforeOpen(this);\r\n        }\r\n        if (contDisplay === 'inline') {\r\n            this.onBeforeClose(this);\r\n        }\r\n\r\n        this.contEl.style.display = contDisplay === 'inline' ?\r\n            NONE : 'inline';\r\n\r\n        if (contDisplay !== 'inline') {\r\n            this.onAfterOpen(this);\r\n            addEvt(root, 'mouseup', this.boundMouseup);\r\n        }\r\n        if (contDisplay === 'inline') {\r\n            this.onAfterClose(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check an item in columns manager UI\r\n     * @private\r\n     */\r\n    checkItem(lbl) {\r\n        let li = lbl.parentNode;\r\n        if (!li || !lbl) {\r\n            return;\r\n        }\r\n        let isChecked = lbl.firstChild.checked;\r\n        let colIndex = lbl.firstChild.getAttribute('id').split('_')[1];\r\n        colIndex = parseInt(colIndex, 10);\r\n        if (isChecked) {\r\n            addClass(li, this.listSlcItemCssClass);\r\n        } else {\r\n            removeClass(li, this.listSlcItemCssClass);\r\n        }\r\n\r\n        let hide = false;\r\n        if ((this.tickToHide && isChecked) ||\r\n            (!this.tickToHide && !isChecked)) {\r\n            hide = true;\r\n        }\r\n        this.setHidden(colIndex, hide);\r\n    }\r\n\r\n    /**\r\n     * Initializes ColsVisibility instance\r\n     */\r\n    init() {\r\n        if (this.initialized || !this.manager) {\r\n            return;\r\n        }\r\n\r\n        this.emitter.emit('initializing-extension', this,\r\n            !isNull(this.btnTgtId));\r\n\r\n        this.emitter.on(['hide-column'],\r\n            (tf, colIndex) => this.hideCol(colIndex));\r\n\r\n        this.buildBtn();\r\n        this.buildManager();\r\n\r\n        /** @inherited */\r\n        this.initialized = true;\r\n\r\n        this.boundMouseup = this.onMouseup.bind(this);\r\n\r\n        this.emitter.emit('columns-visibility-initialized', this.tf, this);\r\n        this.emitter.emit('extension-initialized', this);\r\n\r\n        // Hide columns at start at very end of initialization, do not move\r\n        // as order is important\r\n        this._hideAtStart();\r\n    }\r\n\r\n    /**\r\n     * Build main button UI\r\n     */\r\n    buildBtn() {\r\n        if (this.btnEl) {\r\n            return;\r\n        }\r\n        let tf = this.tf;\r\n        let span = createElm('span');\r\n        span.className = this.spanCssClass;\r\n\r\n        // Container element (rdiv or custom element)\r\n        let targetEl = !this.btnTgtId ?\r\n            tf.feature('toolbar').container(this.toolbarPosition) :\r\n            elm(this.btnTgtId);\r\n\r\n        if (!this.btnTgtId) {\r\n            let firstChild = targetEl.firstChild;\r\n            firstChild.parentNode.insertBefore(span, firstChild);\r\n        } else {\r\n            targetEl.appendChild(span);\r\n        }\r\n\r\n        if (!this.btnHtml) {\r\n            let btn = createElm('a', ['href', 'javascript:;']);\r\n            btn.className = this.btnCssClass;\r\n            btn.title = this.desc;\r\n\r\n            btn.innerHTML = this.btnText;\r\n            span.appendChild(btn);\r\n            if (!this.enableHover) {\r\n                addEvt(btn, 'click', (evt) => this.toggle(evt));\r\n            } else {\r\n                addEvt(btn, 'mouseover', (evt) => this.toggle(evt));\r\n            }\r\n        } else { // Custom html\r\n            span.innerHTML = this.btnHtml;\r\n            let colVisEl = span.firstChild;\r\n            if (!this.enableHover) {\r\n                addEvt(colVisEl, 'click', (evt) => this.toggle(evt));\r\n            } else {\r\n                addEvt(colVisEl, 'mouseover', (evt) => this.toggle(evt));\r\n            }\r\n        }\r\n\r\n        this.spanEl = span;\r\n        this.btnEl = this.spanEl.firstChild;\r\n\r\n        this.onLoaded(this);\r\n    }\r\n\r\n    /**\r\n     * Build columns manager UI\r\n     */\r\n    buildManager() {\r\n        let tf = this.tf;\r\n\r\n        let container = !this.contElTgtId ?\r\n            createElm('div') :\r\n            elm(this.contElTgtId);\r\n        container.className = this.contCssClass;\r\n\r\n        //Extension description\r\n        let extNameLabel = createElm('p');\r\n        extNameLabel.innerHTML = this.text;\r\n        container.appendChild(extNameLabel);\r\n\r\n        //Headers list\r\n        let ul = createElm('ul');\r\n        ul.className = this.listCssClass;\r\n\r\n        let tbl = this.headersTbl || tf.dom();\r\n        let headerIndex = this.headersTbl ?\r\n            this.headersIndex : tf.getHeadersRowIndex();\r\n        let headerRow = tbl.rows[headerIndex];\r\n\r\n        //Tick all option\r\n        if (this.enableTickAll) {\r\n            let li = createCheckItem('col__' + tf.id, this.tickAllText,\r\n                this.tickAllText);\r\n            addClass(li, this.listItemCssClass);\r\n            ul.appendChild(li);\r\n            li.check.checked = !this.tickToHide;\r\n\r\n            addEvt(li.check, 'click', () => {\r\n                for (let h = 0; h < headerRow.cells.length; h++) {\r\n                    let itm = elm('col_' + h + '_' + tf.id);\r\n                    if (itm && li.check.checked !== itm.checked) {\r\n                        itm.click();\r\n                        itm.checked = li.check.checked;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let i = 0; i < headerRow.cells.length; i++) {\r\n            let cell = headerRow.cells[i];\r\n            let cellText = this.headersText[i] || this._getHeaderText(cell);\r\n            let liElm = createCheckItem('col_' + i + '_' + tf.id, cellText,\r\n                cellText);\r\n            addClass(liElm, this.listItemCssClass);\r\n            if (!this.tickToHide) {\r\n                addClass(liElm, this.listSlcItemCssClass);\r\n            }\r\n            ul.appendChild(liElm);\r\n            if (!this.tickToHide) {\r\n                liElm.check.checked = true;\r\n            }\r\n\r\n            addEvt(liElm.check, 'click', (evt) => {\r\n                let elm = targetEvt(evt);\r\n                let lbl = elm.parentNode;\r\n                this.checkItem(lbl);\r\n            });\r\n        }\r\n\r\n        //separator\r\n        let p = createElm('p', ['align', 'center']);\r\n        let btn;\r\n        //Close link\r\n        if (!this.btnCloseHtml) {\r\n            btn = createElm('a', ['href', 'javascript:;']);\r\n            btn.className = this.btnCloseCssClass;\r\n            btn.innerHTML = this.btnCloseText;\r\n            addEvt(btn, 'click', (evt) => this.toggle(evt));\r\n            p.appendChild(btn);\r\n        } else {\r\n            p.innerHTML = this.btnCloseHtml;\r\n            btn = p.firstChild;\r\n            addEvt(btn, 'click', (evt) => this.toggle(evt));\r\n        }\r\n\r\n        container.appendChild(ul);\r\n        container.appendChild(p);\r\n\r\n        this.btnEl.parentNode.insertBefore(container, this.btnEl);\r\n        this.contEl = container;\r\n    }\r\n\r\n    /**\r\n     * Hide or show specified columns\r\n     * @param {Number} colIndex Column index\r\n     * @param {Boolean} hide    Hide column if true or show if false\r\n     */\r\n    setHidden(colIndex, hide) {\r\n        let tf = this.tf;\r\n        let tbl = tf.dom();\r\n\r\n        if (hide) {\r\n            this.onBeforeColHidden(this, colIndex);\r\n        } else {\r\n            this.onBeforeColDisplayed(this, colIndex);\r\n        }\r\n\r\n        this._hideElements(tbl, colIndex, hide);\r\n        if (this.headersTbl) {\r\n            this._hideElements(this.headersTbl, colIndex, hide);\r\n        }\r\n\r\n        let hiddenCols = this.hiddenCols;\r\n        let itemIndex = hiddenCols.indexOf(colIndex);\r\n        if (hide) {\r\n            if (itemIndex === -1) {\r\n                this.hiddenCols.push(colIndex);\r\n            }\r\n        } else {\r\n            if (itemIndex !== -1) {\r\n                this.hiddenCols.splice(itemIndex, 1);\r\n            }\r\n        }\r\n\r\n        if (hide) {\r\n            this.onAfterColHidden(this, colIndex);\r\n            this.emitter.emit('column-hidden', tf, this, colIndex,\r\n                this.hiddenCols);\r\n        } else {\r\n            this.onAfterColDisplayed(this, colIndex);\r\n            this.emitter.emit('column-shown', tf, this, colIndex,\r\n                this.hiddenCols);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Show specified column\r\n     * @param  {Number} colIndex Column index\r\n     */\r\n    showCol(colIndex) {\r\n        if (isUndef(colIndex) || !this.isColHidden(colIndex)) {\r\n            return;\r\n        }\r\n        if (this.manager && this.contEl) {\r\n            let itm = elm('col_' + colIndex + '_' + this.tf.id);\r\n            if (itm) {\r\n                itm.click();\r\n            }\r\n        } else {\r\n            this.setHidden(colIndex, false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Hide specified column\r\n     * @param  {Number} colIndex Column index\r\n     */\r\n    hideCol(colIndex) {\r\n        if (isUndef(colIndex) || this.isColHidden(colIndex)) {\r\n            return;\r\n        }\r\n        if (this.manager && this.contEl) {\r\n            let itm = elm('col_' + colIndex + '_' + this.tf.id);\r\n            if (itm) {\r\n                itm.click();\r\n            }\r\n        } else {\r\n            this.setHidden(colIndex, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Determine if specified column is hidden\r\n     * @param  {Number} colIndex Column index\r\n     */\r\n    isColHidden(colIndex) {\r\n        if (this.hiddenCols.indexOf(colIndex) !== -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Toggle visibility of specified column\r\n     * @param  {Number} colIndex Column index\r\n     */\r\n    toggleCol(colIndex) {\r\n        if (isUndef(colIndex) || this.isColHidden(colIndex)) {\r\n            this.showCol(colIndex);\r\n        } else {\r\n            this.hideCol(colIndex);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Return the indexes of the columns currently hidden\r\n     * @return {Array} column indexes\r\n     */\r\n    getHiddenCols() {\r\n        return this.hiddenCols;\r\n    }\r\n\r\n    /**\r\n     * Remove the columns manager\r\n     */\r\n    destroy() {\r\n        if (!this.initialized) {\r\n            return;\r\n        }\r\n        if (elm(this.contElTgtId)) {\r\n            elm(this.contElTgtId).innerHTML = '';\r\n        } else {\r\n            this.contEl.innerHTML = '';\r\n            removeElm(this.contEl);\r\n            this.contEl = null;\r\n        }\r\n        this.btnEl.innerHTML = '';\r\n        removeElm(this.btnEl);\r\n        this.btnEl = null;\r\n\r\n        this.emitter.off(['hide-column'],\r\n            (tf, colIndex) => this.hideCol(colIndex));\r\n\r\n        this.boundMouseup = null;\r\n\r\n        this.initialized = false;\r\n    }\r\n\r\n    _getHeaderText(cell) {\r\n        if (!cell.hasChildNodes) {\r\n            return '';\r\n        }\r\n\r\n        for (let i = 0; i < cell.childNodes.length; i++) {\r\n            let n = cell.childNodes[i];\r\n            if (n.nodeType === 3) {\r\n                return n.nodeValue;\r\n            } else if (n.nodeType === 1) {\r\n                if (n.id && n.id.indexOf('popUp') !== -1) {\r\n                    continue;\r\n                } else {\r\n                    return getText(n);\r\n                }\r\n            }\r\n            continue;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    _hideElements(tbl, colIdx, hide) {\r\n        this._hideCells(tbl, colIdx, hide);\r\n        this._hideCol(tbl, colIdx, hide);\r\n    }\r\n\r\n    _hideCells(tbl, colIdx, hide) {\r\n        for (let i = 0; i < tbl.rows.length; i++) {\r\n            let row = tbl.rows[i];\r\n            let cell = row.cells[colIdx];\r\n            if (cell) {\r\n                cell.style.display = hide ? NONE : '';\r\n            }\r\n        }\r\n    }\r\n\r\n    _hideCol(tbl, colIdx, hide) {\r\n        let colElms = tag(tbl, 'col');\r\n        if (colElms.length === 0) {\r\n            return;\r\n        }\r\n        colElms[colIdx].style.display = hide ? NONE : '';\r\n    }\r\n\r\n    _hideAtStart() {\r\n        this.atStart.forEach((colIdx) => {\r\n            this.hideCol(colIdx);\r\n        });\r\n    }\r\n}\r\n","import {Feature} from '../../feature';\r\nimport {createText, elm} from '../../dom';\r\nimport {isArray, isEmpty, EMPTY_FN} from '../../types';\r\nimport {numSortAsc} from '../../sort';\r\nimport {FORMATTED_NUMBER} from '../../const';\r\nimport formatNumber from 'format-number';\r\nimport {defaultsFn, defaultsArr} from '../../settings';\r\nimport {bound} from '../../event';\r\n\r\nconst EVENTS = [\r\n    'after-filtering',\r\n    'after-page-change',\r\n    'after-page-length-change'\r\n];\r\n\r\nconst SUM = 'sum';\r\nconst MEAN = 'mean';\r\nconst MIN = 'min';\r\nconst MAX = 'max';\r\nconst MEDIAN = 'median';\r\nconst Q1 = 'q1';\r\nconst Q3 = 'q3';\r\n\r\n/**\r\n * Column calculations extension\r\n */\r\nexport default class ColOps extends Feature {\r\n\r\n    /**\r\n     * Creates an instance of ColOps\r\n     *\r\n     * @param {TableFilter} tf TableFilter instance\r\n     * @param {Object} opts Configuration object\r\n     */\r\n    constructor(tf, opts) {\r\n        super(tf, ColOps);\r\n\r\n        /**\r\n         * Callback fired before columns operations start\r\n         * @type {Function}\r\n         */\r\n        this.onBeforeOperation = defaultsFn(opts.on_before_operation, EMPTY_FN);\r\n\r\n        /**\r\n         * Callback fired after columns operations are completed\r\n         * @type {Function}\r\n         */\r\n        this.onAfterOperation = defaultsFn(opts.on_after_operation, EMPTY_FN);\r\n\r\n        /**\r\n         * Configuration options\r\n         * @type {Object}\r\n         */\r\n        this.opts = opts;\r\n\r\n        /**\r\n         * List of DOM element IDs containing column's calculation result\r\n         * @type {Array}\r\n         */\r\n        this.labelIds = defaultsArr(opts.id, []);\r\n\r\n        /**\r\n         * List of columns' indexes for calculations\r\n         * @type {Array}\r\n         */\r\n        this.colIndexes = defaultsArr(opts.col, []);\r\n\r\n        /**\r\n         * List of operations - possible values: 'sum', 'mean', 'min', 'max',\r\n         * 'median', 'q1', 'q3'\r\n         * @type {Array}\r\n         */\r\n        this.operations = defaultsArr(opts.operation, []);\r\n\r\n        /**\r\n         * List of write methods used to write the result - possible values:\r\n         * 'innerHTML', 'setValue', 'createTextNode'\r\n         * @type {Array}\r\n         */\r\n        this.outputTypes = defaultsArr(opts.write_method, []);\r\n\r\n        /**\r\n         * List of format objects used for formatting the result -\r\n         * refer to https://github.com/componitable/format-number to check\r\n         * configuration options\r\n         * @type {Array}\r\n         */\r\n        this.formatResults = defaultsArr(opts.format_result, []);\r\n\r\n        /**\r\n         * List of row indexes displaying the results\r\n         * @type {Array}\r\n         */\r\n        this.totRowIndexes = defaultsArr(opts.tot_row_index, []);\r\n\r\n        /**\r\n         * List of row indexes excluded from calculations\r\n         * @type {Array}\r\n         */\r\n        this.excludeRows = defaultsArr(opts.exclude_row, []);\r\n\r\n        /**\r\n         * List of decimal precision for calculation results\r\n         * @type {Array}\r\n         */\r\n        this.decimalPrecisions = defaultsArr(opts.decimal_precision, 2);\r\n\r\n        this.enable();\r\n    }\r\n\r\n    /**\r\n     * Initializes ColOps instance\r\n     */\r\n    init() {\r\n        if (this.initialized) {\r\n            return;\r\n        }\r\n        // subscribe to events\r\n        this.emitter.on(EVENTS, bound(this.calcAll, this));\r\n\r\n        this.calcAll();\r\n\r\n        /** @inherited */\r\n        this.initialized = true;\r\n    }\r\n\r\n    /**\r\n     * Calculates columns' values\r\n     * Configuration options are stored in 'opts' property\r\n     * - 'id' contains ids of elements showing result (array)\r\n     * - 'col' contains the columns' indexes (array)\r\n     * - 'operation' contains operation type (array, values: 'sum', 'mean',\r\n     *   'min', 'max', 'median', 'q1', 'q3')\r\n     * - 'write_method' array defines which method to use for displaying the\r\n     *    result (innerHTML, setValue, createTextNode) - default: 'innerHTML'\r\n     * - 'tot_row_index' defines in which row results are displayed\r\n     *   (integers array)\r\n     *\r\n     * - changes made by Nuovella:\r\n     * (1) optimized the routine (now it will only process each column once),\r\n     * (2) added calculations for the median, lower and upper quartile.\r\n     */\r\n    calcAll() {\r\n        let tf = this.tf;\r\n        if (!tf.isInitialized()) {\r\n            return;\r\n        }\r\n\r\n        this.onBeforeOperation(tf, this);\r\n        this.emitter.emit('before-column-operation', tf, this);\r\n\r\n        let { colIndexes, operations: colOperations, outputTypes,\r\n            totRowIndexes, excludeRows, formatResults,\r\n            decimalPrecisions } = this;\r\n\r\n        //nuovella: determine unique list of columns to operate on\r\n        let uIndexes = [];\r\n        colIndexes.forEach((val) => {\r\n            if (uIndexes.indexOf(val) === -1) {\r\n                uIndexes.push(val);\r\n            }\r\n        });\r\n\r\n        let nbCols = uIndexes.length,\r\n            rows = tf.dom().rows,\r\n            colValues = [];\r\n\r\n        for (let u = 0; u < nbCols; u++) {\r\n            //this retrieves col values\r\n            //use uIndexes because we only want to pass through this loop\r\n            //once for each column get the values in this unique column\r\n            colValues.push(\r\n                tf.getVisibleColumnData(uIndexes[u], false, excludeRows)\r\n            );\r\n\r\n            let curValues = colValues[u];\r\n\r\n            //next: calculate all operations for this column\r\n            let result = 0,\r\n                operations = [],\r\n                precisions = [],\r\n                labels = [],\r\n                writeType,\r\n                formatResult = [],\r\n                idx = 0;\r\n\r\n            for (let k = 0; k < colIndexes.length; k++) {\r\n                if (colIndexes[k] !== uIndexes[u]) {\r\n                    continue;\r\n                }\r\n                operations[idx] = (colOperations[k] || 'sum').toLowerCase();\r\n                precisions[idx] = decimalPrecisions[k];\r\n                labels[idx] = this.labelIds[k];\r\n                writeType = isArray(outputTypes) ? outputTypes[k] : null;\r\n                formatResult[idx] =\r\n                    this.configureFormat(uIndexes[u], formatResults[k]);\r\n                idx++;\r\n            }\r\n\r\n            for (let i = 0; i < idx; i++) {\r\n                // emit values before column calculation\r\n                this.emitter.emit(\r\n                    'before-column-calc',\r\n                    tf,\r\n                    this,\r\n                    uIndexes[u],\r\n                    curValues,\r\n                    operations[i],\r\n                    precisions[i]\r\n                );\r\n\r\n                result = Number(this.calc(curValues, operations[i], null));\r\n\r\n                // emit column calculation result\r\n                this.emitter.emit(\r\n                    'column-calc',\r\n                    tf,\r\n                    this,\r\n                    uIndexes[u],\r\n                    result,\r\n                    operations[i],\r\n                    precisions[i]\r\n                );\r\n\r\n                // write result in expected DOM element\r\n                this.writeResult(\r\n                    result,\r\n                    labels[i],\r\n                    writeType,\r\n                    precisions[i],\r\n                    formatResult[i]\r\n                );\r\n\r\n            }//for i\r\n\r\n            // row(s) with result are always visible\r\n            let totRow = totRowIndexes && totRowIndexes[u] ?\r\n                rows[totRowIndexes[u]] : null;\r\n            if (totRow) {\r\n                totRow.style.display = '';\r\n            }\r\n        }//for u\r\n\r\n        this.onAfterOperation(tf, this);\r\n        this.emitter.emit('after-column-operation', tf, this);\r\n    }\r\n\r\n    /**\r\n     * Make desired calculation on specified column.\r\n     * @param {Number} colIndex Column index\r\n     * @param {String} [operation=SUM] Operation type\r\n     * @param {Number} precision Decimal precision\r\n     * @returns {Number}\r\n     */\r\n    columnCalc(colIndex, operation = SUM, precision) {\r\n        let excludeRows = this.excludeRows || [];\r\n        let colValues = tf.getVisibleColumnData(colIndex, false, excludeRows);\r\n\r\n        return Number(this.calc(colValues, operation, precision));\r\n    }\r\n\r\n    /**\r\n     * Make calculation on passed values.\r\n     * @param {Array} values List of values\r\n     * @param {String} [operation=SUM] Optional operation type\r\n     * @param {Number} precision Optional result precision\r\n     * @returns {Number}\r\n     * @private\r\n     */\r\n    calc(colValues, operation = SUM, precision) {\r\n        let result = 0;\r\n\r\n        if (operation === Q1 || operation === Q3 || operation === MEDIAN) {\r\n            colValues = this.sortColumnValues(colValues, numSortAsc);\r\n        }\r\n\r\n        switch (operation) {\r\n            case MEAN:\r\n                result = this.calcMean(colValues);\r\n                break;\r\n            case SUM:\r\n                result = this.calcSum(colValues);\r\n                break;\r\n            case MIN:\r\n                result = this.calcMin(colValues);\r\n                break;\r\n            case MAX:\r\n                result = this.calcMax(colValues);\r\n                break;\r\n            case MEDIAN:\r\n                result = this.calcMedian(colValues);\r\n                break;\r\n            case Q1:\r\n                result = this.calcQ1(colValues);\r\n                break;\r\n            case Q3:\r\n                result = this.calcQ3(colValues);\r\n                break;\r\n        }\r\n\r\n        return isEmpty(precision) ? result : result.toFixed(precision);\r\n    }\r\n\r\n    /**\r\n     * Calculate the sum of passed values.\r\n     * @param {Array} [values=[]] List of values\r\n     * @returns {Number}\r\n     */\r\n    calcSum(values = []) {\r\n        if (isEmpty(values)) {\r\n            return 0;\r\n        }\r\n        let result = values.reduce((x, y) => Number(x) + Number(y));\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Calculate the mean of passed values.\r\n     * @param {Array} [values=[]] List of values\r\n     * @returns {Number}\r\n     */\r\n    calcMean(values = []) {\r\n        let result = this.calcSum(values) / values.length;\r\n        return Number(result);\r\n    }\r\n\r\n    /**\r\n     * Calculate the max value of passed values.\r\n     * @param {Array} [values=[]] List of values\r\n     * @returns {Number}\r\n     */\r\n    calcMax(values = []) {\r\n        return Math.max.apply(null, values);\r\n    }\r\n\r\n    /**\r\n     * Calculate the min value of passed values.\r\n     * @param {Array} [values=[]] List of values\r\n     * @returns {Number}\r\n     */\r\n    calcMin(values = []) {\r\n        return Math.min.apply(null, values);\r\n    }\r\n\r\n    /**\r\n     * Calculate the median of passed values.\r\n     * @param {Array} [values=[]] List of values\r\n     * @returns {Number}\r\n     */\r\n    calcMedian(values = []) {\r\n        let nbValues = values.length;\r\n        let aux = 0;\r\n        if (nbValues % 2 === 1) {\r\n            aux = Math.floor(nbValues / 2);\r\n            return Number(values[aux]);\r\n        }\r\n        return (Number(values[nbValues / 2]) +\r\n            Number(values[((nbValues / 2) - 1)])) / 2;\r\n    }\r\n\r\n    /**\r\n     * Calculate the lower quartile of passed values.\r\n     * @param {Array} [values=[]] List of values\r\n     * @returns {Number}\r\n     */\r\n    calcQ1(values = []) {\r\n        let nbValues = values.length;\r\n        let posa = 0.0;\r\n        posa = Math.floor(nbValues / 4);\r\n        if (4 * posa === nbValues) {\r\n            return (Number(values[posa - 1]) +\r\n                Number(values[posa])) / 2;\r\n        }\r\n        return Number(values[posa]);\r\n    }\r\n\r\n    /**\r\n     * Calculate the upper quartile of passed values.\r\n     * @param {Array} [values=[]] List of values\r\n     * @returns {Number}\r\n     */\r\n    calcQ3(values = []) {\r\n        let nbValues = values.length;\r\n        let posa = 0.0;\r\n        let posb = 0.0;\r\n        posa = Math.floor(nbValues / 4);\r\n        if (4 * posa === nbValues) {\r\n            posb = 3 * posa;\r\n            return (Number(values[posb]) +\r\n                Number(values[posb - 1])) / 2;\r\n        }\r\n        return Number(values[nbValues - posa - 1]);\r\n    }\r\n\r\n    /**\r\n     * Sort passed values with supplied sorter function.\r\n     * @param {Array} [values=[]] List of values to be sorted\r\n     * @param {Function} sorter Sorter function\r\n     * @returns {Array}\r\n     */\r\n    sortColumnValues(values = [], sorter) {\r\n        return values.sort(sorter);\r\n    }\r\n\r\n    /**\r\n     * Write calculation result in passed DOM element with supplied write method\r\n     * and decimal precision.\r\n     * @param {Number} [result=0] Calculation result\r\n     * @param {DOMElement} label DOM element\r\n     * @param {String} [writeType='innerhtml'] Write method\r\n     * @param {Number} [precision=2] Applied decimal precision\r\n     * @private\r\n     */\r\n    writeResult(result = 0, label, writeType = 'innerhtml',\r\n        precision = 2, format = {}) {\r\n        let labelElm = elm(label);\r\n\r\n        if (!labelElm) {\r\n            return;\r\n        }\r\n\r\n        result = result.toFixed(precision);\r\n        if (isNaN(result) || !isFinite(result)) {\r\n            result = '';\r\n        } else {\r\n            result = formatNumber(format)(result);\r\n        }\r\n\r\n        switch (writeType.toLowerCase()) {\r\n            case 'innerhtml':\r\n                labelElm.innerHTML = result;\r\n                break;\r\n            case 'setvalue':\r\n                labelElm.value = result;\r\n                break;\r\n            case 'createtextnode':\r\n                let oldNode = labelElm.firstChild;\r\n                let txtNode = createText(result);\r\n                labelElm.replaceChild(txtNode, oldNode);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Configure the format options used to format the operation result based\r\n     * on column type.\r\n     * @param {Number} colIndex Column index\r\n     * @param {Object} [format={}] Format object\r\n     * @returns {Object}\r\n     * @private\r\n     */\r\n    configureFormat(colIndex, format = {}) {\r\n        let tf = this.tf;\r\n        if (tf.hasType(colIndex, [FORMATTED_NUMBER])) {\r\n            let colType = tf.colTypes[colIndex];\r\n            if (colType.decimal && !format.decimal) {\r\n                format.decimal = colType.decimal;\r\n            }\r\n            if (colType.thousands && !format.integerSeparator) {\r\n                format.integerSeparator = colType.thousands;\r\n            }\r\n        } else {\r\n            format.decimal = format.decimal || '';\r\n            format.integerSeparator = format.integerSeparator || '';\r\n        }\r\n        return format;\r\n    }\r\n\r\n    /** Remove extension */\r\n    destroy() {\r\n        if (!this.initialized) {\r\n            return;\r\n        }\r\n        // unsubscribe to events\r\n        this.emitter.off(EVENTS, bound(this.calcAll, this));\r\n\r\n        this.initialized = false;\r\n    }\r\n\r\n}\r\n","import AdapterEzEditTable from './adapterEzEditTable';\r\n\r\nexport default AdapterEzEditTable;","module.exports = \"/*----------------------------------------------------------------------------\\\\\\r\\n|                            Sortable Table 1.12                              |\\r\\n|-----------------------------------------------------------------------------|\\r\\n|                         Created by Erik Arvidsson                           |\\r\\n|                  (http://webfx.eae.net/contact.html#erik)                   |\\r\\n|                      For WebFX (http://webfx.eae.net/)                      |\\r\\n|-----------------------------------------------------------------------------|\\r\\n| A DOM 1 based script that allows an ordinary HTML table to be sortable.     |\\r\\n|-----------------------------------------------------------------------------|\\r\\n|                  Copyright (c) 1998 - 2006 Erik Arvidsson                   |\\r\\n|-----------------------------------------------------------------------------|\\r\\n| Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not |\\r\\n| use this file except in compliance with the License.  You may obtain a copy |\\r\\n| of the License at http://www.apache.org/licenses/LICENSE-2.0                |\\r\\n| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - |\\r\\n| Unless  required  by  applicable law or  agreed  to  in  writing,  software |\\r\\n| distributed under the License is distributed on an  \\\"AS IS\\\" BASIS,  WITHOUT |\\r\\n| WARRANTIES OR  CONDITIONS OF ANY KIND,  either express or implied.  See the |\\r\\n| License  for the  specific language  governing permissions  and limitations |\\r\\n| under the License.                                                          |\\r\\n|-----------------------------------------------------------------------------|\\r\\n| 2003-01-10 | First version                                                  |\\r\\n| 2003-01-19 | Minor changes to the date parsing                              |\\r\\n| 2003-01-28 | JScript 5.0 fixes (no support for 'in' operator)               |\\r\\n| 2003-02-01 | Sloppy typo like error fixed in getInnerText                   |\\r\\n| 2003-07-04 | Added workaround for IE cellIndex bug.                         |\\r\\n| 2003-11-09 | The bDescending argument to sort was not correctly working     |\\r\\n|            | Using onclick DOM0 event if no support for addEventListener    |\\r\\n|            | or attachEvent                                                 |\\r\\n| 2004-01-13 | Adding addSortType and removeSortType which makes it a lot     |\\r\\n|            | easier to add new, custom sort types.                          |\\r\\n| 2004-01-27 | Switch to use descending = false as the default sort order.    |\\r\\n|            | Change defaultDescending to suit your needs.                   |\\r\\n| 2004-03-14 | Improved sort type None look and feel a bit                    |\\r\\n| 2004-08-26 | Made the handling of tBody and tHead more flexible. Now you    |\\r\\n|            | can use another tHead or no tHead, and you can chose some      |\\r\\n|            | other tBody.                                                   |\\r\\n| 2006-04-25 | Changed license to Apache Software License 2.0                 |\\r\\n|-----------------------------------------------------------------------------|\\r\\n| Created 2003-01-10 | All changes are in the log above. | Updated 2006-04-25 |\\r\\n\\\\----------------------------------------------------------------------------*/\\r\\n\\r\\n\\r\\nfunction SortableTable(oTable, oSortTypes) {\\r\\n\\r\\n\\tthis.sortTypes = oSortTypes || [];\\r\\n\\r\\n\\tthis.sortColumn = null;\\r\\n\\tthis.descending = null;\\r\\n\\r\\n\\tvar oThis = this;\\r\\n\\tthis._headerOnclick = function (e) {\\r\\n\\t\\toThis.headerOnclick(e);\\r\\n\\t};\\r\\n\\r\\n\\tif (oTable) {\\r\\n\\t\\tthis.setTable( oTable );\\r\\n\\t\\tthis.document = oTable.ownerDocument || oTable.document;\\r\\n\\t}\\r\\n\\telse {\\r\\n\\t\\tthis.document = document;\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t// only IE needs this\\r\\n\\tvar win = this.document.defaultView || this.document.parentWindow;\\r\\n\\tthis._onunload = function () {\\r\\n\\t\\toThis.destroy();\\r\\n\\t};\\r\\n\\tif (win && typeof win.attachEvent != \\\"undefined\\\") {\\r\\n\\t\\twin.attachEvent(\\\"onunload\\\", this._onunload);\\r\\n\\t}\\r\\n}\\r\\n\\r\\nSortableTable.gecko = navigator.product == \\\"Gecko\\\";\\r\\nSortableTable.msie = /msie/i.test(navigator.userAgent);\\r\\n// Mozilla is faster when doing the DOM manipulations on\\r\\n// an orphaned element. MSIE is not\\r\\nSortableTable.removeBeforeSort = SortableTable.gecko;\\r\\n\\r\\nSortableTable.prototype.onsort = function () {};\\r\\n\\r\\n// default sort order. true -> descending, false -> ascending\\r\\nSortableTable.prototype.defaultDescending = false;\\r\\n\\r\\n// shared between all instances. This is intentional to allow external files\\r\\n// to modify the prototype\\r\\nSortableTable.prototype._sortTypeInfo = {};\\r\\n\\r\\nSortableTable.prototype.setTable = function (oTable) {\\r\\n\\tif ( this.tHead )\\r\\n\\t\\tthis.uninitHeader();\\r\\n\\tthis.element = oTable;\\r\\n\\tthis.setTHead( oTable.tHead );\\r\\n\\tthis.setTBody( oTable.tBodies[0] );\\r\\n};\\r\\n\\r\\nSortableTable.prototype.setTHead = function (oTHead) {\\r\\n\\tif (this.tHead && this.tHead != oTHead )\\r\\n\\t\\tthis.uninitHeader();\\r\\n\\tthis.tHead = oTHead;\\r\\n\\tthis.initHeader( this.sortTypes );\\r\\n};\\r\\n\\r\\nSortableTable.prototype.setTBody = function (oTBody) {\\r\\n\\tthis.tBody = oTBody;\\r\\n};\\r\\n\\r\\nSortableTable.prototype.setSortTypes = function ( oSortTypes ) {\\r\\n\\tif ( this.tHead )\\r\\n\\t\\tthis.uninitHeader();\\r\\n\\tthis.sortTypes = oSortTypes || [];\\r\\n\\tif ( this.tHead )\\r\\n\\t\\tthis.initHeader( this.sortTypes );\\r\\n};\\r\\n\\r\\n// adds arrow containers and events\\r\\n// also binds sort type to the header cells so that reordering columns does\\r\\n// not break the sort types\\r\\nSortableTable.prototype.initHeader = function (oSortTypes) {\\r\\n\\tif (!this.tHead) return;\\r\\n\\tvar cells = this.tHead.rows[0].cells;\\r\\n\\tvar doc = this.tHead.ownerDocument || this.tHead.document;\\r\\n\\tthis.sortTypes = oSortTypes || [];\\r\\n\\tvar l = cells.length;\\r\\n\\tvar img, c;\\r\\n\\tfor (var i = 0; i < l; i++) {\\r\\n\\t\\tc = cells[i];\\r\\n\\t\\tif (this.sortTypes[i] != null && this.sortTypes[i] != \\\"None\\\") {\\r\\n\\t\\t\\timg = doc.createElement(\\\"IMG\\\");\\r\\n\\t\\t\\timg.src = \\\"images/blank.png\\\";\\r\\n\\t\\t\\tc.appendChild(img);\\r\\n\\t\\t\\tif (this.sortTypes[i] != null)\\r\\n\\t\\t\\t\\tc._sortType = this.sortTypes[i];\\r\\n\\t\\t\\tif (typeof c.addEventListener != \\\"undefined\\\")\\r\\n\\t\\t\\t\\tc.addEventListener(\\\"click\\\", this._headerOnclick, false);\\r\\n\\t\\t\\telse if (typeof c.attachEvent != \\\"undefined\\\")\\r\\n\\t\\t\\t\\tc.attachEvent(\\\"onclick\\\", this._headerOnclick);\\r\\n\\t\\t\\telse\\r\\n\\t\\t\\t\\tc.onclick = this._headerOnclick;\\r\\n\\t\\t}\\r\\n\\t\\telse\\r\\n\\t\\t{\\r\\n\\t\\t\\tc.setAttribute( \\\"_sortType\\\", oSortTypes[i] );\\r\\n\\t\\t\\tc._sortType = \\\"None\\\";\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tthis.updateHeaderArrows();\\r\\n};\\r\\n\\r\\n// remove arrows and events\\r\\nSortableTable.prototype.uninitHeader = function () {\\r\\n\\tif (!this.tHead) return;\\r\\n\\tvar cells = this.tHead.rows[0].cells;\\r\\n\\tvar l = cells.length;\\r\\n\\tvar c;\\r\\n\\tfor (var i = 0; i < l; i++) {\\r\\n\\t\\tc = cells[i];\\r\\n\\t\\tif (c._sortType != null && c._sortType != \\\"None\\\") {\\r\\n\\t\\t\\tc.removeChild(c.lastChild);\\r\\n\\t\\t\\tif (typeof c.removeEventListener != \\\"undefined\\\")\\r\\n\\t\\t\\t\\tc.removeEventListener(\\\"click\\\", this._headerOnclick, false);\\r\\n\\t\\t\\telse if (typeof c.detachEvent != \\\"undefined\\\")\\r\\n\\t\\t\\t\\tc.detachEvent(\\\"onclick\\\", this._headerOnclick);\\r\\n\\t\\t\\tc._sortType = null;\\r\\n\\t\\t\\tc.removeAttribute( \\\"_sortType\\\" );\\r\\n\\t\\t}\\r\\n\\t}\\r\\n};\\r\\n\\r\\nSortableTable.prototype.updateHeaderArrows = function () {\\r\\n\\tif (!this.tHead) return;\\r\\n\\tvar cells = this.tHead.rows[0].cells;\\r\\n\\tvar l = cells.length;\\r\\n\\tvar img;\\r\\n\\tfor (var i = 0; i < l; i++) {\\r\\n\\t\\tif (cells[i]._sortType != null && cells[i]._sortType != \\\"None\\\") {\\r\\n\\t\\t\\timg = cells[i].lastChild;\\r\\n\\t\\t\\tif (i == this.sortColumn)\\r\\n\\t\\t\\t\\timg.className = \\\"sort-arrow \\\" + (this.descending ? \\\"descending\\\" : \\\"ascending\\\");\\r\\n\\t\\t\\telse\\r\\n\\t\\t\\t\\timg.className = \\\"sort-arrow\\\";\\r\\n\\t\\t}\\r\\n\\t}\\r\\n};\\r\\n\\r\\nSortableTable.prototype.headerOnclick = function (e) {\\r\\n\\t// find TD element\\r\\n\\tvar el = e.target || e.srcElement;\\r\\n\\twhile (el.tagName != \\\"TD\\\")\\r\\n\\t\\tel = el.parentNode;\\r\\n\\r\\n\\tthis.sort(SortableTable.msie ? SortableTable.getCellIndex(el) : el.cellIndex);\\r\\n};\\r\\n\\r\\n// IE returns wrong cellIndex when columns are hidden\\r\\nSortableTable.getCellIndex = function (oTd) {\\r\\n\\tvar cells = oTd.parentNode.childNodes\\r\\n\\tvar l = cells.length;\\r\\n\\tvar i;\\r\\n\\tfor (i = 0; cells[i] != oTd && i < l; i++)\\r\\n\\t\\t;\\r\\n\\treturn i;\\r\\n};\\r\\n\\r\\nSortableTable.prototype.getSortType = function (nColumn) {\\r\\n\\treturn this.sortTypes[nColumn] || \\\"String\\\";\\r\\n};\\r\\n\\r\\n// only nColumn is required\\r\\n// if bDescending is left out the old value is taken into account\\r\\n// if sSortType is left out the sort type is found from the sortTypes array\\r\\n\\r\\nSortableTable.prototype.sort = function (nColumn, bDescending, sSortType) {\\r\\n\\tif (!this.tBody) return;\\r\\n\\tif (sSortType == null)\\r\\n\\t\\tsSortType = this.getSortType(nColumn);\\r\\n\\r\\n\\t// exit if None\\r\\n\\tif (sSortType == \\\"None\\\")\\r\\n\\t\\treturn;\\r\\n\\r\\n\\tif (bDescending == null) {\\r\\n\\t\\tif (this.sortColumn != nColumn)\\r\\n\\t\\t\\tthis.descending = this.defaultDescending;\\r\\n\\t\\telse\\r\\n\\t\\t\\tthis.descending = !this.descending;\\r\\n\\t}\\r\\n\\telse\\r\\n\\t\\tthis.descending = bDescending;\\r\\n\\r\\n\\tthis.sortColumn = nColumn;\\r\\n\\r\\n\\tif (typeof this.onbeforesort == \\\"function\\\")\\r\\n\\t\\tthis.onbeforesort();\\r\\n\\r\\n\\tvar f = this.getSortFunction(sSortType, nColumn);\\r\\n\\tvar a = this.getCache(sSortType, nColumn);\\r\\n\\tvar tBody = this.tBody;\\r\\n\\r\\n\\ta.sort(f);\\r\\n\\r\\n\\tif (this.descending)\\r\\n\\t\\ta.reverse();\\r\\n\\r\\n\\tif (SortableTable.removeBeforeSort) {\\r\\n\\t\\t// remove from doc\\r\\n\\t\\tvar nextSibling = tBody.nextSibling;\\r\\n\\t\\tvar p = tBody.parentNode;\\r\\n\\t\\tp.removeChild(tBody);\\r\\n\\t}\\r\\n\\r\\n\\t// insert in the new order\\r\\n\\tvar l = a.length;\\r\\n\\tfor (var i = 0; i < l; i++)\\r\\n\\t\\ttBody.appendChild(a[i].element);\\r\\n\\r\\n\\tif (SortableTable.removeBeforeSort) {\\r\\n\\t\\t// insert into doc\\r\\n\\t\\tp.insertBefore(tBody, nextSibling);\\r\\n\\t}\\r\\n\\r\\n\\tthis.updateHeaderArrows();\\r\\n\\r\\n\\tthis.destroyCache(a);\\r\\n\\r\\n\\tif (typeof this.onsort == \\\"function\\\")\\r\\n\\t\\tthis.onsort();\\r\\n};\\r\\n\\r\\nSortableTable.prototype.asyncSort = function (nColumn, bDescending, sSortType) {\\r\\n\\tvar oThis = this;\\r\\n\\tthis._asyncsort = function () {\\r\\n\\t\\toThis.sort(nColumn, bDescending, sSortType);\\r\\n\\t};\\r\\n\\twindow.setTimeout(this._asyncsort, 1);\\r\\n};\\r\\n\\r\\nSortableTable.prototype.getCache = function (sType, nColumn) {\\r\\n\\tif (!this.tBody) return [];\\r\\n\\tvar rows = this.tBody.rows;\\r\\n\\tvar l = rows.length;\\r\\n\\tvar a = new Array(l);\\r\\n\\tvar r;\\r\\n\\tfor (var i = 0; i < l; i++) {\\r\\n\\t\\tr = rows[i];\\r\\n\\t\\ta[i] = {\\r\\n\\t\\t\\tvalue:\\t\\tthis.getRowValue(r, sType, nColumn),\\r\\n\\t\\t\\telement:\\tr\\r\\n\\t\\t};\\r\\n\\t};\\r\\n\\treturn a;\\r\\n};\\r\\n\\r\\nSortableTable.prototype.destroyCache = function (oArray) {\\r\\n\\tvar l = oArray.length;\\r\\n\\tfor (var i = 0; i < l; i++) {\\r\\n\\t\\toArray[i].value = null;\\r\\n\\t\\toArray[i].element = null;\\r\\n\\t\\toArray[i] = null;\\r\\n\\t}\\r\\n};\\r\\n\\r\\nSortableTable.prototype.getRowValue = function (oRow, sType, nColumn) {\\r\\n\\t// if we have defined a custom getRowValue use that\\r\\n\\tif (this._sortTypeInfo[sType] && this._sortTypeInfo[sType].getRowValue)\\r\\n\\t\\treturn this._sortTypeInfo[sType].getRowValue(oRow, nColumn);\\r\\n\\r\\n\\tvar s;\\r\\n\\tvar c = oRow.cells[nColumn];\\r\\n\\tif (typeof c.innerText != \\\"undefined\\\")\\r\\n\\t\\ts = c.innerText;\\r\\n\\telse\\r\\n\\t\\ts = SortableTable.getInnerText(c);\\r\\n\\treturn this.getValueFromString(s, sType);\\r\\n};\\r\\n\\r\\nSortableTable.getInnerText = function (oNode) {\\r\\n\\tvar s = \\\"\\\";\\r\\n\\tvar cs = oNode.childNodes;\\r\\n\\tvar l = cs.length;\\r\\n\\tfor (var i = 0; i < l; i++) {\\r\\n\\t\\tswitch (cs[i].nodeType) {\\r\\n\\t\\t\\tcase 1: //ELEMENT_NODE\\r\\n\\t\\t\\t\\ts += SortableTable.getInnerText(cs[i]);\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\tcase 3:\\t//TEXT_NODE\\r\\n\\t\\t\\t\\ts += cs[i].nodeValue;\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\treturn s;\\r\\n};\\r\\n\\r\\nSortableTable.prototype.getValueFromString = function (sText, sType) {\\r\\n\\tif (this._sortTypeInfo[sType])\\r\\n\\t\\treturn this._sortTypeInfo[sType].getValueFromString( sText );\\r\\n\\treturn sText;\\r\\n\\t/*\\r\\n\\tswitch (sType) {\\r\\n\\t\\tcase \\\"Number\\\":\\r\\n\\t\\t\\treturn Number(sText);\\r\\n\\t\\tcase \\\"CaseInsensitiveString\\\":\\r\\n\\t\\t\\treturn sText.toUpperCase();\\r\\n\\t\\tcase \\\"Date\\\":\\r\\n\\t\\t\\tvar parts = sText.split(\\\"-\\\");\\r\\n\\t\\t\\tvar d = new Date(0);\\r\\n\\t\\t\\td.setFullYear(parts[0]);\\r\\n\\t\\t\\td.setDate(parts[2]);\\r\\n\\t\\t\\td.setMonth(parts[1] - 1);\\r\\n\\t\\t\\treturn d.valueOf();\\r\\n\\t}\\r\\n\\treturn sText;\\r\\n\\t*/\\r\\n\\t};\\r\\n\\r\\nSortableTable.prototype.getSortFunction = function (sType, nColumn) {\\r\\n\\tif (this._sortTypeInfo[sType])\\r\\n\\t\\treturn this._sortTypeInfo[sType].compare;\\r\\n\\treturn SortableTable.basicCompare;\\r\\n};\\r\\n\\r\\nSortableTable.prototype.destroy = function () {\\r\\n\\tthis.uninitHeader();\\r\\n\\tvar win = this.document.parentWindow;\\r\\n\\tif (win && typeof win.detachEvent != \\\"undefined\\\") {\\t// only IE needs this\\r\\n\\t\\twin.detachEvent(\\\"onunload\\\", this._onunload);\\r\\n\\t}\\r\\n\\tthis._onunload = null;\\r\\n\\tthis.element = null;\\r\\n\\tthis.tHead = null;\\r\\n\\tthis.tBody = null;\\r\\n\\tthis.document = null;\\r\\n\\tthis._headerOnclick = null;\\r\\n\\tthis.sortTypes = null;\\r\\n\\tthis._asyncsort = null;\\r\\n\\tthis.onsort = null;\\r\\n};\\r\\n\\r\\n// Adds a sort type to all instance of SortableTable\\r\\n// sType : String - the identifier of the sort type\\r\\n// fGetValueFromString : function ( s : string ) : T - A function that takes a\\r\\n//    string and casts it to a desired format. If left out the string is just\\r\\n//    returned\\r\\n// fCompareFunction : function ( n1 : T, n2 : T ) : Number - A normal JS sort\\r\\n//    compare function. Takes two values and compares them. If left out less than,\\r\\n//    <, compare is used\\r\\n// fGetRowValue : function( oRow : HTMLTRElement, nColumn : int ) : T - A function\\r\\n//    that takes the row and the column index and returns the value used to compare.\\r\\n//    If left out then the innerText is first taken for the cell and then the\\r\\n//    fGetValueFromString is used to convert that string the desired value and type\\r\\n\\r\\nSortableTable.prototype.addSortType = function (sType, fGetValueFromString, fCompareFunction, fGetRowValue) {\\r\\n\\tthis._sortTypeInfo[sType] = {\\r\\n\\t\\ttype:\\t\\t\\t\\tsType,\\r\\n\\t\\tgetValueFromString:\\tfGetValueFromString || SortableTable.idFunction,\\r\\n\\t\\tcompare:\\t\\t\\tfCompareFunction || SortableTable.basicCompare,\\r\\n\\t\\tgetRowValue:\\t\\tfGetRowValue\\r\\n\\t};\\r\\n};\\r\\n\\r\\n// this removes the sort type from all instances of SortableTable\\r\\nSortableTable.prototype.removeSortType = function (sType) {\\r\\n\\tdelete this._sortTypeInfo[sType];\\r\\n};\\r\\n\\r\\nSortableTable.basicCompare = function compare(n1, n2) {\\r\\n\\tif (n1.value < n2.value)\\r\\n\\t\\treturn -1;\\r\\n\\tif (n2.value < n1.value)\\r\\n\\t\\treturn 1;\\r\\n\\treturn 0;\\r\\n};\\r\\n\\r\\nSortableTable.idFunction = function (x) {\\r\\n\\treturn x;\\r\\n};\\r\\n\\r\\nSortableTable.toUpperCase = function (s) {\\r\\n\\treturn s.toUpperCase();\\r\\n};\\r\\n\\r\\nSortableTable.toDate = function (s) {\\r\\n\\tvar parts = s.split(\\\"-\\\");\\r\\n\\tvar d = new Date(0);\\r\\n\\td.setFullYear(parts[0]);\\r\\n\\td.setDate(parts[2]);\\r\\n\\td.setMonth(parts[1] - 1);\\r\\n\\treturn d.valueOf();\\r\\n};\\r\\n\\r\\n\\r\\n// add sort types\\r\\nSortableTable.prototype.addSortType(\\\"Number\\\", Number);\\r\\nSortableTable.prototype.addSortType(\\\"CaseInsensitiveString\\\", SortableTable.toUpperCase);\\r\\nSortableTable.prototype.addSortType(\\\"Date\\\", SortableTable.toDate);\\r\\nSortableTable.prototype.addSortType(\\\"String\\\");\\r\\n// None is a special case\\r\\n\"","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nmodule.exports = function(src) {\n\tfunction log(error) {\n\t\t(typeof console !== \"undefined\")\n\t\t&& (console.error || console.log)(\"[Script Loader]\", error);\n\t}\n\n\t// Check for IE =< 8\n\tfunction isIE() {\n\t\treturn typeof attachEvent !== \"undefined\" && typeof addEventListener === \"undefined\";\n\t}\n\n\ttry {\n\t\tif (typeof execScript !== \"undefined\" && isIE()) {\n\t\t\texecScript(src);\n\t\t} else if (typeof eval !== \"undefined\") {\n\t\t\teval.call(null, src);\n\t\t} else {\n\t\t\tlog(\"EvalError: No eval function available\");\n\t\t}\n\t} catch (error) {\n\t\tlog(error);\n\t}\n}\n","require(\"!!C:\\\\dev\\\\javascript\\\\github\\\\TableFilter\\\\node_modules\\\\script-loader\\\\addScript.js\")(require(\"!!C:\\\\dev\\\\javascript\\\\github\\\\TableFilter\\\\node_modules\\\\raw-loader\\\\index.js!C:\\\\dev\\\\javascript\\\\github\\\\TableFilter\\\\libs\\\\sortabletable.js\"))","\nmodule.exports = formatter;\nmodule.exports.default = formatter;\n\nfunction formatter(options) {\n  options = options || {};\n\n\n  // *********************************************************************************************\n  // Set defaults for negatives\n  // options.negative, options.negativeOut, options.separator retained for backward compatibility\n  // *********************************************************************************************\n\n  // type of negative; default left\n  options.negativeType = options.negativeType || (options.negative === 'R' ? 'right' : 'left')\n\n  // negative symbols '-' or '()'\n  if (typeof options.negativeLeftSymbol !== 'string') {\n    switch (options.negativeType) {\n      case 'left':\n        options.negativeLeftSymbol = '-';\n        break;\n      case 'brackets':\n        options.negativeLeftSymbol = '(';\n        break;\n      default:\n        options.negativeLeftSymbol = '';\n    }\n  }\n  if (typeof options.negativeRightSymbol !== 'string') {\n    switch (options.negativeType) {\n      case 'right':\n        options.negativeRightSymbol = '-';\n        break;\n      case 'brackets':\n        options.negativeRightSymbol = ')';\n        break;\n      default:\n        options.negativeRightSymbol = '';\n    }\n  }\n\n  // whether negative symbol should be inside/outside prefix and suffix\n\n  if (typeof options.negativeLeftOut !== \"boolean\") {\n    options.negativeLeftOut = (options.negativeOut === false ? false : true);\n  }\n  if (typeof options.negativeRightOut !== \"boolean\") {\n    options.negativeRightOut = (options.negativeOut === false ? false : true);\n  }\n\n  //prefix and suffix\n  options.prefix = options.prefix || '';\n  options.suffix = options.suffix || '';\n\n  //separators\n  if (typeof options.integerSeparator !== 'string') {\n    options.integerSeparator = (typeof options.separator === 'string' ? options.separator : ',');\n  }\n  options.decimalsSeparator = typeof options.decimalsSeparator === 'string' ? options.decimalsSeparator : '';\n  options.decimal = options.decimal || '.';\n\n  //padders\n  options.padLeft = options.padLeft || -1 //default no padding\n  options.padRight = options.padRight || -1 //default no padding\n\n  function format(number, overrideOptions) {\n    overrideOptions = overrideOptions || {};\n\n    if (number || number === 0) {\n      number = '' + number;//convert number to string if it isn't already\n    } else {\n      return '';\n    }\n\n    //identify a negative number and make it absolute\n    var output = [];\n    var negative = number.charAt(0) === '-';\n    number = number.replace(/^\\-/g, '');\n\n    //Prepare output with left hand negative and/or prefix\n    if (!options.negativeLeftOut && !overrideOptions.noUnits) {\n      output.push(options.prefix);\n    }\n    if (negative) {\n      output.push(options.negativeLeftSymbol);\n    }\n    if (options.negativeLeftOut && !overrideOptions.noUnits) {\n      output.push(options.prefix);\n    }\n\n    //Format core number\n    number = number.split('.');\n    if (options.round != null) round(number, options.round);\n    if (options.truncate != null) number[1] = truncate(number[1], options.truncate);\n    if (options.padLeft > 0) number[0] = padLeft(number[0], options.padLeft);\n    if (options.padRight > 0) number[1] = padRight(number[1], options.padRight);\n    if (!overrideOptions.noSeparator && number[1]) number[1] = addDecimalSeparators(number[1], options.decimalsSeparator);\n    if (!overrideOptions.noSeparator && number[0]) number[0] = addIntegerSeparators(number[0], options.integerSeparator);\n    output.push(number[0]);\n    if (number[1]) {\n      output.push(options.decimal);\n      output.push(number[1]);\n    }\n\n    //Prepare output with right hand negative and/or prefix\n    if (options.negativeRightOut && !overrideOptions.noUnits) {\n      output.push(options.suffix);\n    }\n    if (negative) {\n      output.push(options.negativeRightSymbol);\n    }\n    if (!options.negativeRightOut && !overrideOptions.noUnits) {\n      output.push(options.suffix);\n    }\n\n    //join output and return\n    return output.join('');\n  }\n\n  format.negative = options.negative;\n  format.negativeOut = options.negativeOut;\n  format.negativeType = options.negativeType;\n  format.negativeLeftOut = options.negativeLeftOut;\n  format.negativeLeftSymbol = options.negativeLeftSymbol;\n  format.negativeRightOut = options.negativeRightOut;\n  format.negativeRightSymbol = options.negativeRightSymbol;\n  format.prefix = options.prefix;\n  format.suffix = options.suffix;\n  format.separate = options.separate;\n  format.integerSeparator = options.integerSeparator;\n  format.decimalsSeparator = options.decimalsSeparator;\n  format.decimal = options.decimal;\n  format.padLeft = options.padLeft;\n  format.padRight = options.padRight;\n  format.truncate = options.truncate;\n  format.round = options.round;\n\n  function unformat(number, allowedSeparators) {\n    allowedSeparators = allowedSeparators || [];\n    if (options.allowedSeparators) {\n      options.allowedSeparators.forEach(function (s) { allowedSeparators.push (s); });\n    }\n    allowedSeparators.push(options.integerSeparator);\n    allowedSeparators.push(options.decimalsSeparator);\n    number = number.replace(options.prefix, '');\n    number = number.replace(options.suffix, '');\n    var newNumber = number;\n    do {\n      number = newNumber;\n      for (var i = 0; i < allowedSeparators.length; i++) {\n        newNumber = newNumber.replace(allowedSeparators[i], '');\n      }\n    } while (newNumber != number);\n    return number;\n  }\n  format.unformat = unformat;\n\n  function validate(number, allowedSeparators) {\n    number = unformat(number, allowedSeparators);\n    number = number.split(options.decimal);\n    if (number.length > 2) {\n      return false;\n    } else if (options.truncate != null && number[1] && number[1].length > options.truncate) {\n      return false;\n    }  else if (options.round != null && number[1] && number[1].length > options.round) {\n      return false;\n    } else {\n      return /^-?\\d+\\.?\\d*$/.test(number);\n    }\n  }\n  return format;\n}\n\n//where x is already the integer part of the number\nfunction addIntegerSeparators(x, separator) {\n  x += '';\n  if (!separator) return x;\n  var rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x)) {\n    x = x.replace(rgx, '$1' + separator + '$2');\n  }\n  return x;\n}\n\n//where x is already the decimal part of the number\nfunction addDecimalSeparators(x, separator) {\n  x += '';\n  if (!separator) return x;\n  var rgx = /(\\d{3})(\\d+)/;\n  while (rgx.test(x)) {\n    x = x.replace(rgx, '$1' + separator + '$2');\n  }\n  return x;\n}\n\n//where x is the integer part of the number\nfunction padLeft(x, padding) {\n  x = x + '';\n  var buf = [];\n  while (buf.length + x.length < padding) {\n    buf.push('0');\n  }\n  return buf.join('') + x;\n}\n\n//where x is the decimals part of the number\nfunction padRight(x, padding) {\n  if (x) {\n    x += '';\n  } else {\n    x = '';\n  }\n  var buf = [];\n  while (buf.length + x.length < padding) {\n    buf.push('0');\n  }\n  return x + buf.join('');\n}\nfunction truncate(x, length) {\n  if (x) {\n    x += '';\n  }\n  if (x && x.length > length) {\n    return x.substr(0, length);\n  } else {\n    return x;\n  }\n}\n\n//where number is an array with 0th item as integer string and 1st item as decimal string (no negatives)\nfunction round(number, places) {\n  if (number[1] && places >= 0 && number[1].length > places) {\n    //truncate to correct number of decimal places\n    var decim = number[1].slice(0, places);\n    //if next digit was >= 5 we need to round up\n    if (+(number[1].substr(places, 1)) >= 5) {\n      //But first count leading zeros as converting to a number will loose them\n      var leadingzeros = \"\";\n      while (decim.charAt(0)===\"0\") {\n        leadingzeros = leadingzeros + \"0\";\n        decim = decim.substr(1);\n      }\n      //Then we can change decim to a number and add 1 before replacing leading zeros\n      decim = (+decim + 1) + '';\n      decim = leadingzeros + decim;\n      if (decim.length > places) {\n        //adding one has made it longer\n        number[0] = (+number[0]+ +decim.charAt(0)) + ''; //add value of firstchar to the integer part\n        decim = decim.substring(1);   //ignore the 1st char at the beginning which is the carry to the integer part\n      }\n    }\n    number[1] = decim;\n  }\n  return number;\n}\n"],"sourceRoot":""}